!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=3)}([function(e,n,t){"use strict";var r=function(e,n){return e<n?-1:e>n?1:e>=n?0:NaN},i=function(e){var n;return 1===e.length&&(n=e,e=function(e,t){return r(n(e),t)}),{left:function(n,t,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;e(n[o],t)<0?r=o+1:i=o}return r},right:function(n,t,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;e(n[o],t)>0?i=o:r=o+1}return r}}};var o=i(r);o.right,o.left;var a=Array.prototype;a.slice,a.map,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var f=function(e){for(var n,t,r,i=e.length,o=-1,a=0;++o<i;)a+=e[o].length;for(t=new Array(a);--i>=0;)for(n=(r=e[i]).length;--n>=0;)t[--a]=r[n];return t};Array.prototype.slice;var c={value:function(){}};function s(){for(var e,n=0,t=arguments.length,r={};n<t;++n){if(!(e=arguments[n]+"")||e in r)throw new Error("illegal type: "+e);r[e]=[]}return new u(r)}function u(e){this._=e}function l(e,n){for(var t,r=0,i=e.length;r<i;++r)if((t=e[r]).name===n)return t.value}function h(e,n,t){for(var r=0,i=e.length;r<i;++r)if(e[r].name===n){e[r]=c,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=t&&e.push({name:n,value:t}),e}u.prototype=s.prototype={constructor:u,on:function(e,n){var t,r,i=this._,o=(r=i,(e+"").trim().split(/^|\s+/).map(function(e){var n="",t=e.indexOf(".");if(t>=0&&(n=e.slice(t+1),e=e.slice(0,t)),e&&!r.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}})),a=-1,f=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++a<f;)if(t=(e=o[a]).type)i[t]=h(i[t],e.name,n);else if(null==n)for(t in i)i[t]=h(i[t],e.name,null);return this}for(;++a<f;)if((t=(e=o[a]).type)&&(t=l(i[t],e.name)))return t},copy:function(){var e={},n=this._;for(var t in n)e[t]=n[t].slice();return new u(e)},call:function(e,n){if((t=arguments.length-2)>0)for(var t,r,i=new Array(t),o=0;o<t;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(o=0,t=(r=this._[e]).length;o<t;++o)r[o].value.apply(n,i)},apply:function(e,n,t){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],i=0,o=r.length;i<o;++i)r[i].value.apply(n,t)}};var d=s,b="http://www.w3.org/1999/xhtml",p={svg:"http://www.w3.org/2000/svg",xhtml:b,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},_=function(e){var n=e+="",t=n.indexOf(":");return t>=0&&"xmlns"!==(n=e.slice(0,t))&&(e=e.slice(t+1)),p.hasOwnProperty(n)?{space:p[n],local:e}:e};var g=function(e){var n=_(e);return(n.local?function(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}:function(e){return function(){var n=this.ownerDocument,t=this.namespaceURI;return t===b&&n.documentElement.namespaceURI===b?n.createElement(e):n.createElementNS(t,e)}})(n)};function y(){}var m=function(e){return null==e?y:function(){return this.querySelector(e)}};function v(){return[]}var x=function(e){return null==e?v:function(){return this.querySelectorAll(e)}},w=function(e){return function(){return this.matches(e)}};if("undefined"!=typeof document){var F=document.documentElement;if(!F.matches){var k=F.webkitMatchesSelector||F.msMatchesSelector||F.mozMatchesSelector||F.oMatchesSelector;w=function(e){return function(){return k.call(this,e)}}}}var A=w,S=function(e){return new Array(e.length)};function M(e,n){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=n}M.prototype={constructor:M,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,n){return this._parent.insertBefore(e,n)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var C="$";function E(e,n,t,r,i,o){for(var a,f=0,c=n.length,s=o.length;f<s;++f)(a=n[f])?(a.__data__=o[f],r[f]=a):t[f]=new M(e,o[f]);for(;f<c;++f)(a=n[f])&&(i[f]=a)}function T(e,n,t,r,i,o,a){var f,c,s,u={},l=n.length,h=o.length,d=new Array(l);for(f=0;f<l;++f)(c=n[f])&&(d[f]=s=C+a.call(c,c.__data__,f,n),s in u?i[f]=c:u[s]=c);for(f=0;f<h;++f)(c=u[s=C+a.call(e,o[f],f,o)])?(r[f]=c,c.__data__=o[f],u[s]=null):t[f]=new M(e,o[f]);for(f=0;f<l;++f)(c=n[f])&&u[d[f]]===c&&(i[f]=c)}function D(e,n){return e<n?-1:e>n?1:e>=n?0:NaN}var N=function(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView};function P(e,n){return e.style.getPropertyValue(n)||N(e).getComputedStyle(e,null).getPropertyValue(n)}function O(e){return e.trim().split(/^|\s+/)}function I(e){return e.classList||new j(e)}function j(e){this._node=e,this._names=O(e.getAttribute("class")||"")}function B(e,n){for(var t=I(e),r=-1,i=n.length;++r<i;)t.add(n[r])}function U(e,n){for(var t=I(e),r=-1,i=n.length;++r<i;)t.remove(n[r])}j.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var n=this._names.indexOf(e);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};function L(){this.textContent=""}function z(){this.innerHTML=""}function q(){this.nextSibling&&this.parentNode.appendChild(this)}function R(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function H(){return null}function Y(){var e=this.parentNode;e&&e.removeChild(this)}function X(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function $(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var G={},W=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(G={mouseenter:"mouseover",mouseleave:"mouseout"}));function V(e,n,t){return e=Z(e,n,t),function(n){var t=n.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||e.call(this,n)}}function Z(e,n,t){return function(r){var i=W;W=r;try{e.call(this,this.__data__,n,t)}finally{W=i}}}function J(e){return function(){var n=this.__on;if(n){for(var t,r=0,i=-1,o=n.length;r<o;++r)t=n[r],e.type&&t.type!==e.type||t.name!==e.name?n[++i]=t:this.removeEventListener(t.type,t.listener,t.capture);++i?n.length=i:delete this.__on}}}function Q(e,n,t){var r=G.hasOwnProperty(e.type)?V:Z;return function(i,o,a){var f,c=this.__on,s=r(n,o,a);if(c)for(var u=0,l=c.length;u<l;++u)if((f=c[u]).type===e.type&&f.name===e.name)return this.removeEventListener(f.type,f.listener,f.capture),this.addEventListener(f.type,f.listener=s,f.capture=t),void(f.value=n);this.addEventListener(e.type,s,t),f={type:e.type,name:e.name,value:n,listener:s,capture:t},c?c.push(f):this.__on=[f]}}function K(e,n,t,r){var i=W;e.sourceEvent=W,W=e;try{return n.apply(t,r)}finally{W=i}}function ee(e,n,t){var r=N(e),i=r.CustomEvent;"function"==typeof i?i=new i(n,t):(i=r.document.createEvent("Event"),t?(i.initEvent(n,t.bubbles,t.cancelable),i.detail=t.detail):i.initEvent(n,!1,!1)),e.dispatchEvent(i)}var ne=[null];function te(e,n){this._groups=e,this._parents=n}function re(){return new te([[document.documentElement]],ne)}te.prototype=re.prototype={constructor:te,select:function(e){"function"!=typeof e&&(e=m(e));for(var n=this._groups,t=n.length,r=new Array(t),i=0;i<t;++i)for(var o,a,f=n[i],c=f.length,s=r[i]=new Array(c),u=0;u<c;++u)(o=f[u])&&(a=e.call(o,o.__data__,u,f))&&("__data__"in o&&(a.__data__=o.__data__),s[u]=a);return new te(r,this._parents)},selectAll:function(e){"function"!=typeof e&&(e=x(e));for(var n=this._groups,t=n.length,r=[],i=[],o=0;o<t;++o)for(var a,f=n[o],c=f.length,s=0;s<c;++s)(a=f[s])&&(r.push(e.call(a,a.__data__,s,f)),i.push(a));return new te(r,i)},filter:function(e){"function"!=typeof e&&(e=A(e));for(var n=this._groups,t=n.length,r=new Array(t),i=0;i<t;++i)for(var o,a=n[i],f=a.length,c=r[i]=[],s=0;s<f;++s)(o=a[s])&&e.call(o,o.__data__,s,a)&&c.push(o);return new te(r,this._parents)},data:function(e,n){if(!e)return b=new Array(this.size()),u=-1,this.each(function(e){b[++u]=e}),b;var t,r=n?T:E,i=this._parents,o=this._groups;"function"!=typeof e&&(t=e,e=function(){return t});for(var a=o.length,f=new Array(a),c=new Array(a),s=new Array(a),u=0;u<a;++u){var l=i[u],h=o[u],d=h.length,b=e.call(l,l&&l.__data__,u,i),p=b.length,_=c[u]=new Array(p),g=f[u]=new Array(p);r(l,h,_,g,s[u]=new Array(d),b,n);for(var y,m,v=0,x=0;v<p;++v)if(y=_[v]){for(v>=x&&(x=v+1);!(m=g[x])&&++x<p;);y._next=m||null}}return(f=new te(f,i))._enter=c,f._exit=s,f},enter:function(){return new te(this._enter||this._groups.map(S),this._parents)},exit:function(){return new te(this._exit||this._groups.map(S),this._parents)},merge:function(e){for(var n=this._groups,t=e._groups,r=n.length,i=t.length,o=Math.min(r,i),a=new Array(r),f=0;f<o;++f)for(var c,s=n[f],u=t[f],l=s.length,h=a[f]=new Array(l),d=0;d<l;++d)(c=s[d]||u[d])&&(h[d]=c);for(;f<r;++f)a[f]=n[f];return new te(a,this._parents)},order:function(){for(var e=this._groups,n=-1,t=e.length;++n<t;)for(var r,i=e[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&a!==r.nextSibling&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(e){function n(n,t){return n&&t?e(n.__data__,t.__data__):!n-!t}e||(e=D);for(var t=this._groups,r=t.length,i=new Array(r),o=0;o<r;++o){for(var a,f=t[o],c=f.length,s=i[o]=new Array(c),u=0;u<c;++u)(a=f[u])&&(s[u]=a);s.sort(n)}return new te(i,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){var e=new Array(this.size()),n=-1;return this.each(function(){e[++n]=this}),e},node:function(){for(var e=this._groups,n=0,t=e.length;n<t;++n)for(var r=e[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){var e=0;return this.each(function(){++e}),e},empty:function(){return!this.node()},each:function(e){for(var n=this._groups,t=0,r=n.length;t<r;++t)for(var i,o=n[t],a=0,f=o.length;a<f;++a)(i=o[a])&&e.call(i,i.__data__,a,o);return this},attr:function(e,n){var t=_(e);if(arguments.length<2){var r=this.node();return t.local?r.getAttributeNS(t.space,t.local):r.getAttribute(t)}return this.each((null==n?t.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}}:"function"==typeof n?t.local?function(e,n){return function(){var t=n.apply(this,arguments);null==t?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,t)}}:function(e,n){return function(){var t=n.apply(this,arguments);null==t?this.removeAttribute(e):this.setAttribute(e,t)}}:t.local?function(e,n){return function(){this.setAttributeNS(e.space,e.local,n)}}:function(e,n){return function(){this.setAttribute(e,n)}})(t,n))},style:function(e,n,t){return arguments.length>1?this.each((null==n?function(e){return function(){this.style.removeProperty(e)}}:"function"==typeof n?function(e,n,t){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,t)}}:function(e,n,t){return function(){this.style.setProperty(e,n,t)}})(e,n,null==t?"":t)):P(this.node(),e)},property:function(e,n){return arguments.length>1?this.each((null==n?function(e){return function(){delete this[e]}}:"function"==typeof n?function(e,n){return function(){var t=n.apply(this,arguments);null==t?delete this[e]:this[e]=t}}:function(e,n){return function(){this[e]=n}})(e,n)):this.node()[e]},classed:function(e,n){var t=O(e+"");if(arguments.length<2){for(var r=I(this.node()),i=-1,o=t.length;++i<o;)if(!r.contains(t[i]))return!1;return!0}return this.each(("function"==typeof n?function(e,n){return function(){(n.apply(this,arguments)?B:U)(this,e)}}:n?function(e){return function(){B(this,e)}}:function(e){return function(){U(this,e)}})(t,n))},text:function(e){return arguments.length?this.each(null==e?L:("function"==typeof e?function(e){return function(){var n=e.apply(this,arguments);this.textContent=null==n?"":n}}:function(e){return function(){this.textContent=e}})(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?z:("function"==typeof e?function(e){return function(){var n=e.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(e){return function(){this.innerHTML=e}})(e)):this.node().innerHTML},raise:function(){return this.each(q)},lower:function(){return this.each(R)},append:function(e){var n="function"==typeof e?e:g(e);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(e,n){var t="function"==typeof e?e:g(e),r=null==n?H:"function"==typeof n?n:m(n);return this.select(function(){return this.insertBefore(t.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Y)},clone:function(e){return this.select(e?$:X)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,n,t){var r,i,o=function(e){return e.trim().split(/^|\s+/).map(function(e){var n="",t=e.indexOf(".");return t>=0&&(n=e.slice(t+1),e=e.slice(0,t)),{type:e,name:n}})}(e+""),a=o.length;if(!(arguments.length<2)){for(f=n?Q:J,null==t&&(t=!1),r=0;r<a;++r)this.each(f(o[r],n,t));return this}var f=this.node().__on;if(f)for(var c,s=0,u=f.length;s<u;++s)for(r=0,c=f[s];r<a;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(e,n){return this.each(("function"==typeof n?function(e,n){return function(){return ee(this,e,n.apply(this,arguments))}}:function(e,n){return function(){return ee(this,e,n)}})(e,n))}};var ie=re,oe=function(e){return"string"==typeof e?new te([[document.querySelector(e)]],[document.documentElement]):new te([[e]],ne)},ae=0;function fe(){this._="@"+(++ae).toString(36)}fe.prototype=function(){return new fe}.prototype={constructor:fe,get:function(e){for(var n=this._;!(n in e);)if(!(e=e.parentNode))return;return e[n]},set:function(e,n){return e[this._]=n},remove:function(e){return this._ in e&&delete e[this._]},toString:function(){return this._}};var ce=function(){for(var e,n=W;e=n.sourceEvent;)n=e;return n},se=function(e,n){var t=e.ownerSVGElement||e;if(t.createSVGPoint){var r=t.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var i=e.getBoundingClientRect();return[n.clientX-i.left-e.clientLeft,n.clientY-i.top-e.clientTop]},ue=function(e){var n=ce();return n.changedTouches&&(n=n.changedTouches[0]),se(e,n)},le=function(e,n,t){arguments.length<3&&(t=n,n=ce().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===t)return se(e,r);return null};function he(){W.stopImmediatePropagation()}var de=function(){W.preventDefault(),W.stopImmediatePropagation()},be=function(e){var n=e.document.documentElement,t=oe(e).on("dragstart.drag",de,!0);"onselectstart"in n?t.on("selectstart.drag",de,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function pe(e,n){var t=e.document.documentElement,r=oe(e).on("dragstart.drag",null);n&&(r.on("click.drag",de,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in t?r.on("selectstart.drag",null):(t.style.MozUserSelect=t.__noselect,delete t.__noselect)}var _e=function(e){return function(){return e}};function ge(e,n,t,r,i,o,a,f,c,s){this.target=e,this.type=n,this.subject=t,this.identifier=r,this.active=i,this.x=o,this.y=a,this.dx=f,this.dy=c,this._=s}function ye(){return!W.button}function me(){return this.parentNode}function ve(e){return null==e?{x:W.x,y:W.y}:e}function xe(){return"ontouchstart"in this}ge.prototype.on=function(){var e=this._.on.apply(this._,arguments);return e===this._?this:e};var we=function(){var e,n,t,r,i=ye,o=me,a=ve,f=xe,c={},s=d("start","drag","end"),u=0,l=0;function h(e){e.on("mousedown.drag",b).filter(f).on("touchstart.drag",g).on("touchmove.drag",y).on("touchend.drag touchcancel.drag",m).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function b(){if(!r&&i.apply(this,arguments)){var a=v("mouse",o.apply(this,arguments),ue,this,arguments);a&&(oe(W.view).on("mousemove.drag",p,!0).on("mouseup.drag",_,!0),be(W.view),he(),t=!1,e=W.clientX,n=W.clientY,a("start"))}}function p(){if(de(),!t){var r=W.clientX-e,i=W.clientY-n;t=r*r+i*i>l}c.mouse("drag")}function _(){oe(W.view).on("mousemove.drag mouseup.drag",null),pe(W.view,t),de(),c.mouse("end")}function g(){if(i.apply(this,arguments)){var e,n,t=W.changedTouches,r=o.apply(this,arguments),a=t.length;for(e=0;e<a;++e)(n=v(t[e].identifier,r,le,this,arguments))&&(he(),n("start"))}}function y(){var e,n,t=W.changedTouches,r=t.length;for(e=0;e<r;++e)(n=c[t[e].identifier])&&(de(),n("drag"))}function m(){var e,n,t=W.changedTouches,i=t.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),e=0;e<i;++e)(n=c[t[e].identifier])&&(he(),n("end"))}function v(e,n,t,r,i){var o,f,l,d=t(n,e),b=s.copy();if(K(new ge(h,"beforestart",o,e,u,d[0],d[1],0,0,b),function(){return null!=(W.subject=o=a.apply(r,i))&&(f=o.x-d[0]||0,l=o.y-d[1]||0,!0)}))return function a(s){var p,_=d;switch(s){case"start":c[e]=a,p=u++;break;case"end":delete c[e],--u;case"drag":d=t(n,e),p=u}K(new ge(h,s,o,e,p,d[0]+f,d[1]+l,d[0]-_[0],d[1]-_[1],b),b.apply,b,[s,r,i])}}return h.filter=function(e){return arguments.length?(i="function"==typeof e?e:_e(!!e),h):i},h.container=function(e){return arguments.length?(o="function"==typeof e?e:_e(e),h):o},h.subject=function(e){return arguments.length?(a="function"==typeof e?e:_e(e),h):a},h.touchable=function(e){return arguments.length?(f="function"==typeof e?e:_e(!!e),h):f},h.on=function(){var e=s.on.apply(s,arguments);return e===s?h:e},h.clickDistance=function(e){return arguments.length?(l=(e=+e)*e,h):Math.sqrt(l)},h},Fe=function(e,n,t){e.prototype=n.prototype=t,t.constructor=e};function ke(e,n){var t=Object.create(e.prototype);for(var r in n)t[r]=n[r];return t}function Ae(){}var Se="\\s*([+-]?\\d+)\\s*",Me="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Ce="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Ee=/^#([0-9a-f]{3})$/,Te=/^#([0-9a-f]{6})$/,De=new RegExp("^rgb\\("+[Se,Se,Se]+"\\)$"),Ne=new RegExp("^rgb\\("+[Ce,Ce,Ce]+"\\)$"),Pe=new RegExp("^rgba\\("+[Se,Se,Se,Me]+"\\)$"),Oe=new RegExp("^rgba\\("+[Ce,Ce,Ce,Me]+"\\)$"),Ie=new RegExp("^hsl\\("+[Me,Ce,Ce]+"\\)$"),je=new RegExp("^hsla\\("+[Me,Ce,Ce,Me]+"\\)$"),Be={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Ue(e){var n;return e=(e+"").trim().toLowerCase(),(n=Ee.exec(e))?new He((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Te.exec(e))?Le(parseInt(n[1],16)):(n=De.exec(e))?new He(n[1],n[2],n[3],1):(n=Ne.exec(e))?new He(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Pe.exec(e))?ze(n[1],n[2],n[3],n[4]):(n=Oe.exec(e))?ze(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Ie.exec(e))?Xe(n[1],n[2]/100,n[3]/100,1):(n=je.exec(e))?Xe(n[1],n[2]/100,n[3]/100,n[4]):Be.hasOwnProperty(e)?Le(Be[e]):"transparent"===e?new He(NaN,NaN,NaN,0):null}function Le(e){return new He(e>>16&255,e>>8&255,255&e,1)}function ze(e,n,t,r){return r<=0&&(e=n=t=NaN),new He(e,n,t,r)}function qe(e){return e instanceof Ae||(e=Ue(e)),e?new He((e=e.rgb()).r,e.g,e.b,e.opacity):new He}function Re(e,n,t,r){return 1===arguments.length?qe(e):new He(e,n,t,null==r?1:r)}function He(e,n,t,r){this.r=+e,this.g=+n,this.b=+t,this.opacity=+r}function Ye(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function Xe(e,n,t,r){return r<=0?e=n=t=NaN:t<=0||t>=1?e=n=NaN:n<=0&&(e=NaN),new Ge(e,n,t,r)}function $e(e,n,t,r){return 1===arguments.length?function(e){if(e instanceof Ge)return new Ge(e.h,e.s,e.l,e.opacity);if(e instanceof Ae||(e=Ue(e)),!e)return new Ge;if(e instanceof Ge)return e;var n=(e=e.rgb()).r/255,t=e.g/255,r=e.b/255,i=Math.min(n,t,r),o=Math.max(n,t,r),a=NaN,f=o-i,c=(o+i)/2;return f?(a=n===o?(t-r)/f+6*(t<r):t===o?(r-n)/f+2:(n-t)/f+4,f/=c<.5?o+i:2-o-i,a*=60):f=c>0&&c<1?0:a,new Ge(a,f,c,e.opacity)}(e):new Ge(e,n,t,null==r?1:r)}function Ge(e,n,t,r){this.h=+e,this.s=+n,this.l=+t,this.opacity=+r}function We(e,n,t){return 255*(e<60?n+(t-n)*e/60:e<180?t:e<240?n+(t-n)*(240-e)/60:n)}Fe(Ae,Ue,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Fe(He,Re,ke(Ae,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new He(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new He(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+Ye(this.r)+Ye(this.g)+Ye(this.b)},toString:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),Fe(Ge,$e,ke(Ae,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Ge(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Ge(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),n=isNaN(e)||isNaN(this.s)?0:this.s,t=this.l,r=t+(t<.5?t:1-t)*n,i=2*t-r;return new He(We(e>=240?e-240:e+120,i,r),We(e,i,r),We(e<120?e+240:e-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Ve=Math.PI/180,Ze=180/Math.PI,Je=.96422,Qe=1,Ke=.82521,en=4/29,nn=6/29,tn=3*nn*nn,rn=nn*nn*nn;function on(e){if(e instanceof fn)return new fn(e.l,e.a,e.b,e.opacity);if(e instanceof bn){if(isNaN(e.h))return new fn(e.l,0,0,e.opacity);var n=e.h*Ve;return new fn(e.l,Math.cos(n)*e.c,Math.sin(n)*e.c,e.opacity)}e instanceof He||(e=qe(e));var t,r,i=ln(e.r),o=ln(e.g),a=ln(e.b),f=cn((.2225045*i+.7168786*o+.0606169*a)/Qe);return i===o&&o===a?t=r=f:(t=cn((.4360747*i+.3850649*o+.1430804*a)/Je),r=cn((.0139322*i+.0971045*o+.7141733*a)/Ke)),new fn(116*f-16,500*(t-f),200*(f-r),e.opacity)}function an(e,n,t,r){return 1===arguments.length?on(e):new fn(e,n,t,null==r?1:r)}function fn(e,n,t,r){this.l=+e,this.a=+n,this.b=+t,this.opacity=+r}function cn(e){return e>rn?Math.pow(e,1/3):e/tn+en}function sn(e){return e>nn?e*e*e:tn*(e-en)}function un(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function ln(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function hn(e){if(e instanceof bn)return new bn(e.h,e.c,e.l,e.opacity);if(e instanceof fn||(e=on(e)),0===e.a&&0===e.b)return new bn(NaN,0,e.l,e.opacity);var n=Math.atan2(e.b,e.a)*Ze;return new bn(n<0?n+360:n,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function dn(e,n,t,r){return 1===arguments.length?hn(e):new bn(e,n,t,null==r?1:r)}function bn(e,n,t,r){this.h=+e,this.c=+n,this.l=+t,this.opacity=+r}Fe(fn,an,ke(Ae,{brighter:function(e){return new fn(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new fn(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,n=isNaN(this.a)?e:e+this.a/500,t=isNaN(this.b)?e:e-this.b/200;return new He(un(3.1338561*(n=Je*sn(n))-1.6168667*(e=Qe*sn(e))-.4906146*(t=Ke*sn(t))),un(-.9787684*n+1.9161415*e+.033454*t),un(.0719453*n-.2289914*e+1.4052427*t),this.opacity)}})),Fe(bn,dn,ke(Ae,{brighter:function(e){return new bn(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new bn(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return on(this).rgb()}}));var pn=-.29227,_n=-.90649,gn=1.97294,yn=gn*_n,mn=1.78277*gn,vn=1.78277*pn- -.14861*_n;function xn(e,n,t,r){return 1===arguments.length?function(e){if(e instanceof wn)return new wn(e.h,e.s,e.l,e.opacity);e instanceof He||(e=qe(e));var n=e.r/255,t=e.g/255,r=e.b/255,i=(vn*r+yn*n-mn*t)/(vn+yn-mn),o=r-i,a=(gn*(t-i)-pn*o)/_n,f=Math.sqrt(a*a+o*o)/(gn*i*(1-i)),c=f?Math.atan2(a,o)*Ze-120:NaN;return new wn(c<0?c+360:c,f,i,e.opacity)}(e):new wn(e,n,t,null==r?1:r)}function wn(e,n,t,r){this.h=+e,this.s=+n,this.l=+t,this.opacity=+r}function Fn(e,n,t,r,i){var o=e*e,a=o*e;return((1-3*e+3*o-a)*n+(4-6*o+3*a)*t+(1+3*e+3*o-3*a)*r+a*i)/6}Fe(wn,xn,ke(Ae,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new wn(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new wn(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*Ve,n=+this.l,t=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(e),i=Math.sin(e);return new He(255*(n+t*(-.14861*r+1.78277*i)),255*(n+t*(pn*r+_n*i)),255*(n+t*(gn*r)),this.opacity)}}));var kn=function(e){return function(){return e}};function An(e,n){return function(t){return e+t*n}}function Sn(e,n){var t=n-e;return t?An(e,t>180||t<-180?t-360*Math.round(t/360):t):kn(isNaN(e)?n:e)}function Mn(e){return 1==(e=+e)?Cn:function(n,t){return t-n?function(e,n,t){return e=Math.pow(e,t),n=Math.pow(n,t)-e,t=1/t,function(r){return Math.pow(e+r*n,t)}}(n,t,e):kn(isNaN(n)?t:n)}}function Cn(e,n){var t=n-e;return t?An(e,t):kn(isNaN(e)?n:e)}var En=function e(n){var t=Mn(n);function r(e,n){var r=t((e=Re(e)).r,(n=Re(n)).r),i=t(e.g,n.g),o=t(e.b,n.b),a=Cn(e.opacity,n.opacity);return function(n){return e.r=r(n),e.g=i(n),e.b=o(n),e.opacity=a(n),e+""}}return r.gamma=e,r}(1);function Tn(e){return function(n){var t,r,i=n.length,o=new Array(i),a=new Array(i),f=new Array(i);for(t=0;t<i;++t)r=Re(n[t]),o[t]=r.r||0,a[t]=r.g||0,f[t]=r.b||0;return o=e(o),a=e(a),f=e(f),r.opacity=1,function(e){return r.r=o(e),r.g=a(e),r.b=f(e),r+""}}}var Dn=Tn(function(e){var n=e.length-1;return function(t){var r=t<=0?t=0:t>=1?(t=1,n-1):Math.floor(t*n),i=e[r],o=e[r+1],a=r>0?e[r-1]:2*i-o,f=r<n-1?e[r+2]:2*o-i;return Fn((t-r/n)*n,a,i,o,f)}}),Nn=(Tn(function(e){var n=e.length;return function(t){var r=Math.floor(((t%=1)<0?++t:t)*n),i=e[(r+n-1)%n],o=e[r%n],a=e[(r+1)%n],f=e[(r+2)%n];return Fn((t-r/n)*n,i,o,a,f)}}),function(e,n){return n-=e=+e,function(t){return e+n*t}}),Pn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,On=new RegExp(Pn.source,"g");var In,jn,Bn,Un,Ln=function(e,n){var t,r,i,o=Pn.lastIndex=On.lastIndex=0,a=-1,f=[],c=[];for(e+="",n+="";(t=Pn.exec(e))&&(r=On.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),f[a]?f[a]+=i:f[++a]=i),(t=t[0])===(r=r[0])?f[a]?f[a]+=r:f[++a]=r:(f[++a]=null,c.push({i:a,x:Nn(t,r)})),o=On.lastIndex;return o<n.length&&(i=n.slice(o),f[a]?f[a]+=i:f[++a]=i),f.length<2?c[0]?function(e){return function(n){return e(n)+""}}(c[0].x):function(e){return function(){return e}}(n):(n=c.length,function(e){for(var t,r=0;r<n;++r)f[(t=c[r]).i]=t.x(e);return f.join("")})},zn=180/Math.PI,qn={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Rn=function(e,n,t,r,i,o){var a,f,c;return(a=Math.sqrt(e*e+n*n))&&(e/=a,n/=a),(c=e*t+n*r)&&(t-=e*c,r-=n*c),(f=Math.sqrt(t*t+r*r))&&(t/=f,r/=f,c/=f),e*r<n*t&&(e=-e,n=-n,c=-c,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,e)*zn,skewX:Math.atan(c)*zn,scaleX:a,scaleY:f}};function Hn(e,n,t,r){function i(e){return e.length?e.pop()+" ":""}return function(o,a){var f=[],c=[];return o=e(o),a=e(a),function(e,r,i,o,a,f){if(e!==i||r!==o){var c=a.push("translate(",null,n,null,t);f.push({i:c-4,x:Nn(e,i)},{i:c-2,x:Nn(r,o)})}else(i||o)&&a.push("translate("+i+n+o+t)}(o.translateX,o.translateY,a.translateX,a.translateY,f,c),function(e,n,t,o){e!==n?(e-n>180?n+=360:n-e>180&&(e+=360),o.push({i:t.push(i(t)+"rotate(",null,r)-2,x:Nn(e,n)})):n&&t.push(i(t)+"rotate("+n+r)}(o.rotate,a.rotate,f,c),function(e,n,t,o){e!==n?o.push({i:t.push(i(t)+"skewX(",null,r)-2,x:Nn(e,n)}):n&&t.push(i(t)+"skewX("+n+r)}(o.skewX,a.skewX,f,c),function(e,n,t,r,o,a){if(e!==t||n!==r){var f=o.push(i(o)+"scale(",null,",",null,")");a.push({i:f-4,x:Nn(e,t)},{i:f-2,x:Nn(n,r)})}else 1===t&&1===r||o.push(i(o)+"scale("+t+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,f,c),o=a=null,function(e){for(var n,t=-1,r=c.length;++t<r;)f[(n=c[t]).i]=n.x(e);return f.join("")}}}var Yn=Hn(function(e){return"none"===e?qn:(In||(In=document.createElement("DIV"),jn=document.documentElement,Bn=document.defaultView),In.style.transform=e,e=Bn.getComputedStyle(jn.appendChild(In),null).getPropertyValue("transform"),jn.removeChild(In),e=e.slice(7,-1).split(","),Rn(+e[0],+e[1],+e[2],+e[3],+e[4],+e[5]))},"px, ","px)","deg)"),Xn=Hn(function(e){return null==e?qn:(Un||(Un=document.createElementNS("http://www.w3.org/2000/svg","g")),Un.setAttribute("transform",e),(e=Un.transform.baseVal.consolidate())?(e=e.matrix,Rn(e.a,e.b,e.c,e.d,e.e,e.f)):qn)},", ",")",")");Math.SQRT2;function $n(e){return function(n,t){var r=e((n=$e(n)).h,(t=$e(t)).h),i=Cn(n.s,t.s),o=Cn(n.l,t.l),a=Cn(n.opacity,t.opacity);return function(e){return n.h=r(e),n.s=i(e),n.l=o(e),n.opacity=a(e),n+""}}}$n(Sn),$n(Cn);function Gn(e){return function(n,t){var r=e((n=dn(n)).h,(t=dn(t)).h),i=Cn(n.c,t.c),o=Cn(n.l,t.l),a=Cn(n.opacity,t.opacity);return function(e){return n.h=r(e),n.c=i(e),n.l=o(e),n.opacity=a(e),n+""}}}Gn(Sn),Gn(Cn);function Wn(e){return function n(t){function r(n,r){var i=e((n=xn(n)).h,(r=xn(r)).h),o=Cn(n.s,r.s),a=Cn(n.l,r.l),f=Cn(n.opacity,r.opacity);return function(e){return n.h=i(e),n.s=o(e),n.l=a(Math.pow(e,t)),n.opacity=f(e),n+""}}return t=+t,r.gamma=n,r}(1)}Wn(Sn);var Vn=Wn(Cn);var Zn,Jn,Qn=0,Kn=0,et=0,nt=1e3,tt=0,rt=0,it=0,ot="object"==typeof performance&&performance.now?performance:Date,at="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function ft(){return rt||(at(ct),rt=ot.now()+it)}function ct(){rt=0}function st(){this._call=this._time=this._next=null}function ut(e,n,t){var r=new st;return r.restart(e,n,t),r}function lt(){rt=(tt=ot.now())+it,Qn=Kn=0;try{!function(){ft(),++Qn;for(var e,n=Zn;n;)(e=rt-n._time)>=0&&n._call.call(null,e),n=n._next;--Qn}()}finally{Qn=0,function(){var e,n,t=Zn,r=1/0;for(;t;)t._call?(r>t._time&&(r=t._time),e=t,t=t._next):(n=t._next,t._next=null,t=e?e._next=n:Zn=n);Jn=e,dt(r)}(),rt=0}}function ht(){var e=ot.now(),n=e-tt;n>nt&&(it-=n,tt=e)}function dt(e){Qn||(Kn&&(Kn=clearTimeout(Kn)),e-rt>24?(e<1/0&&(Kn=setTimeout(lt,e-ot.now()-it)),et&&(et=clearInterval(et))):(et||(tt=ot.now(),et=setInterval(ht,nt)),Qn=1,at(lt)))}st.prototype=ut.prototype={constructor:st,restart:function(e,n,t){if("function"!=typeof e)throw new TypeError("callback is not a function");t=(null==t?ft():+t)+(null==n?0:+n),this._next||Jn===this||(Jn?Jn._next=this:Zn=this,Jn=this),this._call=e,this._time=t,dt()},stop:function(){this._call&&(this._call=null,this._time=1/0,dt())}};var bt=function(e,n,t){var r=new st;return n=null==n?0:+n,r.restart(function(t){r.stop(),e(t+n)},n,t),r},pt=d("start","end","interrupt"),_t=[],gt=0,yt=1,mt=2,vt=3,xt=4,wt=5,Ft=6,kt=function(e,n,t,r,i,o){var a=e.__transition;if(a){if(t in a)return}else e.__transition={};!function(e,n,t){var r,i=e.__transition;function o(c){var s,u,l,h;if(t.state!==yt)return f();for(s in i)if((h=i[s]).name===t.name){if(h.state===vt)return bt(o);h.state===xt?(h.state=Ft,h.timer.stop(),h.on.call("interrupt",e,e.__data__,h.index,h.group),delete i[s]):+s<n&&(h.state=Ft,h.timer.stop(),delete i[s])}if(bt(function(){t.state===vt&&(t.state=xt,t.timer.restart(a,t.delay,t.time),a(c))}),t.state=mt,t.on.call("start",e,e.__data__,t.index,t.group),t.state===mt){for(t.state=vt,r=new Array(l=t.tween.length),s=0,u=-1;s<l;++s)(h=t.tween[s].value.call(e,e.__data__,t.index,t.group))&&(r[++u]=h);r.length=u+1}}function a(n){for(var i=n<t.duration?t.ease.call(null,n/t.duration):(t.timer.restart(f),t.state=wt,1),o=-1,a=r.length;++o<a;)r[o].call(null,i);t.state===wt&&(t.on.call("end",e,e.__data__,t.index,t.group),f())}function f(){for(var r in t.state=Ft,t.timer.stop(),delete i[n],i)return;delete e.__transition}i[n]=t,t.timer=ut(function(e){t.state=yt,t.timer.restart(o,t.delay,t.time),t.delay<=e&&o(e-t.delay)},0,t.time)}(e,t,{name:n,index:r,group:i,on:pt,tween:_t,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:gt})};function At(e,n){var t=Mt(e,n);if(t.state>gt)throw new Error("too late; already scheduled");return t}function St(e,n){var t=Mt(e,n);if(t.state>mt)throw new Error("too late; already started");return t}function Mt(e,n){var t=e.__transition;if(!t||!(t=t[n]))throw new Error("transition not found");return t}var Ct=function(e,n){var t,r,i,o=e.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(t=o[i]).name===n?(r=t.state>mt&&t.state<wt,t.state=Ft,t.timer.stop(),r&&t.on.call("interrupt",e,e.__data__,t.index,t.group),delete o[i]):a=!1;a&&delete e.__transition}};function Et(e,n,t){var r=e._id;return e.each(function(){var e=St(this,r);(e.value||(e.value={}))[n]=t.apply(this,arguments)}),function(e){return Mt(e,r).value[n]}}var Tt=function(e,n){var t;return("number"==typeof n?Nn:n instanceof Ue?En:(t=Ue(n))?(n=t,En):Ln)(e,n)};var Dt=ie.prototype.constructor;var Nt=0;function Pt(e,n,t,r){this._groups=e,this._parents=n,this._name=t,this._id=r}function Ot(){return++Nt}var It=ie.prototype;function jt(e){return+e}Pt.prototype=function(e){return ie().transition(e)}.prototype={constructor:Pt,select:function(e){var n=this._name,t=this._id;"function"!=typeof e&&(e=m(e));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var f,c,s=r[a],u=s.length,l=o[a]=new Array(u),h=0;h<u;++h)(f=s[h])&&(c=e.call(f,f.__data__,h,s))&&("__data__"in f&&(c.__data__=f.__data__),l[h]=c,kt(l[h],n,t,h,l,Mt(f,t)));return new Pt(o,this._parents,n,t)},selectAll:function(e){var n=this._name,t=this._id;"function"!=typeof e&&(e=x(e));for(var r=this._groups,i=r.length,o=[],a=[],f=0;f<i;++f)for(var c,s=r[f],u=s.length,l=0;l<u;++l)if(c=s[l]){for(var h,d=e.call(c,c.__data__,l,s),b=Mt(c,t),p=0,_=d.length;p<_;++p)(h=d[p])&&kt(h,n,t,p,d,b);o.push(d),a.push(c)}return new Pt(o,a,n,t)},filter:function(e){"function"!=typeof e&&(e=A(e));for(var n=this._groups,t=n.length,r=new Array(t),i=0;i<t;++i)for(var o,a=n[i],f=a.length,c=r[i]=[],s=0;s<f;++s)(o=a[s])&&e.call(o,o.__data__,s,a)&&c.push(o);return new Pt(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var n=this._groups,t=e._groups,r=n.length,i=t.length,o=Math.min(r,i),a=new Array(r),f=0;f<o;++f)for(var c,s=n[f],u=t[f],l=s.length,h=a[f]=new Array(l),d=0;d<l;++d)(c=s[d]||u[d])&&(h[d]=c);for(;f<r;++f)a[f]=n[f];return new Pt(a,this._parents,this._name,this._id)},selection:function(){return new Dt(this._groups,this._parents)},transition:function(){for(var e=this._name,n=this._id,t=Ot(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,f=r[o],c=f.length,s=0;s<c;++s)if(a=f[s]){var u=Mt(a,n);kt(a,e,t,s,f,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new Pt(r,this._parents,e,t)},call:It.call,nodes:It.nodes,node:It.node,size:It.size,empty:It.empty,each:It.each,on:function(e,n){var t=this._id;return arguments.length<2?Mt(this.node(),t).on.on(e):this.each(function(e,n,t){var r,i,o=function(e){return(e+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||"start"===e})}(n)?At:St;return function(){var a=o(this,e),f=a.on;f!==r&&(i=(r=f).copy()).on(n,t),a.on=i}}(t,e,n))},attr:function(e,n){var t=_(e),r="transform"===t?Xn:Tt;return this.attrTween(e,"function"==typeof n?(t.local?function(e,n,t){var r,i,o;return function(){var a,f=t(this);if(null!=f)return(a=this.getAttributeNS(e.space,e.local))===f?null:a===r&&f===i?o:o=n(r=a,i=f);this.removeAttributeNS(e.space,e.local)}}:function(e,n,t){var r,i,o;return function(){var a,f=t(this);if(null!=f)return(a=this.getAttribute(e))===f?null:a===r&&f===i?o:o=n(r=a,i=f);this.removeAttribute(e)}})(t,r,Et(this,"attr."+e,n)):null==n?(t.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}})(t):(t.local?function(e,n,t){var r,i;return function(){var o=this.getAttributeNS(e.space,e.local);return o===t?null:o===r?i:i=n(r=o,t)}}:function(e,n,t){var r,i;return function(){var o=this.getAttribute(e);return o===t?null:o===r?i:i=n(r=o,t)}})(t,r,n+""))},attrTween:function(e,n){var t="attr."+e;if(arguments.length<2)return(t=this.tween(t))&&t._value;if(null==n)return this.tween(t,null);if("function"!=typeof n)throw new Error;var r=_(e);return this.tween(t,(r.local?function(e,n){function t(){var t=this,r=n.apply(t,arguments);return r&&function(n){t.setAttributeNS(e.space,e.local,r(n))}}return t._value=n,t}:function(e,n){function t(){var t=this,r=n.apply(t,arguments);return r&&function(n){t.setAttribute(e,r(n))}}return t._value=n,t})(r,n))},style:function(e,n,t){var r="transform"==(e+="")?Yn:Tt;return null==n?this.styleTween(e,function(e,n){var t,r,i;return function(){var o=P(this,e),a=(this.style.removeProperty(e),P(this,e));return o===a?null:o===t&&a===r?i:i=n(t=o,r=a)}}(e,r)).on("end.style."+e,function(e){return function(){this.style.removeProperty(e)}}(e)):this.styleTween(e,"function"==typeof n?function(e,n,t){var r,i,o;return function(){var a=P(this,e),f=t(this);return null==f&&(this.style.removeProperty(e),f=P(this,e)),a===f?null:a===r&&f===i?o:o=n(r=a,i=f)}}(e,r,Et(this,"style."+e,n)):function(e,n,t){var r,i;return function(){var o=P(this,e);return o===t?null:o===r?i:i=n(r=o,t)}}(e,r,n+""),t)},styleTween:function(e,n,t){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(e,n,t){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(e,i(n),t)}}return r._value=n,r}(e,n,null==t?"":t))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var n=e(this);this.textContent=null==n?"":n}}(Et(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},remove:function(){return this.on("end.remove",(e=this._id,function(){var n=this.parentNode;for(var t in this.__transition)if(+t!==e)return;n&&n.removeChild(this)}));var e},tween:function(e,n){var t=this._id;if(e+="",arguments.length<2){for(var r,i=Mt(this.node(),t).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===e)return r.value;return null}return this.each((null==n?function(e,n){var t,r;return function(){var i=St(this,e),o=i.tween;if(o!==t)for(var a=0,f=(r=t=o).length;a<f;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}:function(e,n,t){var r,i;if("function"!=typeof t)throw new Error;return function(){var o=St(this,e),a=o.tween;if(a!==r){i=(r=a).slice();for(var f={name:n,value:t},c=0,s=i.length;c<s;++c)if(i[c].name===n){i[c]=f;break}c===s&&i.push(f)}o.tween=i}})(t,e,n))},delay:function(e){var n=this._id;return arguments.length?this.each(("function"==typeof e?function(e,n){return function(){At(this,e).delay=+n.apply(this,arguments)}}:function(e,n){return n=+n,function(){At(this,e).delay=n}})(n,e)):Mt(this.node(),n).delay},duration:function(e){var n=this._id;return arguments.length?this.each(("function"==typeof e?function(e,n){return function(){St(this,e).duration=+n.apply(this,arguments)}}:function(e,n){return n=+n,function(){St(this,e).duration=n}})(n,e)):Mt(this.node(),n).duration},ease:function(e){var n=this._id;return arguments.length?this.each(function(e,n){if("function"!=typeof n)throw new Error;return function(){St(this,e).ease=n}}(n,e)):Mt(this.node(),n).ease}};(function e(n){function t(e){return Math.pow(e,n)}return n=+n,t.exponent=e,t})(3),function e(n){function t(e){return 1-Math.pow(1-e,n)}return n=+n,t.exponent=e,t}(3),function e(n){function t(e){return((e*=2)<=1?Math.pow(e,n):2-Math.pow(2-e,n))/2}return n=+n,t.exponent=e,t}(3),Math.PI;(function e(n){function t(e){return e*e*((n+1)*e-n)}return n=+n,t.overshoot=e,t})(1.70158),function e(n){function t(e){return--e*e*((n+1)*e+n)+1}return n=+n,t.overshoot=e,t}(1.70158),function e(n){function t(e){return((e*=2)<1?e*e*((n+1)*e-n):(e-=2)*e*((n+1)*e+n)+2)/2}return n=+n,t.overshoot=e,t}(1.70158);var Bt=2*Math.PI,Ut=(function e(n,t){var r=Math.asin(1/(n=Math.max(1,n)))*(t/=Bt);function i(e){return n*Math.pow(2,10*--e)*Math.sin((r-e)/t)}return i.amplitude=function(n){return e(n,t*Bt)},i.period=function(t){return e(n,t)},i}(1,.3),function e(n,t){var r=Math.asin(1/(n=Math.max(1,n)))*(t/=Bt);function i(e){return 1-n*Math.pow(2,-10*(e=+e))*Math.sin((e+r)/t)}return i.amplitude=function(n){return e(n,t*Bt)},i.period=function(t){return e(n,t)},i}(1,.3),function e(n,t){var r=Math.asin(1/(n=Math.max(1,n)))*(t/=Bt);function i(e){return((e=2*e-1)<0?n*Math.pow(2,10*e)*Math.sin((r-e)/t):2-n*Math.pow(2,-10*e)*Math.sin((r+e)/t))/2}return i.amplitude=function(n){return e(n,t*Bt)},i.period=function(t){return e(n,t)},i}(1,.3),{time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}});function Lt(e,n){for(var t;!(t=e.__transition)||!(t=t[n]);)if(!(e=e.parentNode))return Ut.time=ft(),Ut;return t}ie.prototype.interrupt=function(e){return this.each(function(){Ct(this,e)})},ie.prototype.transition=function(e){var n,t;e instanceof Pt?(n=e._id,e=e._name):(n=Ot(),(t=Ut).time=ft(),e=null==e?null:e+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,f=r[o],c=f.length,s=0;s<c;++s)(a=f[s])&&kt(a,e,n,s,f,t||Lt(a,n));return new Pt(r,this._parents,e,n)};["e","w"].map(zt),["n","s"].map(zt),["n","e","s","w","nw","ne","se","sw"].map(zt);function zt(e){return{type:e}}Math.cos,Math.sin,Math.PI,Math.max;Array.prototype.slice;var qt=Math.PI,Rt=2*qt,Ht=Rt-1e-6;function Yt(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Xt(){return new Yt}Yt.prototype=Xt.prototype={constructor:Yt,moveTo:function(e,n){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,n){this._+="L"+(this._x1=+e)+","+(this._y1=+n)},quadraticCurveTo:function(e,n,t,r){this._+="Q"+ +e+","+ +n+","+(this._x1=+t)+","+(this._y1=+r)},bezierCurveTo:function(e,n,t,r,i,o){this._+="C"+ +e+","+ +n+","+ +t+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(e,n,t,r,i){e=+e,n=+n,t=+t,r=+r,i=+i;var o=this._x1,a=this._y1,f=t-e,c=r-n,s=o-e,u=a-n,l=s*s+u*u;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=e)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(u*f-c*s)>1e-6&&i){var h=t-o,d=r-a,b=f*f+c*c,p=h*h+d*d,_=Math.sqrt(b),g=Math.sqrt(l),y=i*Math.tan((qt-Math.acos((b+l-p)/(2*_*g)))/2),m=y/g,v=y/_;Math.abs(m-1)>1e-6&&(this._+="L"+(e+m*s)+","+(n+m*u)),this._+="A"+i+","+i+",0,0,"+ +(u*h>s*d)+","+(this._x1=e+v*f)+","+(this._y1=n+v*c)}else this._+="L"+(this._x1=e)+","+(this._y1=n);else;},arc:function(e,n,t,r,i,o){e=+e,n=+n;var a=(t=+t)*Math.cos(r),f=t*Math.sin(r),c=e+a,s=n+f,u=1^o,l=o?r-i:i-r;if(t<0)throw new Error("negative radius: "+t);null===this._x1?this._+="M"+c+","+s:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-s)>1e-6)&&(this._+="L"+c+","+s),t&&(l<0&&(l=l%Rt+Rt),l>Ht?this._+="A"+t+","+t+",0,1,"+u+","+(e-a)+","+(n-f)+"A"+t+","+t+",0,1,"+u+","+(this._x1=c)+","+(this._y1=s):l>1e-6&&(this._+="A"+t+","+t+",0,"+ +(l>=qt)+","+u+","+(this._x1=e+t*Math.cos(i))+","+(this._y1=n+t*Math.sin(i))))},rect:function(e,n,t,r){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+n)+"h"+ +t+"v"+ +r+"h"+-t+"Z"},toString:function(){return this._}};function $t(){}function Gt(e,n){var t=new $t;if(e instanceof $t)e.each(function(e,n){t.set(n,e)});else if(Array.isArray(e)){var r,i=-1,o=e.length;if(null==n)for(;++i<o;)t.set(i,e[i]);else for(;++i<o;)t.set(n(r=e[i],i,e),r)}else if(e)for(var a in e)t.set(a,e[a]);return t}$t.prototype=Gt.prototype={constructor:$t,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,n){return this["$"+e]=n,this},remove:function(e){var n="$"+e;return n in this&&delete this[n]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var n in this)"$"===n[0]&&e.push(n.slice(1));return e},values:function(){var e=[];for(var n in this)"$"===n[0]&&e.push(this[n]);return e},entries:function(){var e=[];for(var n in this)"$"===n[0]&&e.push({key:n.slice(1),value:this[n]});return e},size:function(){var e=0;for(var n in this)"$"===n[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var n in this)"$"===n[0]&&e(this[n],n.slice(1),this)}};var Wt=Gt;function Vt(){}var Zt=Wt.prototype;function Jt(e,n){var t=new Vt;if(e instanceof Vt)e.each(function(e){t.add(e)});else if(e){var r=-1,i=e.length;if(null==n)for(;++r<i;)t.add(e[r]);else for(;++r<i;)t.add(n(e[r],r,e))}return t}Vt.prototype=Jt.prototype={constructor:Vt,has:Zt.has,add:function(e){return this["$"+(e+="")]=e,this},remove:Zt.remove,clear:Zt.clear,values:Zt.keys,size:Zt.size,empty:Zt.empty,each:Zt.each};Array.prototype.slice;var Qt={},Kt={},er=34,nr=10,tr=13;function rr(e){return new Function("d","return {"+e.map(function(e,n){return JSON.stringify(e)+": d["+n+"]"}).join(",")+"}")}var ir=function(e){var n=new RegExp('["'+e+"\n\r]"),t=e.charCodeAt(0);function r(e,n){var r,i=[],o=e.length,a=0,f=0,c=o<=0,s=!1;function u(){if(c)return Kt;if(s)return s=!1,Qt;var n,r,i=a;if(e.charCodeAt(i)===er){for(;a++<o&&e.charCodeAt(a)!==er||e.charCodeAt(++a)===er;);return(n=a)>=o?c=!0:(r=e.charCodeAt(a++))===nr?s=!0:r===tr&&(s=!0,e.charCodeAt(a)===nr&&++a),e.slice(i+1,n-1).replace(/""/g,'"')}for(;a<o;){if((r=e.charCodeAt(n=a++))===nr)s=!0;else if(r===tr)s=!0,e.charCodeAt(a)===nr&&++a;else if(r!==t)continue;return e.slice(i,n)}return c=!0,e.slice(i,o)}for(e.charCodeAt(o-1)===nr&&--o,e.charCodeAt(o-1)===tr&&--o;(r=u())!==Kt;){for(var l=[];r!==Qt&&r!==Kt;)l.push(r),r=u();n&&null==(l=n(l,f++))||i.push(l)}return i}function i(n){return n.map(o).join(e)}function o(e){return null==e?"":n.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e}return{parse:function(e,n){var t,i,o=r(e,function(e,r){if(t)return t(e,r-1);i=e,t=n?function(e,n){var t=rr(e);return function(r,i){return n(t(r),i,e)}}(e,n):rr(e)});return o.columns=i||[],o},parseRows:r,format:function(n,t){return null==t&&(t=function(e){var n=Object.create(null),t=[];return e.forEach(function(e){for(var r in e)r in n||t.push(n[r]=r)}),t}(n)),[t.map(o).join(e)].concat(n.map(function(n){return t.map(function(e){return o(n[e])}).join(e)})).join("\n")},formatRows:function(e){return e.map(i).join("\n")}}},or=ir(","),ar=or.parse,fr=(or.parseRows,or.format,or.formatRows,ir("\t")),cr=fr.parse;fr.parseRows,fr.format,fr.formatRows;function sr(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.text()}var ur=function(e,n){return fetch(e,n).then(sr)};function lr(e){return function(n,t,r){return 2===arguments.length&&"function"==typeof t&&(r=t,t=void 0),ur(n,t).then(function(n){return e(n,r)})}}lr(ar),lr(cr);function hr(e){return function(n,t){return ur(n,t).then(function(n){return(new DOMParser).parseFromString(n,e)})}}hr("application/xml"),hr("text/html"),hr("image/svg+xml");function dr(e,n,t,r){if(isNaN(n)||isNaN(t))return e;var i,o,a,f,c,s,u,l,h,d=e._root,b={data:r},p=e._x0,_=e._y0,g=e._x1,y=e._y1;if(!d)return e._root=b,e;for(;d.length;)if((s=n>=(o=(p+g)/2))?p=o:g=o,(u=t>=(a=(_+y)/2))?_=a:y=a,i=d,!(d=d[l=u<<1|s]))return i[l]=b,e;if(f=+e._x.call(null,d.data),c=+e._y.call(null,d.data),n===f&&t===c)return b.next=d,i?i[l]=b:e._root=b,e;do{i=i?i[l]=new Array(4):e._root=new Array(4),(s=n>=(o=(p+g)/2))?p=o:g=o,(u=t>=(a=(_+y)/2))?_=a:y=a}while((l=u<<1|s)==(h=(c>=a)<<1|f>=o));return i[h]=d,i[l]=b,e}var br=function(e,n,t,r,i){this.node=e,this.x0=n,this.y0=t,this.x1=r,this.y1=i};function pr(e){return e[0]}function _r(e){return e[1]}function gr(e,n,t){var r=new yr(null==n?pr:n,null==t?_r:t,NaN,NaN,NaN,NaN);return null==e?r:r.addAll(e)}function yr(e,n,t,r,i,o){this._x=e,this._y=n,this._x0=t,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function mr(e){for(var n={data:e.data},t=n;e=e.next;)t=t.next={data:e.data};return n}var vr=gr.prototype=yr.prototype;vr.copy=function(){var e,n,t=new yr(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return t;if(!r.length)return t._root=mr(r),t;for(e=[{source:r,target:t._root=new Array(4)}];r=e.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?e.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=mr(n));return t},vr.add=function(e){var n=+this._x.call(null,e),t=+this._y.call(null,e);return dr(this.cover(n,t),n,t,e)},vr.addAll=function(e){var n,t,r,i,o=e.length,a=new Array(o),f=new Array(o),c=1/0,s=1/0,u=-1/0,l=-1/0;for(t=0;t<o;++t)isNaN(r=+this._x.call(null,n=e[t]))||isNaN(i=+this._y.call(null,n))||(a[t]=r,f[t]=i,r<c&&(c=r),r>u&&(u=r),i<s&&(s=i),i>l&&(l=i));for(u<c&&(c=this._x0,u=this._x1),l<s&&(s=this._y0,l=this._y1),this.cover(c,s).cover(u,l),t=0;t<o;++t)dr(this,a[t],f[t],e[t]);return this},vr.cover=function(e,n){if(isNaN(e=+e)||isNaN(n=+n))return this;var t=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(t))i=(t=Math.floor(e))+1,o=(r=Math.floor(n))+1;else{if(!(t>e||e>i||r>n||n>o))return this;var a,f,c=i-t,s=this._root;switch(f=(n<(r+o)/2)<<1|e<(t+i)/2){case 0:do{(a=new Array(4))[f]=s,s=a}while(o=r+(c*=2),e>(i=t+c)||n>o);break;case 1:do{(a=new Array(4))[f]=s,s=a}while(o=r+(c*=2),(t=i-c)>e||n>o);break;case 2:do{(a=new Array(4))[f]=s,s=a}while(r=o-(c*=2),e>(i=t+c)||r>n);break;case 3:do{(a=new Array(4))[f]=s,s=a}while(r=o-(c*=2),(t=i-c)>e||r>n)}this._root&&this._root.length&&(this._root=s)}return this._x0=t,this._y0=r,this._x1=i,this._y1=o,this},vr.data=function(){var e=[];return this.visit(function(n){if(!n.length)do{e.push(n.data)}while(n=n.next)}),e},vr.extent=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},vr.find=function(e,n,t){var r,i,o,a,f,c,s,u=this._x0,l=this._y0,h=this._x1,d=this._y1,b=[],p=this._root;for(p&&b.push(new br(p,u,l,h,d)),null==t?t=1/0:(u=e-t,l=n-t,h=e+t,d=n+t,t*=t);c=b.pop();)if(!(!(p=c.node)||(i=c.x0)>h||(o=c.y0)>d||(a=c.x1)<u||(f=c.y1)<l))if(p.length){var _=(i+a)/2,g=(o+f)/2;b.push(new br(p[3],_,g,a,f),new br(p[2],i,g,_,f),new br(p[1],_,o,a,g),new br(p[0],i,o,_,g)),(s=(n>=g)<<1|e>=_)&&(c=b[b.length-1],b[b.length-1]=b[b.length-1-s],b[b.length-1-s]=c)}else{var y=e-+this._x.call(null,p.data),m=n-+this._y.call(null,p.data),v=y*y+m*m;if(v<t){var x=Math.sqrt(t=v);u=e-x,l=n-x,h=e+x,d=n+x,r=p.data}}return r},vr.remove=function(e){if(isNaN(o=+this._x.call(null,e))||isNaN(a=+this._y.call(null,e)))return this;var n,t,r,i,o,a,f,c,s,u,l,h,d=this._root,b=this._x0,p=this._y0,_=this._x1,g=this._y1;if(!d)return this;if(d.length)for(;;){if((s=o>=(f=(b+_)/2))?b=f:_=f,(u=a>=(c=(p+g)/2))?p=c:g=c,n=d,!(d=d[l=u<<1|s]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(t=n,h=l)}for(;d.data!==e;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(t?t[h]=d:this._root=d),this):(this._root=i,this)},vr.removeAll=function(e){for(var n=0,t=e.length;n<t;++n)this.remove(e[n]);return this},vr.root=function(){return this._root},vr.size=function(){var e=0;return this.visit(function(n){if(!n.length)do{++e}while(n=n.next)}),e},vr.visit=function(e){var n,t,r,i,o,a,f=[],c=this._root;for(c&&f.push(new br(c,this._x0,this._y0,this._x1,this._y1));n=f.pop();)if(!e(c=n.node,r=n.x0,i=n.y0,o=n.x1,a=n.y1)&&c.length){var s=(r+o)/2,u=(i+a)/2;(t=c[3])&&f.push(new br(t,s,u,o,a)),(t=c[2])&&f.push(new br(t,r,u,s,a)),(t=c[1])&&f.push(new br(t,s,i,o,u)),(t=c[0])&&f.push(new br(t,r,i,s,u))}return this},vr.visitAfter=function(e){var n,t=[],r=[];for(this._root&&t.push(new br(this._root,this._x0,this._y0,this._x1,this._y1));n=t.pop();){var i=n.node;if(i.length){var o,a=n.x0,f=n.y0,c=n.x1,s=n.y1,u=(a+c)/2,l=(f+s)/2;(o=i[0])&&t.push(new br(o,a,f,u,l)),(o=i[1])&&t.push(new br(o,u,f,c,l)),(o=i[2])&&t.push(new br(o,a,l,u,s)),(o=i[3])&&t.push(new br(o,u,l,c,s))}r.push(n)}for(;n=r.pop();)e(n.node,n.x0,n.y0,n.x1,n.y1);return this},vr.x=function(e){return arguments.length?(this._x=e,this):this._x},vr.y=function(e){return arguments.length?(this._y=e,this):this._y};Math.PI,Math.sqrt(5);var xr=function(e,n){if((t=(e=n?e.toExponential(n-1):e.toExponential()).indexOf("e"))<0)return null;var t,r=e.slice(0,t);return[r.length>1?r[0]+r.slice(2):r,+e.slice(t+1)]},wr=function(e){return(e=xr(Math.abs(e)))?e[1]:NaN},Fr=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function kr(e){return new Ar(e)}function Ar(e){if(!(n=Fr.exec(e)))throw new Error("invalid format: "+e);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}kr.prototype=Ar.prototype,Ar.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Sr,Mr,Cr=function(e){e:for(var n,t=e.length,r=1,i=-1;r<t;++r)switch(e[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+e[r])break e;i=0}}return i>0?e.slice(0,i)+e.slice(n+1):e},Er=function(e,n){var t=xr(e,n);if(!t)return e+"";var r=t[0],i=t[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Tr={"%":function(e,n){return(100*e).toFixed(n)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,n){return e.toExponential(n)},f:function(e,n){return e.toFixed(n)},g:function(e,n){return e.toPrecision(n)},o:function(e){return Math.round(e).toString(8)},p:function(e,n){return Er(100*e,n)},r:Er,s:function(e,n){var t=xr(e,n);if(!t)return e+"";var r=t[0],i=t[1],o=i-(Sr=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+xr(e,Math.max(0,n+o-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},Dr=function(e){return e},Nr=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];Mr=function(e){var n,t,r=e.grouping&&e.thousands?(n=e.grouping,t=e.thousands,function(e,r){for(var i=e.length,o=[],a=0,f=n[0],c=0;i>0&&f>0&&(c+f+1>r&&(f=Math.max(1,r-c)),o.push(e.substring(i-=f,i+f)),!((c+=f+1)>r));)f=n[a=(a+1)%n.length];return o.reverse().join(t)}):Dr,i=e.currency,o=e.decimal,a=e.numerals?function(e){return function(n){return n.replace(/[0-9]/g,function(n){return e[+n]})}}(e.numerals):Dr,f=e.percent||"%";function c(e){var n=(e=kr(e)).fill,t=e.align,c=e.sign,s=e.symbol,u=e.zero,l=e.width,h=e.comma,d=e.precision,b=e.trim,p=e.type;"n"===p?(h=!0,p="g"):Tr[p]||(null==d&&(d=12),b=!0,p="g"),(u||"0"===n&&"="===t)&&(u=!0,n="0",t="=");var _="$"===s?i[0]:"#"===s&&/[boxX]/.test(p)?"0"+p.toLowerCase():"",g="$"===s?i[1]:/[%p]/.test(p)?f:"",y=Tr[p],m=/[defgprs%]/.test(p);function v(e){var i,f,s,v=_,x=g;if("c"===p)x=y(e)+x,e="";else{var w=(e=+e)<0;if(e=y(Math.abs(e),d),b&&(e=Cr(e)),w&&0==+e&&(w=!1),v=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+v,x=("s"===p?Nr[8+Sr/3]:"")+x+(w&&"("===c?")":""),m)for(i=-1,f=e.length;++i<f;)if(48>(s=e.charCodeAt(i))||s>57){x=(46===s?o+e.slice(i+1):e.slice(i))+x,e=e.slice(0,i);break}}h&&!u&&(e=r(e,1/0));var F=v.length+e.length+x.length,k=F<l?new Array(l-F+1).join(n):"";switch(h&&u&&(e=r(k+e,k.length?l-x.length:1/0),k=""),t){case"<":e=v+e+x+k;break;case"=":e=v+k+e+x;break;case"^":e=k.slice(0,F=k.length>>1)+v+e+x+k.slice(F);break;default:e=k+v+e+x}return a(e)}return d=null==d?6:/[gprs]/.test(p)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),v.toString=function(){return e+""},v}return{format:c,formatPrefix:function(e,n){var t=c(((e=kr(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(wr(n)/3))),i=Math.pow(10,-r),o=Nr[8+r/3];return function(e){return t(i*e)+o}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),Mr.format,Mr.formatPrefix;var Pr=function(){return new Or};function Or(){this.reset()}Or.prototype={constructor:Or,reset:function(){this.s=this.t=0},add:function(e){jr(Ir,e,this.t),jr(this,Ir.s,this.s),this.s?this.t+=Ir.t:this.s=Ir.t},valueOf:function(){return this.s}};var Ir=new Or;function jr(e,n,t){var r=e.s=n+t,i=r-n,o=r-i;e.t=n-o+(t-i)}var Br=1e-6,Ur=Math.PI,Lr=Ur/2,zr=Ur/4,qr=2*Ur,Rr=Ur/180,Hr=Math.abs,Yr=Math.atan,Xr=Math.atan2,$r=Math.cos,Gr=(Math.ceil,Math.exp),Wr=(Math.floor,Math.log),Vr=(Math.pow,Math.sin),Zr=(Math.sign,Math.sqrt),Jr=Math.tan;function Qr(e){return e>1?0:e<-1?Ur:Math.acos(e)}function Kr(e){return e>1?Lr:e<-1?-Lr:Math.asin(e)}function ei(){}Pr(),Pr();function ni(e){var n=e[0],t=e[1],r=$r(t);return[r*$r(n),r*Vr(n),Vr(t)]}function ti(e,n){return[e[1]*n[2]-e[2]*n[1],e[2]*n[0]-e[0]*n[2],e[0]*n[1]-e[1]*n[0]]}function ri(e){var n=Zr(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=n,e[1]/=n,e[2]/=n}Pr();function ii(e,n){return[Hr(e)>Ur?e+Math.round(-e/qr)*qr:e,n]}ii.invert=ii;var oi=function(){var e,n=[];return{point:function(n,t){e.push([n,t])},lineStart:function(){n.push(e=[])},lineEnd:ei,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var t=n;return n=[],e=null,t}}},ai=function(e,n){return Hr(e[0]-n[0])<Br&&Hr(e[1]-n[1])<Br};function fi(e,n,t,r){this.x=e,this.z=n,this.o=t,this.e=r,this.v=!1,this.n=this.p=null}var ci=function(e,n,t,r,i){var o,a,f=[],c=[];if(e.forEach(function(e){if(!((n=e.length-1)<=0)){var n,t,r=e[0],a=e[n];if(ai(r,a)){for(i.lineStart(),o=0;o<n;++o)i.point((r=e[o])[0],r[1]);i.lineEnd()}else f.push(t=new fi(r,e,null,!0)),c.push(t.o=new fi(r,null,t,!1)),f.push(t=new fi(a,e,null,!1)),c.push(t.o=new fi(a,null,t,!0))}}),f.length){for(c.sort(n),si(f),si(c),o=0,a=c.length;o<a;++o)c[o].e=t=!t;for(var s,u,l=f[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;s=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,a=s.length;o<a;++o)i.point((u=s[o])[0],u[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(s=h.p.z,o=s.length-1;o>=0;--o)i.point((u=s[o])[0],u[1]);else r(h.x,h.p.x,-1,i);h=h.p}s=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function si(e){if(n=e.length){for(var n,t,r=0,i=e[0];++r<n;)i.n=t=e[r],t.p=i,i=t;i.n=t=e[0],t.p=i}}var ui=Pr(),li=function(e,n){var t=n[0],r=n[1],i=Vr(r),o=[Vr(t),-$r(t),0],a=0,f=0;ui.reset(),1===i?r=Lr+Br:-1===i&&(r=-Lr-Br);for(var c=0,s=e.length;c<s;++c)if(l=(u=e[c]).length)for(var u,l,h=u[l-1],d=h[0],b=h[1]/2+zr,p=Vr(b),_=$r(b),g=0;g<l;++g,d=m,p=x,_=w,h=y){var y=u[g],m=y[0],v=y[1]/2+zr,x=Vr(v),w=$r(v),F=m-d,k=F>=0?1:-1,A=k*F,S=A>Ur,M=p*x;if(ui.add(Xr(M*k*Vr(A),_*w+M*$r(A))),a+=S?F+k*qr:F,S^d>=t^m>=t){var C=ti(ni(h),ni(y));ri(C);var E=ti(o,C);ri(E);var T=(S^F>=0?-1:1)*Kr(E[2]);(r>T||r===T&&(C[0]||C[1]))&&(f+=S^F>=0?1:-1)}}return(a<-Br||a<Br&&ui<-Br)^1&f},hi=function(e,n,t,r){return function(i){var o,a,c,s=n(i),u=oi(),l=n(u),h=!1,d={point:b,lineStart:_,lineEnd:g,polygonStart:function(){d.point=y,d.lineStart=m,d.lineEnd=v,a=[],o=[]},polygonEnd:function(){d.point=b,d.lineStart=_,d.lineEnd=g,a=f(a);var e=li(o,r);a.length?(h||(i.polygonStart(),h=!0),ci(a,bi,e,t,i)):e&&(h||(i.polygonStart(),h=!0),i.lineStart(),t(null,null,1,i),i.lineEnd()),h&&(i.polygonEnd(),h=!1),a=o=null},sphere:function(){i.polygonStart(),i.lineStart(),t(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function b(n,t){e(n,t)&&i.point(n,t)}function p(e,n){s.point(e,n)}function _(){d.point=p,s.lineStart()}function g(){d.point=b,s.lineEnd()}function y(e,n){c.push([e,n]),l.point(e,n)}function m(){l.lineStart(),c=[]}function v(){y(c[0][0],c[0][1]),l.lineEnd();var e,n,t,r,f=l.clean(),s=u.result(),d=s.length;if(c.pop(),o.push(c),c=null,d)if(1&f){if((n=(t=s[0]).length-1)>0){for(h||(i.polygonStart(),h=!0),i.lineStart(),e=0;e<n;++e)i.point((r=t[e])[0],r[1]);i.lineEnd()}}else d>1&&2&f&&s.push(s.pop().concat(s.shift())),a.push(s.filter(di))}return d}};function di(e){return e.length>1}function bi(e,n){return((e=e.x)[0]<0?e[1]-Lr-Br:Lr-e[1])-((n=n.x)[0]<0?n[1]-Lr-Br:Lr-n[1])}hi(function(){return!0},function(e){var n,t=NaN,r=NaN,i=NaN;return{lineStart:function(){e.lineStart(),n=1},point:function(o,a){var f=o>0?Ur:-Ur,c=Hr(o-t);Hr(c-Ur)<Br?(e.point(t,r=(r+a)/2>0?Lr:-Lr),e.point(i,r),e.lineEnd(),e.lineStart(),e.point(f,r),e.point(o,r),n=0):i!==f&&c>=Ur&&(Hr(t-i)<Br&&(t-=i*Br),Hr(o-f)<Br&&(o-=f*Br),r=function(e,n,t,r){var i,o,a=Vr(e-t);return Hr(a)>Br?Yr((Vr(n)*(o=$r(r))*Vr(t)-Vr(r)*(i=$r(n))*Vr(e))/(i*o*a)):(n+r)/2}(t,r,o,a),e.point(i,r),e.lineEnd(),e.lineStart(),e.point(f,r),n=0),e.point(t=o,r=a),i=f},lineEnd:function(){e.lineEnd(),t=r=NaN},clean:function(){return 2-n}}},function(e,n,t,r){var i;if(null==e)i=t*Lr,r.point(-Ur,i),r.point(0,i),r.point(Ur,i),r.point(Ur,0),r.point(Ur,-i),r.point(0,-i),r.point(-Ur,-i),r.point(-Ur,0),r.point(-Ur,i);else if(Hr(e[0]-n[0])>Br){var o=e[0]<n[0]?Ur:-Ur;i=t*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])},[-Ur,-Lr]);Pr();Pr(),Pr();function pi(e){this._context=e}pi.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(e,n){switch(this._point){case 0:this._context.moveTo(e,n),this._point=1;break;case 1:this._context.lineTo(e,n);break;default:this._context.moveTo(e+this._radius,n),this._context.arc(e,n,this._radius,0,qr)}},result:ei};Pr();function _i(){this._string=[]}function gi(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}_i.prototype={_radius:4.5,_circle:gi(4.5),pointRadius:function(e){return(e=+e)!==this._radius&&(this._radius=e,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(e,n){switch(this._point){case 0:this._string.push("M",e,",",n),this._point=1;break;case 1:this._string.push("L",e,",",n);break;default:null==this._circle&&(this._circle=gi(this._radius)),this._string.push("M",e,",",n,this._circle)}},result:function(){if(this._string.length){var e=this._string.join("");return this._string=[],e}return null}};function yi(e){return function(n){var t=new mi;for(var r in e)t[r]=e[r];return t.stream=n,t}}function mi(){}mi.prototype={constructor:mi,point:function(e,n){this.stream.point(e,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};$r(30*Rr);yi({point:function(e,n){this.stream.point(e*Rr,n*Rr)}});function vi(e){return function(n,t){var r=$r(n),i=$r(t),o=e(r*i);return[o*i*Vr(n),o*Vr(t)]}}function xi(e){return function(n,t){var r=Zr(n*n+t*t),i=e(r),o=Vr(i),a=$r(i);return[Xr(n*o,r*a),Kr(r&&t*o/r)]}}var wi=vi(function(e){return Zr(2/(1+e))});wi.invert=xi(function(e){return 2*Kr(e/2)});var Fi=vi(function(e){return(e=Qr(e))&&e/Vr(e)});Fi.invert=xi(function(e){return e});function ki(e,n){return[e,Wr(Jr((Lr+n)/2))]}ki.invert=function(e,n){return[e,2*Yr(Gr(n))-Lr]};function Ai(e,n){return[e,n]}Ai.invert=Ai;var Si=1.340264,Mi=-.081106,Ci=893e-6,Ei=.003796,Ti=Zr(3)/2;function Di(e,n){var t=Kr(Ti*Vr(n)),r=t*t,i=r*r*r;return[e*$r(t)/(Ti*(Si+3*Mi*r+i*(7*Ci+9*Ei*r))),t*(Si+Mi*r+i*(Ci+Ei*r))]}Di.invert=function(e,n){for(var t,r=n,i=r*r,o=i*i*i,a=0;a<12&&(o=(i=(r-=t=(r*(Si+Mi*i+o*(Ci+Ei*i))-n)/(Si+3*Mi*i+o*(7*Ci+9*Ei*i)))*r)*i*i,!(Hr(t)<1e-12));++a);return[Ti*e*(Si+3*Mi*i+o*(7*Ci+9*Ei*i))/$r(r),Kr(Vr(r)/Ti)]};function Ni(e,n){var t=$r(n),r=$r(e)*t;return[t*Vr(e)/r,Vr(n)/r]}Ni.invert=xi(Yr);function Pi(e,n){var t=n*n,r=t*t;return[e*(.8707-.131979*t+r*(r*(.003971*t-.001529*r)-.013791)),n*(1.007226+t*(.015085+r*(.028874*t-.044475-.005916*r)))]}Pi.invert=function(e,n){var t,r=n,i=25;do{var o=r*r,a=o*o;r-=t=(r*(1.007226+o*(.015085+a*(.028874*o-.044475-.005916*a)))-n)/(1.007226+o*(.045255+a*(.259866*o-.311325-.005916*11*a)))}while(Hr(t)>Br&&--i>0);return[e/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]};function Oi(e,n){return[$r(n)*Vr(e),Vr(n)]}Oi.invert=xi(Kr);function Ii(e,n){var t=$r(n),r=1+$r(e)*t;return[t*Vr(e)/r,Vr(n)/r]}Ii.invert=xi(function(e){return 2*Yr(e)});function ji(e,n){return[Wr(Jr((Lr+n)/2)),-e]}ji.invert=function(e,n){return[-n,2*Yr(Gr(e))-Lr]};function Bi(e){var n=0,t=e.children,r=t&&t.length;if(r)for(;--r>=0;)n+=t[r].value;else n=1;e.value=n}function Ui(e,n){var t,r,i,o,a,f=new Ri(e),c=+e.value&&(f.value=e.value),s=[f];for(null==n&&(n=Li);t=s.pop();)if(c&&(t.value=+t.data.value),(i=n(t.data))&&(a=i.length))for(t.children=new Array(a),o=a-1;o>=0;--o)s.push(r=t.children[o]=new Ri(i[o])),r.parent=t,r.depth=t.depth+1;return f.eachBefore(qi)}function Li(e){return e.children}function zi(e){e.data=e.data.data}function qi(e){var n=0;do{e.height=n}while((e=e.parent)&&e.height<++n)}function Ri(e){this.data=e,this.depth=this.height=0,this.parent=null}Ri.prototype=Ui.prototype={constructor:Ri,count:function(){return this.eachAfter(Bi)},each:function(e){var n,t,r,i,o=this,a=[o];do{for(n=a.reverse(),a=[];o=n.pop();)if(e(o),t=o.children)for(r=0,i=t.length;r<i;++r)a.push(t[r])}while(a.length);return this},eachAfter:function(e){for(var n,t,r,i=this,o=[i],a=[];i=o.pop();)if(a.push(i),n=i.children)for(t=0,r=n.length;t<r;++t)o.push(n[t]);for(;i=a.pop();)e(i);return this},eachBefore:function(e){for(var n,t,r=this,i=[r];r=i.pop();)if(e(r),n=r.children)for(t=n.length-1;t>=0;--t)i.push(n[t]);return this},sum:function(e){return this.eachAfter(function(n){for(var t=+e(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)t+=r[i].value;n.value=t})},sort:function(e){return this.eachBefore(function(n){n.children&&n.children.sort(e)})},path:function(e){for(var n=this,t=function(e,n){if(e===n)return e;var t=e.ancestors(),r=n.ancestors(),i=null;for(e=t.pop(),n=r.pop();e===n;)i=e,e=t.pop(),n=r.pop();return i}(n,e),r=[n];n!==t;)n=n.parent,r.push(n);for(var i=r.length;e!==t;)r.splice(i,0,e),e=e.parent;return r},ancestors:function(){for(var e=this,n=[e];e=e.parent;)n.push(e);return n},descendants:function(){var e=[];return this.each(function(n){e.push(n)}),e},leaves:function(){var e=[];return this.eachBefore(function(n){n.children||e.push(n)}),e},links:function(){var e=this,n=[];return e.each(function(t){t!==e&&n.push({source:t.parent,target:t})}),n},copy:function(){return Ui(this).eachBefore(zi)}};Array.prototype.slice;var Hi=function(e,n,t,r,i){for(var o,a=e.children,f=-1,c=a.length,s=e.value&&(r-n)/e.value;++f<c;)(o=a[f]).y0=t,o.y1=i,o.x0=n,o.x1=n+=o.value*s};function Yi(e,n){this._=e,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Yi.prototype=Object.create(Ri.prototype);var Xi=function(e,n,t,r,i){for(var o,a=e.children,f=-1,c=a.length,s=e.value&&(i-t)/e.value;++f<c;)(o=a[f]).x0=n,o.x1=r,o.y0=t,o.y1=t+=o.value*s},$i=(1+Math.sqrt(5))/2;function Gi(e,n,t,r,i,o){for(var a,f,c,s,u,l,h,d,b,p,_,g=[],y=n.children,m=0,v=0,x=y.length,w=n.value;m<x;){c=i-t,s=o-r;do{u=y[v++].value}while(!u&&v<x);for(l=h=u,_=u*u*(p=Math.max(s/c,c/s)/(w*e)),b=Math.max(h/_,_/l);v<x;++v){if(u+=f=y[v].value,f<l&&(l=f),f>h&&(h=f),_=u*u*p,(d=Math.max(h/_,_/l))>b){u-=f;break}b=d}g.push(a={value:u,dice:c<s,children:y.slice(m,v)}),a.dice?Hi(a,t,r,i,w?r+=s*u/w:o):Xi(a,t,r,w?t+=c*u/w:i,o),w-=u,m=v}return g}(function e(n){function t(e,t,r,i,o){Gi(n,e,t,r,i,o)}return t.ratio=function(n){return e((n=+n)>1?n:1)},t})($i),function e(n){function t(e,t,r,i,o){if((a=e._squarify)&&a.ratio===n)for(var a,f,c,s,u,l=-1,h=a.length,d=e.value;++l<h;){for(c=(f=a[l]).children,s=f.value=0,u=c.length;s<u;++s)f.value+=c[s].value;f.dice?Hi(f,t,r,i,r+=(o-r)*f.value/d):Xi(f,t,r,t+=(i-t)*f.value/d,o),d-=f.value}else e._squarify=a=Gi(n,e,t,r,i,o),a.ratio=n}return t.ratio=function(n){return e((n=+n)>1?n:1)},t}($i);var Wi=function(){return Math.random()},Vi=(function e(n){function t(e,t){return e=null==e?0:+e,t=null==t?1:+t,1===arguments.length?(t=e,e=0):t-=e,function(){return n()*t+e}}return t.source=e,t}(Wi),function e(n){function t(e,t){var r,i;return e=null==e?0:+e,t=null==t?1:+t,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return e+t*o*Math.sqrt(-2*Math.log(i)/i)}}return t.source=e,t}(Wi)),Zi=(function e(n){function t(){var e=Vi.source(n).apply(this,arguments);return function(){return Math.exp(e())}}return t.source=e,t}(Wi),function e(n){function t(e){return function(){for(var t=0,r=0;r<e;++r)t+=n();return t}}return t.source=e,t}(Wi)),Ji=(function e(n){function t(e){var t=Zi.source(n)(e);return function(){return t()/e}}return t.source=e,t}(Wi),function e(n){function t(e){return function(){return-Math.log(1-n())/e}}return t.source=e,t}(Wi),Array.prototype);Ji.map,Ji.slice;var Qi=new Date,Ki=new Date;function eo(e,n,t,r){function i(n){return e(n=new Date(+n)),n}return i.floor=i,i.ceil=function(t){return e(t=new Date(t-1)),n(t,1),e(t),t},i.round=function(e){var n=i(e),t=i.ceil(e);return e-n<t-e?n:t},i.offset=function(e,t){return n(e=new Date(+e),null==t?1:Math.floor(t)),e},i.range=function(t,r,o){var a,f=[];if(t=i.ceil(t),o=null==o?1:Math.floor(o),!(t<r&&o>0))return f;do{f.push(a=new Date(+t)),n(t,o),e(t)}while(a<t&&t<r);return f},i.filter=function(t){return eo(function(n){if(n>=n)for(;e(n),!t(n);)n.setTime(n-1)},function(e,r){if(e>=e)if(r<0)for(;++r<=0;)for(;n(e,-1),!t(e););else for(;--r>=0;)for(;n(e,1),!t(e););})},t&&(i.count=function(n,r){return Qi.setTime(+n),Ki.setTime(+r),e(Qi),e(Ki),Math.floor(t(Qi,Ki))},i.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?i.filter(r?function(n){return r(n)%e==0}:function(n){return i.count(0,n)%e==0}):i:null}),i}var no=eo(function(){},function(e,n){e.setTime(+e+n)},function(e,n){return n-e});no.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?eo(function(n){n.setTime(Math.floor(n/e)*e)},function(n,t){n.setTime(+n+t*e)},function(n,t){return(t-n)/e}):no:null};no.range;var to=6e4,ro=6048e5,io=eo(function(e){e.setTime(1e3*Math.floor(e/1e3))},function(e,n){e.setTime(+e+1e3*n)},function(e,n){return(n-e)/1e3},function(e){return e.getUTCSeconds()}),oo=(io.range,eo(function(e){e.setTime(Math.floor(e/to)*to)},function(e,n){e.setTime(+e+n*to)},function(e,n){return(n-e)/to},function(e){return e.getMinutes()})),ao=(oo.range,eo(function(e){var n=e.getTimezoneOffset()*to%36e5;n<0&&(n+=36e5),e.setTime(36e5*Math.floor((+e-n)/36e5)+n)},function(e,n){e.setTime(+e+36e5*n)},function(e,n){return(n-e)/36e5},function(e){return e.getHours()})),fo=(ao.range,eo(function(e){e.setHours(0,0,0,0)},function(e,n){e.setDate(e.getDate()+n)},function(e,n){return(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*to)/864e5},function(e){return e.getDate()-1})),co=fo;fo.range;function so(e){return eo(function(n){n.setDate(n.getDate()-(n.getDay()+7-e)%7),n.setHours(0,0,0,0)},function(e,n){e.setDate(e.getDate()+7*n)},function(e,n){return(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*to)/ro})}var uo=so(0),lo=so(1),ho=so(2),bo=so(3),po=so(4),_o=so(5),go=so(6),yo=(uo.range,lo.range,ho.range,bo.range,po.range,_o.range,go.range,eo(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,n){e.setMonth(e.getMonth()+n)},function(e,n){return n.getMonth()-e.getMonth()+12*(n.getFullYear()-e.getFullYear())},function(e){return e.getMonth()})),mo=(yo.range,eo(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,n){e.setFullYear(e.getFullYear()+n)},function(e,n){return n.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}));mo.every=function(e){return isFinite(e=Math.floor(e))&&e>0?eo(function(n){n.setFullYear(Math.floor(n.getFullYear()/e)*e),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,t){n.setFullYear(n.getFullYear()+t*e)}):null};var vo=mo,xo=(mo.range,eo(function(e){e.setUTCSeconds(0,0)},function(e,n){e.setTime(+e+n*to)},function(e,n){return(n-e)/to},function(e){return e.getUTCMinutes()})),wo=(xo.range,eo(function(e){e.setUTCMinutes(0,0,0)},function(e,n){e.setTime(+e+36e5*n)},function(e,n){return(n-e)/36e5},function(e){return e.getUTCHours()})),Fo=(wo.range,eo(function(e){e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCDate(e.getUTCDate()+n)},function(e,n){return(n-e)/864e5},function(e){return e.getUTCDate()-1})),ko=Fo;Fo.range;function Ao(e){return eo(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-e)%7),n.setUTCHours(0,0,0,0)},function(e,n){e.setUTCDate(e.getUTCDate()+7*n)},function(e,n){return(n-e)/ro})}var So=Ao(0),Mo=Ao(1),Co=Ao(2),Eo=Ao(3),To=Ao(4),Do=Ao(5),No=Ao(6),Po=(So.range,Mo.range,Co.range,Eo.range,To.range,Do.range,No.range,eo(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCMonth(e.getUTCMonth()+n)},function(e,n){return n.getUTCMonth()-e.getUTCMonth()+12*(n.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()})),Oo=(Po.range,eo(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n)},function(e,n){return n.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}));Oo.every=function(e){return isFinite(e=Math.floor(e))&&e>0?eo(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/e)*e),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,t){n.setUTCFullYear(n.getUTCFullYear()+t*e)}):null};var Io=Oo;Oo.range;function jo(e){if(0<=e.y&&e.y<100){var n=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return n.setFullYear(e.y),n}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function Bo(e){if(0<=e.y&&e.y<100){var n=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return n.setUTCFullYear(e.y),n}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function Uo(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}var Lo,zo,qo,Ro={"-":"",_:" ",0:"0"},Ho=/^\s*\d+/,Yo=/^%/,Xo=/[\\^$*+?|[\]().{}]/g;function $o(e,n,t){var r=e<0?"-":"",i=(r?-e:e)+"",o=i.length;return r+(o<t?new Array(t-o+1).join(n)+i:i)}function Go(e){return e.replace(Xo,"\\$&")}function Wo(e){return new RegExp("^(?:"+e.map(Go).join("|")+")","i")}function Vo(e){for(var n={},t=-1,r=e.length;++t<r;)n[e[t].toLowerCase()]=t;return n}function Zo(e,n,t){var r=Ho.exec(n.slice(t,t+1));return r?(e.w=+r[0],t+r[0].length):-1}function Jo(e,n,t){var r=Ho.exec(n.slice(t,t+1));return r?(e.u=+r[0],t+r[0].length):-1}function Qo(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.U=+r[0],t+r[0].length):-1}function Ko(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.V=+r[0],t+r[0].length):-1}function ea(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.W=+r[0],t+r[0].length):-1}function na(e,n,t){var r=Ho.exec(n.slice(t,t+4));return r?(e.y=+r[0],t+r[0].length):-1}function ta(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),t+r[0].length):-1}function ra(e,n,t){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(t,t+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||"00")),t+r[0].length):-1}function ia(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.m=r[0]-1,t+r[0].length):-1}function oa(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.d=+r[0],t+r[0].length):-1}function aa(e,n,t){var r=Ho.exec(n.slice(t,t+3));return r?(e.m=0,e.d=+r[0],t+r[0].length):-1}function fa(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.H=+r[0],t+r[0].length):-1}function ca(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.M=+r[0],t+r[0].length):-1}function sa(e,n,t){var r=Ho.exec(n.slice(t,t+2));return r?(e.S=+r[0],t+r[0].length):-1}function ua(e,n,t){var r=Ho.exec(n.slice(t,t+3));return r?(e.L=+r[0],t+r[0].length):-1}function la(e,n,t){var r=Ho.exec(n.slice(t,t+6));return r?(e.L=Math.floor(r[0]/1e3),t+r[0].length):-1}function ha(e,n,t){var r=Yo.exec(n.slice(t,t+1));return r?t+r[0].length:-1}function da(e,n,t){var r=Ho.exec(n.slice(t));return r?(e.Q=+r[0],t+r[0].length):-1}function ba(e,n,t){var r=Ho.exec(n.slice(t));return r?(e.Q=1e3*+r[0],t+r[0].length):-1}function pa(e,n){return $o(e.getDate(),n,2)}function _a(e,n){return $o(e.getHours(),n,2)}function ga(e,n){return $o(e.getHours()%12||12,n,2)}function ya(e,n){return $o(1+co.count(vo(e),e),n,3)}function ma(e,n){return $o(e.getMilliseconds(),n,3)}function va(e,n){return ma(e,n)+"000"}function xa(e,n){return $o(e.getMonth()+1,n,2)}function wa(e,n){return $o(e.getMinutes(),n,2)}function Fa(e,n){return $o(e.getSeconds(),n,2)}function ka(e){var n=e.getDay();return 0===n?7:n}function Aa(e,n){return $o(uo.count(vo(e),e),n,2)}function Sa(e,n){var t=e.getDay();return e=t>=4||0===t?po(e):po.ceil(e),$o(po.count(vo(e),e)+(4===vo(e).getDay()),n,2)}function Ma(e){return e.getDay()}function Ca(e,n){return $o(lo.count(vo(e),e),n,2)}function Ea(e,n){return $o(e.getFullYear()%100,n,2)}function Ta(e,n){return $o(e.getFullYear()%1e4,n,4)}function Da(e){var n=e.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+$o(n/60|0,"0",2)+$o(n%60,"0",2)}function Na(e,n){return $o(e.getUTCDate(),n,2)}function Pa(e,n){return $o(e.getUTCHours(),n,2)}function Oa(e,n){return $o(e.getUTCHours()%12||12,n,2)}function Ia(e,n){return $o(1+ko.count(Io(e),e),n,3)}function ja(e,n){return $o(e.getUTCMilliseconds(),n,3)}function Ba(e,n){return ja(e,n)+"000"}function Ua(e,n){return $o(e.getUTCMonth()+1,n,2)}function La(e,n){return $o(e.getUTCMinutes(),n,2)}function za(e,n){return $o(e.getUTCSeconds(),n,2)}function qa(e){var n=e.getUTCDay();return 0===n?7:n}function Ra(e,n){return $o(So.count(Io(e),e),n,2)}function Ha(e,n){var t=e.getUTCDay();return e=t>=4||0===t?To(e):To.ceil(e),$o(To.count(Io(e),e)+(4===Io(e).getUTCDay()),n,2)}function Ya(e){return e.getUTCDay()}function Xa(e,n){return $o(Mo.count(Io(e),e),n,2)}function $a(e,n){return $o(e.getUTCFullYear()%100,n,2)}function Ga(e,n){return $o(e.getUTCFullYear()%1e4,n,4)}function Wa(){return"+0000"}function Va(){return"%"}function Za(e){return+e}function Ja(e){return Math.floor(+e/1e3)}!function(e){Lo=function(e){var n=e.dateTime,t=e.date,r=e.time,i=e.periods,o=e.days,a=e.shortDays,f=e.months,c=e.shortMonths,s=Wo(i),u=Vo(i),l=Wo(o),h=Vo(o),d=Wo(a),b=Vo(a),p=Wo(f),_=Vo(f),g=Wo(c),y=Vo(c),m={a:function(e){return a[e.getDay()]},A:function(e){return o[e.getDay()]},b:function(e){return c[e.getMonth()]},B:function(e){return f[e.getMonth()]},c:null,d:pa,e:pa,f:va,H:_a,I:ga,j:ya,L:ma,m:xa,M:wa,p:function(e){return i[+(e.getHours()>=12)]},Q:Za,s:Ja,S:Fa,u:ka,U:Aa,V:Sa,w:Ma,W:Ca,x:null,X:null,y:Ea,Y:Ta,Z:Da,"%":Va},v={a:function(e){return a[e.getUTCDay()]},A:function(e){return o[e.getUTCDay()]},b:function(e){return c[e.getUTCMonth()]},B:function(e){return f[e.getUTCMonth()]},c:null,d:Na,e:Na,f:Ba,H:Pa,I:Oa,j:Ia,L:ja,m:Ua,M:La,p:function(e){return i[+(e.getUTCHours()>=12)]},Q:Za,s:Ja,S:za,u:qa,U:Ra,V:Ha,w:Ya,W:Xa,x:null,X:null,y:$a,Y:Ga,Z:Wa,"%":Va},x={a:function(e,n,t){var r=d.exec(n.slice(t));return r?(e.w=b[r[0].toLowerCase()],t+r[0].length):-1},A:function(e,n,t){var r=l.exec(n.slice(t));return r?(e.w=h[r[0].toLowerCase()],t+r[0].length):-1},b:function(e,n,t){var r=g.exec(n.slice(t));return r?(e.m=y[r[0].toLowerCase()],t+r[0].length):-1},B:function(e,n,t){var r=p.exec(n.slice(t));return r?(e.m=_[r[0].toLowerCase()],t+r[0].length):-1},c:function(e,t,r){return k(e,n,t,r)},d:oa,e:oa,f:la,H:fa,I:fa,j:aa,L:ua,m:ia,M:ca,p:function(e,n,t){var r=s.exec(n.slice(t));return r?(e.p=u[r[0].toLowerCase()],t+r[0].length):-1},Q:da,s:ba,S:sa,u:Jo,U:Qo,V:Ko,w:Zo,W:ea,x:function(e,n,r){return k(e,t,n,r)},X:function(e,n,t){return k(e,r,n,t)},y:ta,Y:na,Z:ra,"%":ha};function w(e,n){return function(t){var r,i,o,a=[],f=-1,c=0,s=e.length;for(t instanceof Date||(t=new Date(+t));++f<s;)37===e.charCodeAt(f)&&(a.push(e.slice(c,f)),null!=(i=Ro[r=e.charAt(++f)])?r=e.charAt(++f):i="e"===r?" ":"0",(o=n[r])&&(r=o(t,i)),a.push(r),c=f+1);return a.push(e.slice(c,f)),a.join("")}}function F(e,n){return function(t){var r,i,o=Uo(1900);if(k(o,e,t+="",0)!=t.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(i=(r=Bo(Uo(o.y))).getUTCDay(),r=i>4||0===i?Mo.ceil(r):Mo(r),r=ko.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(i=(r=n(Uo(o.y))).getDay(),r=i>4||0===i?lo.ceil(r):lo(r),r=co.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?Bo(Uo(o.y)).getUTCDay():n(Uo(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,Bo(o)):n(o)}}function k(e,n,t,r){for(var i,o,a=0,f=n.length,c=t.length;a<f;){if(r>=c)return-1;if(37===(i=n.charCodeAt(a++))){if(i=n.charAt(a++),!(o=x[i in Ro?n.charAt(a++):i])||(r=o(e,t,r))<0)return-1}else if(i!=t.charCodeAt(r++))return-1}return r}return m.x=w(t,m),m.X=w(r,m),m.c=w(n,m),v.x=w(t,v),v.X=w(r,v),v.c=w(n,v),{format:function(e){var n=w(e+="",m);return n.toString=function(){return e},n},parse:function(e){var n=F(e+="",jo);return n.toString=function(){return e},n},utcFormat:function(e){var n=w(e+="",v);return n.toString=function(){return e},n},utcParse:function(e){var n=F(e,Bo);return n.toString=function(){return e},n}}}(e),Lo.format,Lo.parse,zo=Lo.utcFormat,qo=Lo.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||zo("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||qo("%Y-%m-%dT%H:%M:%S.%LZ");var Qa=function(e){for(var n=e.length/6|0,t=new Array(n),r=0;r<n;)t[r]="#"+e.slice(6*r,6*++r);return t},Ka=(Qa("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Qa("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Qa("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Qa("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Qa("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Qa("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),Qa("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Qa("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Qa("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),function(e){return Dn(e[e.length-1])});Ka(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Qa)),Ka(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Qa)),Ka(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Qa)),Ka(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Qa)),Ka(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Qa)),Ka(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Qa)),Ka(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Qa)),Ka(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Qa)),Ka(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Qa)),Ka(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Qa)),Ka(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Qa)),Ka(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Qa)),Ka(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Qa)),Ka(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Qa)),Ka(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Qa)),Ka(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Qa)),Ka(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Qa)),Ka(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Qa)),Ka(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Qa)),Ka(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Qa)),Ka(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Qa)),Ka(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Qa)),Ka(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Qa)),Ka(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Qa)),Ka(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Qa)),Ka(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Qa)),Ka(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Qa)),Vn(xn(300,.5,0),xn(-240,.5,1)),Vn(xn(-100,.75,.35),xn(80,1.5,.8)),Vn(xn(260,.75,.35),xn(80,1.5,.8)),xn(),Re(),Math.PI,Math.PI;function ef(e){var n=e.length;return function(t){return e[Math.max(0,Math.min(n-1,Math.floor(t*n)))]}}ef(Qa("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),ef(Qa("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),ef(Qa("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),ef(Qa("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),Math.abs,Math.atan2,Math.cos,Math.max,Math.min,Math.sin,Math.sqrt;var nf=1e-12,tf=Math.PI,rf=2*tf;function of(e){this._context=e}of.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2;default:this._context.lineTo(e,n)}}};var af=function(e){return new of(e)};cf(af);function ff(e){this._curve=e}function cf(e){function n(n){return new ff(e(n))}return n._curve=e,n}ff.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(e,n){this._curve.point(n*Math.sin(e),n*-Math.cos(e))}};Array.prototype.slice;Math.sqrt(1/3);var sf=Math.sin(tf/10)/Math.sin(7*tf/10),uf=(Math.sin(rf/10),Math.cos(rf/10),Math.sqrt(3),Math.sqrt(3),Math.sqrt(12),function(){});function lf(e,n,t){e._context.bezierCurveTo((2*e._x0+e._x1)/3,(2*e._y0+e._y1)/3,(e._x0+2*e._x1)/3,(e._y0+2*e._y1)/3,(e._x0+4*e._x1+n)/6,(e._y0+4*e._y1+t)/6)}function hf(e){this._context=e}hf.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:lf(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:lf(this,e,n)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=n}};function df(e){this._context=e}df.prototype={areaStart:uf,areaEnd:uf,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._x2=e,this._y2=n;break;case 1:this._point=2,this._x3=e,this._y3=n;break;case 2:this._point=3,this._x4=e,this._y4=n,this._context.moveTo((this._x0+4*this._x1+e)/6,(this._y0+4*this._y1+n)/6);break;default:lf(this,e,n)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=n}};function bf(e){this._context=e}bf.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var t=(this._x0+4*this._x1+e)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(t,r):this._context.moveTo(t,r);break;case 3:this._point=4;default:lf(this,e,n)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=n}};function pf(e,n){this._basis=new hf(e),this._beta=n}pf.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var e=this._x,n=this._y,t=e.length-1;if(t>0)for(var r,i=e[0],o=n[0],a=e[t]-i,f=n[t]-o,c=-1;++c<=t;)r=c/t,this._basis.point(this._beta*e[c]+(1-this._beta)*(i+r*a),this._beta*n[c]+(1-this._beta)*(o+r*f));this._x=this._y=null,this._basis.lineEnd()},point:function(e,n){this._x.push(+e),this._y.push(+n)}};(function e(n){function t(e){return 1===n?new hf(e):new pf(e,n)}return t.beta=function(n){return e(+n)},t})(.85);function _f(e,n,t){e._context.bezierCurveTo(e._x1+e._k*(e._x2-e._x0),e._y1+e._k*(e._y2-e._y0),e._x2+e._k*(e._x1-n),e._y2+e._k*(e._y1-t),e._x2,e._y2)}function gf(e,n){this._context=e,this._k=(1-n)/6}gf.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:_f(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2,this._x1=e,this._y1=n;break;case 2:this._point=3;default:_f(this,e,n)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function e(n){function t(e){return new gf(e,n)}return t.tension=function(n){return e(+n)},t})(0);function yf(e,n){this._context=e,this._k=(1-n)/6}yf.prototype={areaStart:uf,areaEnd:uf,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._x3=e,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=e,this._y4=n);break;case 2:this._point=3,this._x5=e,this._y5=n;break;default:_f(this,e,n)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function e(n){function t(e){return new yf(e,n)}return t.tension=function(n){return e(+n)},t})(0);function mf(e,n){this._context=e,this._k=(1-n)/6}mf.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:_f(this,e,n)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function e(n){function t(e){return new mf(e,n)}return t.tension=function(n){return e(+n)},t})(0);function vf(e,n,t){var r=e._x1,i=e._y1,o=e._x2,a=e._y2;if(e._l01_a>nf){var f=2*e._l01_2a+3*e._l01_a*e._l12_a+e._l12_2a,c=3*e._l01_a*(e._l01_a+e._l12_a);r=(r*f-e._x0*e._l12_2a+e._x2*e._l01_2a)/c,i=(i*f-e._y0*e._l12_2a+e._y2*e._l01_2a)/c}if(e._l23_a>nf){var s=2*e._l23_2a+3*e._l23_a*e._l12_a+e._l12_2a,u=3*e._l23_a*(e._l23_a+e._l12_a);o=(o*s+e._x1*e._l23_2a-n*e._l12_2a)/u,a=(a*s+e._y1*e._l23_2a-t*e._l12_2a)/u}e._context.bezierCurveTo(r,i,o,a,e._x2,e._y2)}function xf(e,n){this._context=e,this._alpha=n}xf.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){if(e=+e,n=+n,this._point){var t=this._x2-e,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(t*t+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2;break;case 2:this._point=3;default:vf(this,e,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function e(n){function t(e){return n?new xf(e,n):new gf(e,0)}return t.alpha=function(n){return e(+n)},t})(.5);function wf(e,n){this._context=e,this._alpha=n}wf.prototype={areaStart:uf,areaEnd:uf,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(e,n){if(e=+e,n=+n,this._point){var t=this._x2-e,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(t*t+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=e,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=e,this._y4=n);break;case 2:this._point=3,this._x5=e,this._y5=n;break;default:vf(this,e,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function e(n){function t(e){return n?new wf(e,n):new yf(e,0)}return t.alpha=function(n){return e(+n)},t})(.5);function Ff(e,n){this._context=e,this._alpha=n}Ff.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){if(e=+e,n=+n,this._point){var t=this._x2-e,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(t*t+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:vf(this,e,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function e(n){function t(e){return n?new Ff(e,n):new mf(e,0)}return t.alpha=function(n){return e(+n)},t})(.5);function kf(e){this._context=e}kf.prototype={areaStart:uf,areaEnd:uf,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(e,n){e=+e,n=+n,this._point?this._context.lineTo(e,n):(this._point=1,this._context.moveTo(e,n))}};function Af(e){return e<0?-1:1}function Sf(e,n,t){var r=e._x1-e._x0,i=n-e._x1,o=(e._y1-e._y0)/(r||i<0&&-0),a=(t-e._y1)/(i||r<0&&-0),f=(o*i+a*r)/(r+i);return(Af(o)+Af(a))*Math.min(Math.abs(o),Math.abs(a),.5*Math.abs(f))||0}function Mf(e,n){var t=e._x1-e._x0;return t?(3*(e._y1-e._y0)/t-n)/2:n}function Cf(e,n,t){var r=e._x0,i=e._y0,o=e._x1,a=e._y1,f=(o-r)/3;e._context.bezierCurveTo(r+f,i+f*n,o-f,a-f*t,o,a)}function Ef(e){this._context=e}function Tf(e){this._context=new Df(e)}function Df(e){this._context=e}function Nf(e){this._context=e}function Pf(e){var n,t,r=e.length-1,i=new Array(r),o=new Array(r),a=new Array(r);for(i[0]=0,o[0]=2,a[0]=e[0]+2*e[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,a[n]=4*e[n]+2*e[n+1];for(i[r-1]=2,o[r-1]=7,a[r-1]=8*e[r-1]+e[r],n=1;n<r;++n)t=i[n]/o[n-1],o[n]-=t,a[n]-=t*a[n-1];for(i[r-1]=a[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(a[n]-i[n+1])/o[n];for(o[r-1]=(e[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*e[n+1]-i[n+1];return[i,o]}Ef.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Cf(this,this._t0,Mf(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){var t=NaN;if(n=+n,(e=+e)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2;break;case 2:this._point=3,Cf(this,Mf(this,t=Sf(this,e,n)),t);break;default:Cf(this,this._t0,t=Sf(this,e,n))}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=n,this._t0=t}}},(Tf.prototype=Object.create(Ef.prototype)).point=function(e,n){Ef.prototype.point.call(this,n,e)},Df.prototype={moveTo:function(e,n){this._context.moveTo(n,e)},closePath:function(){this._context.closePath()},lineTo:function(e,n){this._context.lineTo(n,e)},bezierCurveTo:function(e,n,t,r,i,o){this._context.bezierCurveTo(n,e,r,t,o,i)}},Nf.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var e=this._x,n=this._y,t=e.length;if(t)if(this._line?this._context.lineTo(e[0],n[0]):this._context.moveTo(e[0],n[0]),2===t)this._context.lineTo(e[1],n[1]);else for(var r=Pf(e),i=Pf(n),o=0,a=1;a<t;++o,++a)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],e[a],n[a]);(this._line||0!==this._line&&1===t)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(e,n){this._x.push(+e),this._y.push(+n)}};function Of(e,n){this._context=e,this._t=n}Of.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(e,n);else{var t=this._x*(1-this._t)+e*this._t;this._context.lineTo(t,this._y),this._context.lineTo(t,n)}}this._x=e,this._y=n}};function If(){this._=null}function jf(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function Bf(e,n){var t=n,r=n.R,i=t.U;i?i.L===t?i.L=r:i.R=r:e._=r,r.U=i,t.U=r,t.R=r.L,t.R&&(t.R.U=t),r.L=t}function Uf(e,n){var t=n,r=n.L,i=t.U;i?i.L===t?i.L=r:i.R=r:e._=r,r.U=i,t.U=r,t.L=r.R,t.L&&(t.L.U=t),r.R=t}function Lf(e){for(;e.L;)e=e.L;return e}If.prototype={constructor:If,insert:function(e,n){var t,r,i;if(e){if(n.P=e,n.N=e.N,e.N&&(e.N.P=n),e.N=n,e.R){for(e=e.R;e.L;)e=e.L;e.L=n}else e.R=n;t=e}else this._?(e=Lf(this._),n.P=null,n.N=e,e.P=e.L=n,t=e):(n.P=n.N=null,this._=n,t=null);for(n.L=n.R=null,n.U=t,n.C=!0,e=n;t&&t.C;)t===(r=t.U).L?(i=r.R)&&i.C?(t.C=i.C=!1,r.C=!0,e=r):(e===t.R&&(Bf(this,t),t=(e=t).U),t.C=!1,r.C=!0,Uf(this,r)):(i=r.L)&&i.C?(t.C=i.C=!1,r.C=!0,e=r):(e===t.L&&(Uf(this,t),t=(e=t).U),t.C=!1,r.C=!0,Bf(this,r)),t=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var n,t,r,i=e.U,o=e.L,a=e.R;if(t=o?a?Lf(a):o:a,i?i.L===e?i.L=t:i.R=t:this._=t,o&&a?(r=t.C,t.C=e.C,t.L=o,o.U=t,t!==a?(i=t.U,t.U=e.U,e=t.R,i.L=e,t.R=a,a.U=t):(t.U=i,i=t,e=t.R)):(r=e.C,e=t),e&&(e.U=i),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Bf(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Uf(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Bf(this,i),e=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Uf(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Bf(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Uf(this,i),e=this._;break}n.C=!0,e=i,i=i.U}while(!e.C);e&&(e.C=!1)}}};var zf=If;function qf(e,n,t,r){var i=[null,null],o=lc.push(i)-1;return i.left=e,i.right=n,t&&Hf(i,e,n,t),r&&Hf(i,n,e,r),sc[e.index].halfedges.push(o),sc[n.index].halfedges.push(o),i}function Rf(e,n,t){var r=[n,t];return r.left=e,r}function Hf(e,n,t,r){e[0]||e[1]?e.left===t?e[1]=r:e[0]=r:(e[0]=r,e.left=n,e.right=t)}function Yf(e,n,t,r,i){var o,a=e[0],f=e[1],c=a[0],s=a[1],u=0,l=1,h=f[0]-c,d=f[1]-s;if(o=n-c,h||!(o>0)){if(o/=h,h<0){if(o<u)return;o<l&&(l=o)}else if(h>0){if(o>l)return;o>u&&(u=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>l)return;o>u&&(u=o)}else if(h>0){if(o<u)return;o<l&&(l=o)}if(o=t-s,d||!(o>0)){if(o/=d,d<0){if(o<u)return;o<l&&(l=o)}else if(d>0){if(o>l)return;o>u&&(u=o)}if(o=i-s,d||!(o<0)){if(o/=d,d<0){if(o>l)return;o>u&&(u=o)}else if(d>0){if(o<u)return;o<l&&(l=o)}return!(u>0||l<1)||(u>0&&(e[0]=[c+u*h,s+u*d]),l<1&&(e[1]=[c+l*h,s+l*d]),!0)}}}}}function Xf(e,n,t,r,i){var o=e[1];if(o)return!0;var a,f,c=e[0],s=e.left,u=e.right,l=s[0],h=s[1],d=u[0],b=u[1],p=(l+d)/2,_=(h+b)/2;if(b===h){if(p<n||p>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[p,t];o=[p,i]}else{if(c){if(c[1]<t)return}else c=[p,i];o=[p,t]}}else if(f=_-(a=(l-d)/(b-h))*p,a<-1||a>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(t-f)/a,t];o=[(i-f)/a,i]}else{if(c){if(c[1]<t)return}else c=[(i-f)/a,i];o=[(t-f)/a,t]}else if(h<b){if(c){if(c[0]>=r)return}else c=[n,a*n+f];o=[r,a*r+f]}else{if(c){if(c[0]<n)return}else c=[r,a*r+f];o=[n,a*n+f]}return e[0]=c,e[1]=o,!0}function $f(e,n){var t=e.site,r=n.left,i=n.right;return t===i&&(i=r,r=t),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(t===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Gf(e,n){return n[+(n.left!==e.site)]}function Wf(e,n){return n[+(n.left===e.site)]}var Vf,Zf=[];function Jf(){jf(this),this.x=this.y=this.arc=this.site=this.cy=null}function Qf(e){var n=e.P,t=e.N;if(n&&t){var r=n.site,i=e.site,o=t.site;if(r!==o){var a=i[0],f=i[1],c=r[0]-a,s=r[1]-f,u=o[0]-a,l=o[1]-f,h=2*(c*l-s*u);if(!(h>=-dc)){var d=c*c+s*s,b=u*u+l*l,p=(l*d-s*b)/h,_=(c*b-u*d)/h,g=Zf.pop()||new Jf;g.arc=e,g.site=i,g.x=p+a,g.y=(g.cy=_+f)+Math.sqrt(p*p+_*_),e.circle=g;for(var y=null,m=uc._;m;)if(g.y<m.y||g.y===m.y&&g.x<=m.x){if(!m.L){y=m.P;break}m=m.L}else{if(!m.R){y=m;break}m=m.R}uc.insert(y,g),y||(Vf=g)}}}}function Kf(e){var n=e.circle;n&&(n.P||(Vf=n.N),uc.remove(n),Zf.push(n),jf(n),e.circle=null)}var ec=[];function nc(){jf(this),this.edge=this.site=this.circle=null}function tc(e){var n=ec.pop()||new nc;return n.site=e,n}function rc(e){Kf(e),cc.remove(e),ec.push(e),jf(e)}function ic(e){var n=e.circle,t=n.x,r=n.cy,i=[t,r],o=e.P,a=e.N,f=[e];rc(e);for(var c=o;c.circle&&Math.abs(t-c.circle.x)<hc&&Math.abs(r-c.circle.cy)<hc;)o=c.P,f.unshift(c),rc(c),c=o;f.unshift(c),Kf(c);for(var s=a;s.circle&&Math.abs(t-s.circle.x)<hc&&Math.abs(r-s.circle.cy)<hc;)a=s.N,f.push(s),rc(s),s=a;f.push(s),Kf(s);var u,l=f.length;for(u=1;u<l;++u)s=f[u],c=f[u-1],Hf(s.edge,c.site,s.site,i);c=f[0],(s=f[l-1]).edge=qf(c.site,s.site,null,i),Qf(c),Qf(s)}function oc(e){for(var n,t,r,i,o=e[0],a=e[1],f=cc._;f;)if((r=ac(f,a)-o)>hc)f=f.L;else{if(!((i=o-fc(f,a))>hc)){r>-hc?(n=f.P,t=f):i>-hc?(n=f,t=f.N):n=t=f;break}if(!f.R){n=f;break}f=f.R}!function(e){sc[e.index]={site:e,halfedges:[]}}(e);var c=tc(e);if(cc.insert(n,c),n||t){if(n===t)return Kf(n),t=tc(n.site),cc.insert(c,t),c.edge=t.edge=qf(n.site,c.site),Qf(n),void Qf(t);if(t){Kf(n),Kf(t);var s=n.site,u=s[0],l=s[1],h=e[0]-u,d=e[1]-l,b=t.site,p=b[0]-u,_=b[1]-l,g=2*(h*_-d*p),y=h*h+d*d,m=p*p+_*_,v=[(_*y-d*m)/g+u,(h*m-p*y)/g+l];Hf(t.edge,s,b,v),c.edge=qf(s,e,null,v),t.edge=qf(e,b,null,v),Qf(n),Qf(t)}else c.edge=qf(n.site,c.site)}}function ac(e,n){var t=e.site,r=t[0],i=t[1],o=i-n;if(!o)return r;var a=e.P;if(!a)return-1/0;var f=(t=a.site)[0],c=t[1],s=c-n;if(!s)return f;var u=f-r,l=1/o-1/s,h=u/s;return l?(-h+Math.sqrt(h*h-2*l*(u*u/(-2*s)-c+s/2+i-o/2)))/l+r:(r+f)/2}function fc(e,n){var t=e.N;if(t)return ac(t,n);var r=e.site;return r[1]===n?r[0]:1/0}var cc,sc,uc,lc,hc=1e-6,dc=1e-12;function bc(e,n){return n[1]-e[1]||n[0]-e[0]}function pc(e,n){var t,r,i,o=e.sort(bc).pop();for(lc=[],sc=new Array(e.length),cc=new zf,uc=new zf;;)if(i=Vf,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===t&&o[1]===r||(oc(o),t=o[0],r=o[1]),o=e.pop();else{if(!i)break;ic(i.arc)}if(function(){for(var e,n,t,r,i=0,o=sc.length;i<o;++i)if((e=sc[i])&&(r=(n=e.halfedges).length)){var a=new Array(r),f=new Array(r);for(t=0;t<r;++t)a[t]=t,f[t]=$f(e,lc[n[t]]);for(a.sort(function(e,n){return f[n]-f[e]}),t=0;t<r;++t)f[t]=n[a[t]];for(t=0;t<r;++t)n[t]=f[t]}}(),n){var a=+n[0][0],f=+n[0][1],c=+n[1][0],s=+n[1][1];!function(e,n,t,r){for(var i,o=lc.length;o--;)Xf(i=lc[o],e,n,t,r)&&Yf(i,e,n,t,r)&&(Math.abs(i[0][0]-i[1][0])>hc||Math.abs(i[0][1]-i[1][1])>hc)||delete lc[o]}(a,f,c,s),function(e,n,t,r){var i,o,a,f,c,s,u,l,h,d,b,p,_=sc.length,g=!0;for(i=0;i<_;++i)if(o=sc[i]){for(a=o.site,f=(c=o.halfedges).length;f--;)lc[c[f]]||c.splice(f,1);for(f=0,s=c.length;f<s;)b=(d=Wf(o,lc[c[f]]))[0],p=d[1],l=(u=Gf(o,lc[c[++f%s]]))[0],h=u[1],(Math.abs(b-l)>hc||Math.abs(p-h)>hc)&&(c.splice(f,0,lc.push(Rf(a,d,Math.abs(b-e)<hc&&r-p>hc?[e,Math.abs(l-e)<hc?h:r]:Math.abs(p-r)<hc&&t-b>hc?[Math.abs(h-r)<hc?l:t,r]:Math.abs(b-t)<hc&&p-n>hc?[t,Math.abs(l-t)<hc?h:n]:Math.abs(p-n)<hc&&b-e>hc?[Math.abs(h-n)<hc?l:e,n]:null))-1),++s);s&&(g=!1)}if(g){var y,m,v,x=1/0;for(i=0,g=null;i<_;++i)(o=sc[i])&&(v=(y=(a=o.site)[0]-e)*y+(m=a[1]-n)*m)<x&&(x=v,g=o);if(g){var w=[e,n],F=[e,r],k=[t,r],A=[t,n];g.halfedges.push(lc.push(Rf(a=g.site,w,F))-1,lc.push(Rf(a,F,k))-1,lc.push(Rf(a,k,A))-1,lc.push(Rf(a,A,w))-1)}}for(i=0;i<_;++i)(o=sc[i])&&(o.halfedges.length||delete sc[i])}(a,f,c,s)}this.edges=lc,this.cells=sc,cc=uc=lc=sc=null}pc.prototype={constructor:pc,polygons:function(){var e=this.edges;return this.cells.map(function(n){var t=n.halfedges.map(function(t){return Gf(n,e[t])});return t.data=n.site.data,t})},triangles:function(){var e=[],n=this.edges;return this.cells.forEach(function(t,r){if(o=(i=t.halfedges).length)for(var i,o,a,f,c,s,u=t.site,l=-1,h=n[i[o-1]],d=h.left===u?h.right:h.left;++l<o;)a=d,d=(h=n[i[l]]).left===u?h.right:h.left,a&&d&&r<a.index&&r<d.index&&(c=a,s=d,((f=u)[0]-s[0])*(c[1]-f[1])-(f[0]-c[0])*(s[1]-f[1])<0)&&e.push([u.data,a.data,d.data])}),e},links:function(){return this.edges.filter(function(e){return e.right}).map(function(e){return{source:e.left.data,target:e.right.data}})},find:function(e,n,t){for(var r,i,o=this,a=o._found||0,f=o.cells.length;!(i=o.cells[a]);)if(++a>=f)return null;var c=e-i.site[0],s=n-i.site[1],u=c*c+s*s;do{i=o.cells[r=a],a=null,i.halfedges.forEach(function(t){var r=o.edges[t],f=r.left;if(f!==i.site&&f||(f=r.right)){var c=e-f[0],s=n-f[1],l=c*c+s*s;l<u&&(u=l,a=f.index)}})}while(null!==a);return o._found=r,null==t||u<=t*t?i.site:null}};function _c(e,n,t){this.k=e,this.x=n,this.y=t}_c.prototype={constructor:_c,scale:function(e){return 1===e?this:new _c(this.k*e,this.x,this.y)},translate:function(e,n){return 0===e&0===n?this:new _c(this.k,this.x+this.k*e,this.y+this.k*n)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};new _c(1,0,0);_c.prototype;t.d(n,"a",function(){return we}),t.d(n,"b",function(){return jt}),t.d(n,"d",function(){return Ui}),t.d(n,"e",function(){return oe}),t.d(n,"c",function(){return W})},function(e,n){e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var i=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),o=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[t].concat(o).concat([i]).join("\n")}var a;return[t].join("\n")}(n,e);return n[2]?"@media "+n[2]+"{"+t+"}":t}).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<e.length;i++){var a=e[i];"number"==typeof a[0]&&r[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),n.push(a))}},n}},function(e,n,t){var r,i,o={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===i&&(i=r.apply(this,arguments)),i}),f=function(e){var n={};return function(e,t){if("function"==typeof e)return e();if(void 0===n[e]){var r=function(e,n){return n?n.querySelector(e):document.querySelector(e)}.call(this,e,t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}}(),c=null,s=0,u=[],l=t(10);function h(e,n){for(var t=0;t<e.length;t++){var r=e[t],i=o[r.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](r.parts[a]);for(;a<r.parts.length;a++)i.parts.push(y(r.parts[a],n))}else{var f=[];for(a=0;a<r.parts.length;a++)f.push(y(r.parts[a],n));o[r.id]={id:r.id,refs:1,parts:f}}}}function d(e,n){for(var t=[],r={},i=0;i<e.length;i++){var o=e[i],a=n.base?o[0]+n.base:o[0],f={css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(f):t.push(r[a]={id:a,parts:[f]})}return t}function b(e,n){var t=f(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?t.insertBefore(n,r.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),u.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=f(e.insertAt.before,t);t.insertBefore(n,i)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=u.indexOf(e);n>=0&&u.splice(n,1)}function _(e){var n=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return t.nc}();r&&(e.attrs.nonce=r)}return g(n,e.attrs),b(e,n),n}function g(e,n){Object.keys(n).forEach(function(t){e.setAttribute(t,n[t])})}function y(e,n){var t,r,i,o;if(n.transform&&e.css){if(!(o="function"==typeof n.transform?n.transform(e.css):n.transform.default(e.css)))return function(){};e.css=o}if(n.singleton){var a=s++;t=c||(c=_(n)),r=x.bind(null,t,a,!1),i=x.bind(null,t,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",g(n,e.attrs),b(e,n),n}(n),r=function(e,n,t){var r=t.css,i=t.sourceMap,o=void 0===n.convertToAbsoluteUrls&&i;(n.convertToAbsoluteUrls||o)&&(r=l(r));i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([r],{type:"text/css"}),f=e.href;e.href=URL.createObjectURL(a),f&&URL.revokeObjectURL(f)}.bind(null,t,n),i=function(){p(t),t.href&&URL.revokeObjectURL(t.href)}):(t=_(n),r=function(e,n){var t=n.css,r=n.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}.bind(null,t),i=function(){p(t)});return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else i()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=a()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=d(e,n);return h(t,n),function(e){for(var r=[],i=0;i<t.length;i++){var a=t[i];(f=o[a.id]).refs--,r.push(f)}e&&h(d(e,n),n);for(i=0;i<r.length;i++){var f;if(0===(f=r[i]).refs){for(var c=0;c<f.parts.length;c++)f.parts[c]();delete o[f.id]}}}};var m,v=(m=[],function(e,n){return m[e]=n,m.filter(Boolean).join("\n")});function x(e,n,t,r){var i=t?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(n,i);else{var o=document.createTextNode(i),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(o,a[n]):e.appendChild(o)}}},function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))(function(i,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function f(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){e.done?i(e.value):new t(function(n){n(e.value)}).then(a,f)}c((r=r.apply(e,n||[])).next())})},i=this&&this.__generator||function(e,n){var t,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:f(0),throw:f(1),return:f(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function f(o){return function(f){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(e,a)}catch(e){o=[6,e],r=0}finally{t=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,f])}}},o=this;Object.defineProperty(n,"__esModule",{value:!0});var a=t(4),f=t(5),c=t(6),s=t(7);t(8),t(11),t(13);var u,l=document.getElementById("vis"),h=document.getElementById("state"),d=document.getElementById("increase"),b=document.getElementById("play"),p=new f.ProvenanceGraph({name:"calculator",version:"1.0.0"}),_=new f.ActionFunctionRegistry,g=new f.ProvenanceTracker(_,p),y=new f.ProvenanceGraphTraverser(_,p),m=new a.Calculator(p,_,g,y);d.addEventListener("click",function(){return r(o,void 0,void 0,function(){return i(this,function(e){switch(e.label){case 0:return[4,g.applyAction({do:"add",doArguments:[5],undo:"subtract",undoArguments:[5],metadata:{createdBy:"me",createdOn:"now",tags:[],userIntent:"add"}})];case 1:return e.sent().label="add 5",[2]}})})}),p.on("currentChanged",function(e){h.innerHTML=m.currentState().toString()}),m.setupBasicGraph().then(function(){new c.ProvenanceTreeVisualization(y,l);var e=new f.ProvenanceSlidedeck({name:"calculator",version:"1.0.0"},y),n=new f.ProvenanceSlide("Root",5e3,1e3,[],p.root),t=new f.ProvenanceSlide("Add 13",5e3,1e3,[],p.root.children[0]),r=new f.ProvenanceSlide("Sub 20",5e3,1e3,[],p.root.children[0].children[1].children[0]),i=new f.ProvenanceSlide("Add 5",5e3,1e3,[],p.root.children[0].children[1].children[0].children[0]),o=new f.ProvenanceSlide("Mul 2",5e3,1e3,[],p.root.children[0].children[1].children[0].children[0].children[0]);e.addSlide(n),e.addSlide(t),e.addSlide(r),e.addSlide(i),e.addSlide(o);new s.SlideDeckVisualization(e,document.getElementById("slidedeck_root"));u=new f.ProvenanceSlidedeckPlayer(e.slides,function(n){return e.selectedSlide=n}),b.addEventListener("click",function(){u.setSlideIndex(e.slides.indexOf(e.selectedSlide)),u.play()})})},function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e}).apply(this,arguments)},i=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))(function(i,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function f(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){e.done?i(e.value):new t(function(n){n(e.value)}).then(a,f)}c((r=r.apply(e,n||[])).next())})},o=this&&this.__generator||function(e,n){var t,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:f(0),throw:f(1),return:f(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function f(o){return function(f){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(e,a)}catch(e){o=[6,e],r=0}finally{t=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,f])}}};Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(){this.result=0}return e.prototype.add=function(e){return i(this,void 0,void 0,function(){return o(this,function(n){return this.result+=e,[2]})})},e.prototype.subtract=function(e){return i(this,void 0,void 0,function(){return o(this,function(n){return this.result-=e,[2]})})},e.prototype.multiply=function(e){return i(this,void 0,void 0,function(){return o(this,function(n){return this.result*=e,[2]})})},e.prototype.divide=function(e){return i(this,void 0,void 0,function(){return o(this,function(n){return this.result/=e,[2]})})},e}(),f=function(){function e(e,n,t,r){this.graph=e,this.registry=n,this.tracker=t,this.traverser=r,this.app=new a,this.registry.register("add",this.app.add,this.app),this.registry.register("subtract",this.app.subtract,this.app),this.registry.register("multiply",this.app.multiply,this.app),this.registry.register("divide",this.app.divide,this.app)}return e.prototype.makeActionAndApply=function(e,n,t,a,f,c){return i(this,void 0,void 0,function(){var i,s,u;return o(this,function(o){switch(o.label){case 0:return s={do:t,doArguments:a,metadata:{createdBy:"me",createdOn:"now",tags:[],userIntent:t}},i=e?r({},s,{undo:f,undoArguments:c}):r({},s),[4,this.tracker.applyAction(i)];case 1:return(u=o.sent()).label=n,[2,u]}})})},e.prototype.currentState=function(){return this.app.result},e.prototype.setupBasicGraph=function(){return i(this,void 0,void 0,function(){var e;return o(this,function(n){switch(n.label){case 0:return[4,this.makeActionAndApply(!0,"add 13","add",[13],"subtract",[13])];case 1:return e=n.sent(),[4,this.makeActionAndApply(!0,"sub 2","subtract",[2],"add",[2])];case 2:return n.sent(),[4,this.traverser.toStateNode(e.id)];case 3:return n.sent(),[4,this.makeActionAndApply(!0,"sub 2","subtract",[2],"add",[2])];case 4:return n.sent(),[4,this.makeActionAndApply(!0,"sub 20","subtract",[20],"add",[20])];case 5:return n.sent(),[4,this.makeActionAndApply(!0,"add 5","add",[5],"subtract",[5])];case 6:return n.sent(),[4,this.makeActionAndApply(!0,"mul 2","multiply",[2],"divide",[2])];case 7:return n.sent(),[4,this.makeActionAndApply(!0,"sub 2","subtract",[2],"add",[2])];case 8:return n.sent(),[4,this.traverser.toStateNode(e.id)];case 9:return n.sent(),[4,this.makeActionAndApply(!0,"mul 4","multiply",[4],"divide",[4])];case 10:return n.sent(),[2]}})})},e}();n.Calculator=f},function(e,n,t){"use strict";t.r(n),t.d(n,"ActionFunctionRegistry",function(){return r}),t.d(n,"ProvenanceGraph",function(){return h}),t.d(n,"restoreProvenanceGraph",function(){return d}),t.d(n,"serializeProvenanceGraph",function(){return b}),t.d(n,"ProvenanceTracker",function(){return p}),t.d(n,"ProvenanceGraphTraverser",function(){return y}),t.d(n,"ProvenanceSlide",function(){return m}),t.d(n,"ProvenanceSlidedeck",function(){return v}),t.d(n,"STATUS",function(){return g}),t.d(n,"ProvenanceSlidedeckPlayer",function(){return x}),t.d(n,"generateUUID",function(){return f}),t.d(n,"generateTimestamp",function(){return c}),t.d(n,"isStateNode",function(){return s}),t.d(n,"isReversibleAction",function(){return u});var r=function(){function e(){this.functionRegistry={}}return e.prototype.register=function(e,n,t){if(void 0===t&&(t=null),this.functionRegistry[e])throw new Error("Function already registered");this.functionRegistry[e]={func:n,thisArg:t}},e.prototype.getFunctionByName=function(e){if(!this.functionRegistry[e])throw new Error("Function not found in registry");return this.functionRegistry[e]},e}(),i=function(){return(i=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e}).apply(this,arguments)};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function o(e,n,t,r){return new(t||(t=Promise))(function(i,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function f(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){e.done?i(e.value):new t(function(n){n(e.value)}).then(a,f)}c((r=r.apply(e,n||[])).next())})}function a(e,n){var t,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:f(0),throw:f(1),return:f(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function f(o){return function(f){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(e,a)}catch(e){o=[6,e],r=0}finally{t=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,f])}}}function f(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var t=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===n?t:3&t|8).toString(16)})}function c(){return(new Date).getTime()}function s(e){return"parent"in e}function u(e){return"undo"in e}function l(e){return e=e||Object.create(null),{on:function(n,t){(e[n]||(e[n]=[])).push(t)},off:function(n,t){e[n]&&e[n].splice(e[n].indexOf(t)>>>0,1)},emit:function(n,t){(e[n]||[]).slice().map(function(e){e(t)})}}}var h=function(){function e(e,n,t){void 0===n&&(n="Unknown"),this._nodes={},this._mitt=l(),this.application=e,this.root=t||{id:f(),label:"Root",metadata:{createdBy:n,createdOn:c()},children:[],artifacts:{}},this.addNode(this.root),this._current=this.root}return e.prototype.addNode=function(e){if(this._nodes[e.id])throw new Error("Node already added");this._nodes[e.id]=e,this._mitt.emit("nodeAdded",e)},e.prototype.getNode=function(e){if(!this._nodes[e])throw new Error("Node id not found");return this._nodes[e]},Object.defineProperty(e.prototype,"current",{get:function(){return this._current},set:function(e){if(!this._nodes[e.id])throw new Error("Node id not found");this._current=e,this._mitt.emit("currentChanged",e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nodes",{get:function(){return this._nodes},enumerable:!0,configurable:!0}),e.prototype.emitNodeChangedEvent=function(e){if(!this._nodes[e.id])throw new Error("Node id not found");this._mitt.emit("nodeChanged",e)},e.prototype.on=function(e,n){this._mitt.on(e,n)},e.prototype.off=function(e,n){this._mitt.off(e,n)},e}();function d(e){for(var n={},t=0,r=e.nodes;t<r.length;t++){var o=r[t];n[o.id]=i({},o)}for(var a=0,f=Object.keys(n);a<f.length;a++){var c=f[a];(o=n[c]).children=o.children.map(function(e){return n[e]}),"parent"in o&&(o.parent=n[o.parent])}var s=new h(e.application);return s._nodes=n,s._current=n[e.current],s.root=n[e.root],s}function b(e){return{nodes:Object.keys(e.nodes).map(function(n){var t=e.getNode(n),r=i({},t);return s(t)&&(r.parent=t.parent.id),r.children=t.children.map(function(e){return e.id}),r}),root:e.root.id,application:e.application,current:e.current.id}}var p=function(){function e(e,n,t){void 0===t&&(t="Unknown"),this.acceptActions=!0,this.registry=e,this.graph=n,this.username=t}return e.prototype.applyAction=function(e,n){return void 0===n&&(n=!1),o(this,void 0,void 0,function(){var t,r,i,o,s,u,l=this;return a(this,function(a){switch(a.label){case 0:return this.acceptActions?(t=function(n,t){return{id:f(),label:e.do,metadata:{createdBy:l.username,createdOn:c()},action:e,actionResult:t,parent:n,children:[],artifacts:{}}},i=this.graph.current,n?(r=t(this.graph.current,null),[3,3]):[3,1]):[2,Promise.resolve(this.graph.current)];case 1:return o=e.do,[4,(s=this.registry.getFunctionByName(o)).func.apply(s.thisArg,e.doArguments)];case 2:u=a.sent(),r=t(i,u),a.label=3;case 3:return i.children.push(r),this.graph.addNode(r),this.graph.current=r,[2,r]}})})},e}();function _(e,n){if(s(e)&&e.parent===n)return!0;if(s(n)&&n.parent!==e)throw new Error("Unconnected nodes, you probably should not be using this function");return!1}var g,y=function(){function e(e,n,t){void 0===t&&(t=null),this.trackingWhenTraversing=!1,this.registry=e,this.graph=n,this.tracker=t}return e.prototype.executeFunctions=function(e,n){return o(this,void 0,void 0,function(){var t,r,i,o;return a(this,function(a){switch(a.label){case 0:r=0,a.label=1;case 1:return r<e.length?(i=e[r],o=void 0,this.tracker&&this.tracker.acceptActions&&!this.trackingWhenTraversing?(this.tracker.acceptActions=!1,o=i.func.apply(i.thisArg,n[r]),this.tracker.acceptActions=!0):o=i.func.apply(i.thisArg,n[r]),[4,o]):[3,4];case 2:t=a.sent(),a.label=3;case 3:return r++,[3,1];case 4:return[2,t]}})})},e.prototype.toStateNode=function(e){return o(this,void 0,void 0,function(){var n,t,r,i,o,f,c;return a(this,function(a){switch(a.label){case 0:if(n=this.graph.current,t=this.graph.getNode(e),n===t)return[2,Promise.resolve(n)];if(!function e(n,t,r,i){if(void 0===i&&(i=n),n&&n===t)return r.unshift(n),!0;if(n){var o=n.children.slice();s(n)&&o.push(n.parent);for(var a=0,f=o;a<f.length;a++){var c=f[a];if(c!==i&&e(c,t,r,n))return r.unshift(n),!0}}return!1}(n,t,r=[]))throw new Error("No path to target node found in graph");return i=this.getFunctionsAndArgsFromTrack(r),o=i.functionsToDo,f=i.argumentsToDo,[4,this.executeFunctions(o,f)];case 1:return c=a.sent(),this.graph.current=t,[2,c]}})})},e.prototype.getFunctionsAndArgsFromTrack=function(e){for(var n=[],t=[],r=0;r<e.length-1;r++){var i=e[r],o=e[r+1];if(_(i,o)){if(!s(i))throw new Error("Going up from root? unreachable error ... i hope");if(!u(i.action))throw new Error("trying to undo an Irreversible action");var a=this.registry.getFunctionByName(i.action.undo);n.push(a),t.push(i.action.undoArguments)}else{if(!s(o))throw new Error("Going down to the root? unreachable error ... i hope");var f=this.registry.getFunctionByName(o.action.do);n.push(f),t.push(o.action.doArguments)}}return{functionsToDo:n,argumentsToDo:t}},e}(),m=function(){function e(e,n,t,r,i){void 0===r&&(r=[]),void 0===i&&(i=null),this._id=f(),this._name=e,this._duration=n,this._delay=t,this._annotations=r,this._node=i}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"node",{get:function(){return this._node},set:function(e){this._node=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"duration",{get:function(){return this._duration},set:function(e){this._duration=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"delay",{get:function(){return this._delay},set:function(e){this._delay=e},enumerable:!0,configurable:!0}),e.prototype.addAnnotation=function(e){this._annotations.push(e)},e.prototype.removeAnnotation=function(e){var n=this._annotations.indexOf(e);this._annotations.splice(n,1)},Object.defineProperty(e.prototype,"annotations",{get:function(){return this._annotations},enumerable:!0,configurable:!0}),e}(),v=function(){function e(e,n){this._slides=[],this._captainPlaceholder=new m("Captain Placeholder",0,0),this._mitt=l(),this._application=e,this._graph=n.graph,this._traverser=n,this._selectedSlide=null}return Object.defineProperty(e.prototype,"application",{get:function(){return this._application},enumerable:!0,configurable:!0}),e.prototype.addSlide=function(e,n){if((!n||isNaN(n)||!Number.isInteger(n)||n>this._slides.length||n<0)&&(n=this._slides.length),e&&this._slides.indexOf(e)>=0)throw new Error("Cannot add a slide that is already in the deck");if(!e){var t=this._graph.current;e=new m(t.label,1,0,[],t)}return 0===this._slides.length&&(this._selectedSlide=e),this._slides.splice(n,0,e),this._mitt.emit("slideAdded",e),e},e.prototype.removeSlideAtIndex=function(e){var n=this._slides.splice(e,1);this._selectedSlide===n[0]&&(this.selectedSlide=null),this._mitt.emit("slideRemoved",n[0])},e.prototype.removeSlide=function(e){this.removeSlideAtIndex(this._slides.indexOf(e))},Object.defineProperty(e.prototype,"selectedSlide",{get:function(){return this._selectedSlide},set:function(e){e&&e.node&&this._traverser.toStateNode(e.node.id),this._selectedSlide=e,this._mitt.emit("slideSelected",e)},enumerable:!0,configurable:!0}),e.prototype.moveSlide=function(e,n){if(n<0||n>this.slides.length-1)throw new Error("target index out of bounds");if(n>=this._slides.length)for(var t=n-this._slides.length+1;t--;)this._slides.push(this._captainPlaceholder);this._slides.splice(n,0,this._slides.splice(e,1)[0]),this._mitt.emit("slidesMoved",this._slides)},e.prototype.startTime=function(e){for(var n=this._slides.indexOf(e),t=0,r=0;r<n;r++)t+=this._slides[r].delay,t+=this._slides[r].duration;return t},e.prototype.slideAtTime=function(e){for(var n=0,t=null;e>=0&&n<this.slides.length;){var r=(t=this.slides[n]).delay+t.duration;if(e-r<0)break;e-=r,n++}return t},Object.defineProperty(e.prototype,"slides",{get:function(){return this._slides},enumerable:!0,configurable:!0}),e.prototype.next=function(){if(null!==this._selectedSlide){var e=this._slides.indexOf(this._selectedSlide);e<this._slides.length-1?(e+=1,this.selectedSlide=this._slides[e]):this.selectedSlide=this._slides[0]}},e.prototype.previous=function(){if(null!==this._selectedSlide){var e=this._slides.indexOf(this._selectedSlide);e>0?(e-=1,this.selectedSlide=this._slides[e]):this.selectedSlide=this._slides[this._slides.length-1]}},Object.defineProperty(e.prototype,"graph",{get:function(){return this._graph},enumerable:!0,configurable:!0}),e.prototype.on=function(e,n){this._mitt.on(e,n)},e.prototype.off=function(e,n){this._mitt.off(e,n)},e}();!function(e){e[e.IDLE=0]="IDLE",e[e.PLAYING=1]="PLAYING"}(g||(g={}));var x=function(){function e(e,n){this._selectCallback=n,this._slides=e,this._currentSlideIndex=0,this._status=g.IDLE}return e.prototype.setSlideIndex=function(e){this._currentSlideIndex=e},Object.defineProperty(e.prototype,"slides",{get:function(){return this._slides},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentSlideIndex",{get:function(){return this._currentSlideIndex},set:function(e){this._currentSlideIndex=e},enumerable:!0,configurable:!0}),e.prototype.play=function(){return o(this,void 0,void 0,function(){var e,n,t=this;return a(this,function(r){switch(r.label){case 0:if(e=function(){return t._status===g.PLAYING&&t._currentSlideIndex<t._slides.length-1},this._status!==g.IDLE)return[3,4];this._status=g.PLAYING,this._selectCallback(this._slides[this._currentSlideIndex]),r.label=1;case 1:return n=this._slides[this._currentSlideIndex],[4,(i=n.duration,new Promise(function(e){return setTimeout(e,i)}))];case 2:r.sent(),e()&&(this._currentSlideIndex+=1,this._selectCallback(this._slides[this._currentSlideIndex])),r.label=3;case 3:if(e())return[3,1];r.label=4;case 4:return this._status=g.IDLE,[2]}var i})})},e.prototype.next=function(){this._currentSlideIndex+=1,this._selectCallback(this._slides[this._currentSlideIndex])},Object.defineProperty(e.prototype,"status",{get:function(){return this._status},enumerable:!0,configurable:!0}),e.prototype.stop=function(){this._status=g.IDLE},e}()},function(e,n,t){"use strict";t.r(n),t.d(n,"ProvenanceTreeVisualization",function(){return a});var r=t(0);!function(){function e(e,n,t){var r,i;void 0===n&&(n="Unknown"),this._nodes={},this._mitt=(r=r||Object.create(null),{on:function(e,n){(r[e]||(r[e]=[])).push(n)},off:function(e,n){r[e]&&r[e].splice(r[e].indexOf(n)>>>0,1)},emit:function(e,n){(r[e]||[]).slice().map(function(e){e(n)})}}),this.application=e,this.root=t||{id:(i=(new Date).getTime(),"undefined"!=typeof performance&&"function"==typeof performance.now&&(i+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var n=(i+16*Math.random())%16|0;return i=Math.floor(i/16),("x"===e?n:3&n|8).toString(16)})),label:"Root",metadata:{createdBy:n,createdOn:(new Date).getTime()},children:[],artifacts:{}},this.addNode(this.root),this._current=this.root}e.prototype.addNode=function(e){if(this._nodes[e.id])throw new Error("Node already added");this._nodes[e.id]=e,this._mitt.emit("nodeAdded",e)},e.prototype.getNode=function(e){if(!this._nodes[e])throw new Error("Node id not found");return this._nodes[e]},Object.defineProperty(e.prototype,"current",{get:function(){return this._current},set:function(e){if(!this._nodes[e.id])throw new Error("Node id not found");this._current=e,this._mitt.emit("currentChanged",e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nodes",{get:function(){return this._nodes},enumerable:!0,configurable:!0}),e.prototype.emitNodeChangedEvent=function(e){if(!this._nodes[e.id])throw new Error("Node id not found");this._mitt.emit("nodeChanged",e)},e.prototype.on=function(e,n){this._mitt.on(e,n)},e.prototype.off=function(e,n){this._mitt.off(e,n)}}();function i(e,n){return e.maxDescendantDepth>n.maxDescendantDepth?-1:e.maxDescendantDepth<n.maxDescendantDepth?1:0}function o(){var e=5,n=50,t=[];var r=Object.assign(function(r,o){var a=r,f=o;a.leaves().forEach(function(e){e.ancestors().forEach(function(n){(!n.maxDescendantDepth||e.depth>n.maxDescendantDepth)&&(n.maxDescendantDepth=e.depth)})});var c=f;f.leaves().forEach(function(e){c.depth<e.depth&&(c=e)}),function e(n,r){n.xOffset=r,t[n.depth]=r,n.children&&n.leaves().sort(i).forEach(function(i){if(void 0===i.xOffset){var o=Math.max.apply(null,t.slice(n.depth,i.depth+1));e(i,r>o?r:o+1)}}),n.parent&&void 0===n.parent.xOffset&&e(n.parent,r)}(c,0);var s=Math.max.apply(null,t),u=Math.max.apply(null,a.leaves().map(function(e){return e.depth}));return a.each(function(t){!function(t,r,i){t.x=0===r?e:e-e/r*t.xOffset,t.y=0===i?n:n/i*t.depth}(t,s,u)}),a},{size:function(t){return t?(e=+t[0],n=+t[1],r):[e,n]}});return r}var a=function(){function e(e,n){var t=this;this.traverser=e,this.svg=Object(r.e)(n).append("svg").attr("viewBox","-10 -10 130 130").attr("style","width: 100%; height: 100%"),e.graph.on("currentChanged",function(){return t.update()}),this.update()}return e.prototype.update=function(){var e=this,n=Object(r.d)(this.traverser.graph.root),t=o().size([50,100]),i=n;n.each(function(n){n.data===e.traverser.graph.current&&(i=n)});var a=t(n,i),f=a.descendants(),c=this.svg.selectAll("g.node").data(f,function(e){return e.data.id}),s=c.enter().append("g").attr("class","node").attr("transform",function(e){return"translate("+e.x+", "+e.y+")"}).on("click",function(n){return e.traverser.toStateNode(n.data.id)});s.append("circle").attr("r",2),s.append("text").text(function(e){return"parent"in e.data?e.data.label:""}).attr("style","font-size: 8px").attr("x",7).attr("y",3),s.merge(c).attr("class","node").filter(function(e){return 0===e.xOffset}).attr("class","node branch-active").filter(function(n){return n.data===e.traverser.graph.current}).attr("class","node branch-active node-active"),s.merge(c).transition().duration(500).attr("transform",function(e){return"translate("+e.x+", "+e.y+")"});var u=function(e){var n=[e.source,e.target],t=n[0],r=n[1];return"M"+t.x+","+t.y+"C"+t.x+","+(t.y+r.y)/2+" "+r.x+","+(t.y+r.y)/2+" "+r.x+","+r.y},l=this.svg.selectAll("path.link").data(a.links(),function(e){return e.target.data.id}),h=l.enter().insert("path","g").attr("d",u);l.merge(h).attr("class","link").filter(function(e){return 0===e.target.xOffset}).attr("class","link active"),l.merge(h).transition().duration(500).attr("d",u)},e}()},function(e,n,t){"use strict";t.r(n),t.d(n,"SlideDeckVisualization",function(){return l});var r=t(0);function i(e,n){var t,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:f(0),throw:f(1),return:f(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function f(o){return function(f){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(e,a)}catch(e){o=[6,e],r=0}finally{t=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,f])}}}function o(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var t=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===n?t:3&t|8).toString(16)})}function a(e){return e=e||Object.create(null),{on:function(n,t){(e[n]||(e[n]=[])).push(t)},off:function(n,t){e[n]&&e[n].splice(e[n].indexOf(t)>>>0,1)},emit:function(n,t){(e[n]||[]).slice().map(function(e){e(t)})}}}!function(){function e(e,n,t){void 0===n&&(n="Unknown"),this._nodes={},this._mitt=a(),this.application=e,this.root=t||{id:o(),label:"Root",metadata:{createdBy:n,createdOn:(new Date).getTime()},children:[],artifacts:{}},this.addNode(this.root),this._current=this.root}e.prototype.addNode=function(e){if(this._nodes[e.id])throw new Error("Node already added");this._nodes[e.id]=e,this._mitt.emit("nodeAdded",e)},e.prototype.getNode=function(e){if(!this._nodes[e])throw new Error("Node id not found");return this._nodes[e]},Object.defineProperty(e.prototype,"current",{get:function(){return this._current},set:function(e){if(!this._nodes[e.id])throw new Error("Node id not found");this._current=e,this._mitt.emit("currentChanged",e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nodes",{get:function(){return this._nodes},enumerable:!0,configurable:!0}),e.prototype.emitNodeChangedEvent=function(e){if(!this._nodes[e.id])throw new Error("Node id not found");this._mitt.emit("nodeChanged",e)},e.prototype.on=function(e,n){this._mitt.on(e,n)},e.prototype.off=function(e,n){this._mitt.off(e,n)}}();var f,c=function(){function e(e,n,t,r,i){void 0===r&&(r=[]),void 0===i&&(i=null),this._id=o(),this._name=e,this._duration=n,this._delay=t,this._annotations=r,this._node=i}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"node",{get:function(){return this._node},set:function(e){this._node=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"duration",{get:function(){return this._duration},set:function(e){this._duration=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"delay",{get:function(){return this._delay},set:function(e){this._delay=e},enumerable:!0,configurable:!0}),e.prototype.addAnnotation=function(e){this._annotations.push(e)},e.prototype.removeAnnotation=function(e){var n=this._annotations.indexOf(e);this._annotations.splice(n,1)},Object.defineProperty(e.prototype,"annotations",{get:function(){return this._annotations},enumerable:!0,configurable:!0}),e}();!function(){function e(e,n){this._slides=[],this._captainPlaceholder=new c("Captain Placeholder",0,0),this._mitt=a(),this._application=e,this._graph=n.graph,this._traverser=n,this._selectedSlide=null}Object.defineProperty(e.prototype,"application",{get:function(){return this._application},enumerable:!0,configurable:!0}),e.prototype.addSlide=function(e,n){if((!n||isNaN(n)||!Number.isInteger(n)||n>this._slides.length||n<0)&&(n=this._slides.length),e&&this._slides.indexOf(e)>=0)throw new Error("Cannot add a slide that is already in the deck");if(!e){var t=this._graph.current;e=new c(t.label,1,0,[],t)}return 0===this._slides.length&&(this._selectedSlide=e),this._slides.splice(n,0,e),this._mitt.emit("slideAdded",e),e},e.prototype.removeSlideAtIndex=function(e){var n=this._slides.splice(e,1);this._selectedSlide===n[0]&&(this.selectedSlide=null),this._mitt.emit("slideRemoved",n[0])},e.prototype.removeSlide=function(e){this.removeSlideAtIndex(this._slides.indexOf(e))},Object.defineProperty(e.prototype,"selectedSlide",{get:function(){return this._selectedSlide},set:function(e){e&&e.node&&this._traverser.toStateNode(e.node.id),this._selectedSlide=e,this._mitt.emit("slideSelected",e)},enumerable:!0,configurable:!0}),e.prototype.moveSlide=function(e,n){if(n<0||n>this.slides.length-1)throw new Error("target index out of bounds");if(n>=this._slides.length)for(var t=n-this._slides.length+1;t--;)this._slides.push(this._captainPlaceholder);this._slides.splice(n,0,this._slides.splice(e,1)[0]),this._mitt.emit("slidesMoved",this._slides)},e.prototype.startTime=function(e){for(var n=this._slides.indexOf(e),t=0,r=0;r<n;r++)t+=this._slides[r].delay,t+=this._slides[r].duration;return t},e.prototype.slideAtTime=function(e){for(var n=0,t=null;e>=0&&n<this.slides.length;){var r=(t=this.slides[n]).delay+t.duration;if(e-r<0)break;e-=r,n++}return t},Object.defineProperty(e.prototype,"slides",{get:function(){return this._slides},enumerable:!0,configurable:!0}),e.prototype.next=function(){if(null!==this._selectedSlide){var e=this._slides.indexOf(this._selectedSlide);e<this._slides.length-1?(e+=1,this.selectedSlide=this._slides[e]):this.selectedSlide=this._slides[0]}},e.prototype.previous=function(){if(null!==this._selectedSlide){var e=this._slides.indexOf(this._selectedSlide);e>0?(e-=1,this.selectedSlide=this._slides[e]):this.selectedSlide=this._slides[this._slides.length-1]}},Object.defineProperty(e.prototype,"graph",{get:function(){return this._graph},enumerable:!0,configurable:!0}),e.prototype.on=function(e,n){this._mitt.on(e,n)},e.prototype.off=function(e,n){this._mitt.off(e,n)}}();!function(e){e[e.IDLE=0]="IDLE",e[e.PLAYING=1]="PLAYING"}(f||(f={}));var s=function(){function e(e,n){this._selectCallback=n,this._slides=e,this._currentSlideIndex=0,this._status=f.IDLE}return e.prototype.setSlideIndex=function(e){this._currentSlideIndex=e},Object.defineProperty(e.prototype,"slides",{get:function(){return this._slides},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentSlideIndex",{get:function(){return this._currentSlideIndex},set:function(e){this._currentSlideIndex=e},enumerable:!0,configurable:!0}),e.prototype.play=function(){return e=this,n=void 0,r=function(){var e,n,t=this;return i(this,function(r){switch(r.label){case 0:if(e=function(){return t._status===f.PLAYING&&t._currentSlideIndex<t._slides.length-1},this._status!==f.IDLE)return[3,4];this._status=f.PLAYING,this._selectCallback(this._slides[this._currentSlideIndex]),r.label=1;case 1:return n=this._slides[this._currentSlideIndex],[4,(i=n.duration,new Promise(function(e){return setTimeout(e,i)}))];case 2:r.sent(),e()&&(this._currentSlideIndex+=1,this._selectCallback(this._slides[this._currentSlideIndex])),r.label=3;case 3:if(e())return[3,1];r.label=4;case 4:return this._status=f.IDLE,[2]}var i})},new((t=void 0)||(t=Promise))(function(i,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function f(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){e.done?i(e.value):new t(function(n){n(e.value)}).then(a,f)}c((r=r.apply(e,n||[])).next())});var e,n,t,r},e.prototype.next=function(){this._currentSlideIndex+=1,this._selectCallback(this._slides[this._currentSlideIndex])},Object.defineProperty(e.prototype,"status",{get:function(){return this._status},enumerable:!0,configurable:!0}),e.prototype.stop=function(){this._status=f.IDLE},e}();function u(e){return function(...n){return e(this,...n)}}class l{constructor(e,n){this._tableHeight=1e3,this._tableWidth=300,this._minimumSlideDuration=5e3,this._barHeightTimeMultiplier=.01,this._barWidth=270,this._barPadding=5,this._resizebarheight=5,this._previousSlideY=0,this._lineX1=30,this._placeholderWidth=this._tableWidth-40,this._placeholderY=50,this._placeholderHeight=30,this._maxSlides=20,this._toolbarX=200,this._toolbarY=10,this._toolbarPadding=20,this._slideDuration=1e3,this._timeIndexedSlides=[],this._nextSlideY=50,this._index=(e=>this._slideDeck.slides.indexOf(e)),this.onDelete=(e=>{this._slideDeck.removeSlide(e)}),this.onSelect=(e=>{r.c.defaultPrevented||(this._slideDeck.selectedSlide=e)}),this.onAdd=(()=>{let e=this._slideDeck;const n=e.graph.current,t=new c(n.label,1e3,0,[],n);e.addSlide(t,e.selectedSlide?e.slides.indexOf(e.selectedSlide)+1:e.slides.length)}),this.onClone=(e=>{let n=this._slideDeck;const t=new c(e.name,1e3,0,[],e.node);n.addSlide(t,n.selectedSlide?n.slides.indexOf(n.selectedSlide)+1:n.slides.length)}),this.moveDragged=((e,n)=>{Object(r.e)(e).attr("transform",e=>{const n=this.previousSlidesHeight(e),t=r.c.y,i=this._slideDeck.slides.indexOf(e);if(t<n&&i>0){const e=this._slideDeck.slides[i-1];t<this.previousSlidesHeight(e)+this.barTotalHeight(e)/2&&this._slideDeck.moveSlide(i,i-1)}else if(t>n&&i<this._slideDeck.slides.length-1){const e=this._slideDeck.slides[i+1];t>this.previousSlidesHeight(e)+this.barTotalHeight(e)/2&&this._slideDeck.moveSlide(i,i+1)}return"translate(30,"+r.c.y+")"})}),this.moveDragended=((e,n)=>{Object(r.e)(e).classed("active",!1).attr("transform",e=>"translate(30,"+this.previousSlidesHeight(e)+")")}),this.delayDragged=((e,n)=>{n.delay=Math.max(0,r.c.y)/this._barHeightTimeMultiplier,this.update()}),this.delaySubject=((e,n)=>({y:this.barDelayHeight(n)})),this.durationDragged=((e,n)=>{n.duration=Math.max(0,r.c.y)/this._barHeightTimeMultiplier,this.update()}),this.durationSubject=((e,n)=>({y:this.barDurationHeight(n)})),this.onNext=(()=>{this._slideDeck.next()}),this.onPrevious=(()=>{this._slideDeck.previous()}),this.onPlay=(()=>{this._player.status===f.IDLE?this._player.play():this._player.stop(),Object(r.e)(r.c.target).classed("fa-play",!Object(r.e)(r.c.target).classed("fa-play")),Object(r.e)(r.c.target).classed("fa-pause",!Object(r.e)(r.c.target).classed("fa-pause"))}),this._slideDeck=e,this._root=Object(r.e)(n),this._slideTable=this._root.append("svg").attr("class","slide__table").attr("height",this._tableHeight).attr("width",this._tableWidth),this._slideTable.append("rect").attr("class","slides_background_rect").attr("x",0).attr("y",0).attr("height",this._tableHeight).attr("width",this._tableWidth),this._slideTable.append("line").attr("x1",this._lineX1).attr("y1",this._nextSlideY).attr("x2",this._lineX1).attr("stroke","gray").attr("stroke-width",2),this._slideTable.append("circle").attr("class","currentTime").attr("cx",this._lineX1).attr("cy",this._nextSlideY).attr("r",3).attr("fill","red"),this.setPlaceholder("slide_placeholder"),this.setPlaceholder("player_placeholder"),this.setAddButton(),this.setPreviousButton(),this.setPlayButton(),this.setNextButton(),e.on("slideAdded",()=>this.update()),e.on("slideRemoved",()=>this.update()),e.on("slidesMoved",()=>this.update()),e.on("slideSelected",()=>this.update()),this._player=new s(this._slideDeck.slides,e=>{this._slideDuration=e.duration,this._nextSlideY+=this.barTotalHeight(e),this._slideDeck.selectedSlide=e}),this.update()}onMouseEnter(){r.c.target.parentElement.querySelector(".slide_toolbar").style.display="block"}onMouseLeave(){r.c.target.parentElement.querySelector(".slide_toolbar").style.display="none"}moveDragStarted(e){Object(r.e)(this).raise().classed("active",!0)}barDelayHeight(e){let n=this._barHeightTimeMultiplier*e.delay;return Math.max(n,0)}barDurationHeight(e){let n=this._barHeightTimeMultiplier*e.duration;return Math.max(n,this._minimumSlideDuration*this._barHeightTimeMultiplier)}barTotalHeight(e){return this.barDelayHeight(e)+this.barDurationHeight(e)+2*this._resizebarheight}previousSlidesHeight(e){let n=this._slideDeck.slides.indexOf(e),t=50;for(let e=0;e<n;e++)t+=this.barTotalHeight(this._slideDeck.slides[e]);return t}updateTimeIndices(e){this._timeIndexedSlides=[];let n=0;e.slides.forEach(e=>{this._timeIndexedSlides.push({slide:e,startTime:n}),n+=e.delay+e.duration})}update(){this.updateTimeIndices(this._slideDeck);const e=this._slideTable.selectAll("g.slide").data(this._slideDeck.slides,e=>e.id),n=e.enter().append("g").attr("class","slide").call(Object(r.a)().clickDistance([2,2]).on("start",this.moveDragStarted).on("drag",u(this.moveDragged)).on("end",u(this.moveDragended)));n.append("rect").attr("class","slides_delay_resize").attr("x",this._barPadding).attr("width",this._barWidth-2*this._barPadding).attr("height",this._resizebarheight).attr("cursor","ns-resize").call(Object(r.a)().subject(u(this.delaySubject)).on("drag",u(this.delayDragged))),n.append("rect").attr("class","slides_delay_rect").attr("x",this._barPadding).attr("y",0).attr("width",this._barWidth-2*this._barPadding).on("click",this.onSelect);let t=n.append("g").attr("transform","translate(5,0)").attr("class","slide_group").on("mouseenter",this.onMouseEnter).on("mouseleave",this.onMouseLeave);t.append("rect").attr("class","slides_rect").attr("width",this._barWidth-2*this._barPadding).attr("cursor","move").on("click",this.onSelect),t.append("text").attr("class","slides_text").attr("x",2*this._barPadding).attr("dy",".35em"),t.append("text").attr("class","slides_delaytext").attr("x",2*this._barPadding).attr("dy",".35em");let i=t.append("g").attr("class","slide_toolbar");i.append("svg:foreignObject").attr("class","slides_delete_icon").attr("x",this._toolbarX).attr("cursor","pointer").attr("width",20).attr("height",20).append("xhtml:body").on("click",this.onDelete).html('<i class="fa fa-trash-o"></i>'),i.append("svg:foreignObject").attr("class","slides_clone_icon").attr("x",this._toolbarX+this._toolbarPadding).attr("cursor","pointer").attr("width",20).attr("height",20).append("xhtml:body").on("click",this.onClone).html('<i class="fa fa-copy"></i>');const o=this._slideTable.select("rect#slide_placeholder"),a=this._slideTable.select("rect#player_placeholder");n.append("text").attr("class","slides_durationtext").attr("x",this._barPadding-30).attr("dy","-.65em"),n.append("circle").attr("class","time").attr("cx",0).attr("r",3).attr("fill","black"),n.append("rect").attr("class","slides_duration_resize").attr("x",this._barPadding).attr("width",this._barWidth-2*this._barPadding).attr("height",this._resizebarheight).attr("cursor","ns-resize").call(Object(r.a)().subject(u(this.durationSubject)).on("drag",u(this.durationDragged)));const f=n.merge(e).attr("transform",e=>(this._previousSlideY=this.previousSlidesHeight(e),"translate(30,"+this.previousSlidesHeight(e)+")"));f.select("rect.slides_delay_rect").attr("height",e=>this.barDelayHeight(e)),f.select("rect.slides_delay_resize").attr("y",e=>this.barDelayHeight(e)),(t=f.select("g.slide_group")).select("rect.slides_rect").attr("selected",e=>this._slideDeck.selectedSlide===e).attr("y",e=>this.barDelayHeight(e)+this._resizebarheight).attr("height",e=>(this._placeholderY=this._previousSlideY+this.barDurationHeight(e)+this.barDelayHeight(e)+this._resizebarheight,this.barDurationHeight(e))),(i=f.select("g.slide_toolbar")).select("foreignObject.slides_delete_icon").attr("y",e=>this.barDelayHeight(e)+this._resizebarheight+2*this._barPadding),i.select("foreignObject.slides_clone_icon").attr("y",e=>this.barDelayHeight(e)+this._resizebarheight+2*this._barPadding),t.select("text.slides_text").attr("y",e=>this.barDelayHeight(e)+this._resizebarheight+2*this._barPadding).text(e=>e.name),t.select("text.slides_delaytext").attr("y",e=>this.barDelayHeight(e)+this._resizebarheight+1*this._barPadding+25).text(e=>"transition: "+e.delay/1e3),f.select("circle.time").attr("cy",e=>this.barDelayHeight(e)+this._resizebarheight),f.select("rect.slides_duration_resize").attr("y",e=>this.barTotalHeight(e)-this._resizebarheight),f.select("text.slides_durationtext").attr("y",e=>this.barDelayHeight(e)+this._resizebarheight+4*this._barPadding-7).text(e=>e.duration/1e3),o.attr("y",this._placeholderY+20),a.attr("y",5),this._slideTable.select("line").attr("y2",this._placeholderY+20),this._slideTable.select("foreignObject.slide_add").attr("y",this._placeholderY+26),this.animate(),e.exit().remove()}animate(){this._player.status===f.PLAYING?this._slideTable.select(".currentTime").transition().ease(r.b).duration(this._slideDuration).attr("cy",this._nextSlideY).on("end",()=>this.isLastSlide()):this._slideTable.select(".currentTime").transition().ease(r.b).duration(0)}isLastSlide(){null!==this._slideDeck.selectedSlide&&this._slideDeck.slides.indexOf(this._slideDeck.selectedSlide)===this._slideDeck.slides.length-1&&setTimeout(()=>{this._nextSlideY=50,this._slideTable.select(".currentTime").attr("cy",this._nextSlideY),this._slideDeck.selectedSlide=this._slideDeck.slides[0],this._slideTable.select(".fa-pause").classed("fa-play",!0).classed("fa-pause",!1),this._player.stop(),this._player.currentSlideIndex=0},2e3)}setPlaceholder(e){this._slideTable.append("rect").attr("id",e).attr("class","slides_placeholder").attr("x",this._lineX1+this._barPadding).attr("y",0).attr("width",this._placeholderWidth).attr("height",this._placeholderHeight)}setAddButton(){this._slideTable.append("svg:foreignObject").attr("class","slide_add").attr("x",(this._tableWidth-40)/2).attr("cursor","pointer").attr("width",30).attr("height",30).append("xhtml:body").on("click",this.onAdd).html('<i class="fa fa-file-text-o"></i>')}setPlayButton(){this._slideTable.append("svg:foreignObject").attr("id","slide_play").attr("x",(this._tableWidth-40)/2+30).attr("y",10).attr("cursor","pointer").attr("width",30).attr("height",30).append("xhtml:body").on("click",this.onPlay).html('<i class="fa fa-play"></i>')}setNextButton(){this._slideTable.append("svg:foreignObject").attr("x",(this._tableWidth-40)/2+60).attr("y",10).attr("cursor","pointer").attr("width",30).attr("height",30).append("xhtml:body").on("click",this.onNext).html('<i class="fa fa-forward"></i>')}setPreviousButton(){this._slideTable.append("svg:foreignObject").attr("x",(this._tableWidth-40)/2-10).attr("y",10).attr("cursor","pointer").attr("width",30).attr("height",30).append("xhtml:body").on("click",this.onPrevious).html('<i class="fa fa-backward"></i>')}}},function(e,n,t){var r=t(9);"string"==typeof r&&(r=[[e.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,i);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(1)(!1)).push([e.i,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',""])},function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,r=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,n){var i,o=n.trim().replace(/^"(.*)"$/,function(e,n){return n}).replace(/^'(.*)'$/,function(e,n){return n});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(e,n,t){var r=t(12);"string"==typeof r&&(r=[[e.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,i);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(1)(!1)).push([e.i,"html,\n* {\n  box-sizing: border-box; }\n\nhtml,\nbody {\n  height: 100%;\n  position: relative; }\n\nbody {\n  margin: 1em 1em 1em 1em; }\n\n#vis {\n  height: 300px;\n  width: 300px; }\n\n.node {\n  fill: lightsteelblue;\n  stroke: steelblue;\n  cursor: pointer; }\n  .node circle {\n    stroke-width: 0.3px; }\n  .node.branch-active {\n    fill: yellow;\n    background-color: #ccc; }\n    .node.branch-active text {\n      display: block; }\n  .node.node-active {\n    fill: blue;\n    stroke: darkblue; }\n  .node text {\n    display: none;\n    fill: black;\n    stroke-width: 0px;\n    font-family: sans-serif; }\n\n.link {\n  fill: none;\n  stroke: black;\n  stroke-width: 0.5px; }\n  .link.active {\n    stroke: black; }\n\n.intent_multiply {\n  fill: red; }\n\n.intent_add {\n  fill: green; }\n\n.intent_subtract {\n  fill: indigo; }\n",""])},function(e,n,t){var r=t(14);"string"==typeof r&&(r=[[e.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,i);r.locals&&(e.exports=r.locals)},function(e,n,t){(n=e.exports=t(1)(!1)).i(t(15),""),n.push([e.i,'#slideDeck {\n    height: 400px;\n    overflow-y: scroll;\n}\n::-webkit-scrollbar {\n    display: none;\n}\ndiv.slidedeck__slide {\n    background-color: #ccc;\n    margin-bottom: 0.5em;\n    border: 1px solid black;\n}\n\ntable.slides__table {\n    width: 300px;\n}\n\ntable.slides__table tr.selected {\n    background-color: #00b8d9;\n}\n.add {\n    font-family: "FontAwesome";\n}\n\ndiv.slidedeck__slide[draggable="true"] {\n    background-color: #00b8d9;\n}\n\n.slides_background_rect {\n    fill: #ffffff;\n    stroke: #aaaaaa;\n}\n\n.slides_delay_rect {\n    fill: #dddddd;\n    stroke: #dddddd;\n}\n\n.slides_delay_resize,\n.slides_duration_resize {\n    fill: white;\n}\n\n.slides_rect {\n    fill: #f0f0f0;\n    stroke: #dddddd;\n    rx: 5px;\n    ry: 5px;\n}\n\n.slides_rect[selected="true"] {\n    fill: #00b8d9;\n    stroke: #dddddd;\n}\n\n.slides_text {\n    fill: #000000;\n}\n\n.slides_delete_rect {\n    fill: #aaaaaa;\n}\n\n.slides_placeholder {\n    rx: 5px;\n    ry: 5px;\n    stroke-dasharray: 5;\n    fill-opacity: 0.1;\n    stroke: black;\n    stroke-width: 1px;\n}\n#player_placeholder {\n    stroke-dasharray: none;\n}\n.slides_durationtext {\n    font-size: 12px;\n    font-weight: 600;\n}\n',""])},function(e,n,t){var r=t(16);(e.exports=t(1)(!1)).push([e.i,"/*!\n *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n */\n/* FONT PATH\n * -------------------------- */\n@font-face {\n  font-family: 'FontAwesome';\n  src: url("+r(t(17))+");\n  src: url("+r(t(18))+"?#iefix&v=4.7.0) format('embedded-opentype'), url("+r(t(19))+") format('woff2'), url("+r(t(20))+") format('woff'), url("+r(t(21))+") format('truetype'), url("+r(t(22))+'#fontawesomeregular) format(\'svg\');\n  font-weight: normal;\n  font-style: normal;\n}\n.fa {\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n/* makes the font 33% larger relative to the icon container */\n.fa-lg {\n  font-size: 1.33333333em;\n  line-height: 0.75em;\n  vertical-align: -15%;\n}\n.fa-2x {\n  font-size: 2em;\n}\n.fa-3x {\n  font-size: 3em;\n}\n.fa-4x {\n  font-size: 4em;\n}\n.fa-5x {\n  font-size: 5em;\n}\n.fa-fw {\n  width: 1.28571429em;\n  text-align: center;\n}\n.fa-ul {\n  padding-left: 0;\n  margin-left: 2.14285714em;\n  list-style-type: none;\n}\n.fa-ul > li {\n  position: relative;\n}\n.fa-li {\n  position: absolute;\n  left: -2.14285714em;\n  width: 2.14285714em;\n  top: 0.14285714em;\n  text-align: center;\n}\n.fa-li.fa-lg {\n  left: -1.85714286em;\n}\n.fa-border {\n  padding: .2em .25em .15em;\n  border: solid 0.08em #eeeeee;\n  border-radius: .1em;\n}\n.fa-pull-left {\n  float: left;\n}\n.fa-pull-right {\n  float: right;\n}\n.fa.fa-pull-left {\n  margin-right: .3em;\n}\n.fa.fa-pull-right {\n  margin-left: .3em;\n}\n/* Deprecated as of 4.4.0 */\n.pull-right {\n  float: right;\n}\n.pull-left {\n  float: left;\n}\n.fa.pull-left {\n  margin-right: .3em;\n}\n.fa.pull-right {\n  margin-left: .3em;\n}\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n  animation: fa-spin 2s infinite linear;\n}\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n  animation: fa-spin 1s infinite steps(8);\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";\n  -webkit-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n.fa-rotate-180 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n.fa-rotate-270 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";\n  -webkit-transform: rotate(270deg);\n  -ms-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n.fa-flip-horizontal {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";\n  -webkit-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1);\n}\n.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1);\n}\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical {\n  filter: none;\n}\n.fa-stack {\n  position: relative;\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  line-height: 2em;\n  vertical-align: middle;\n}\n.fa-stack-1x,\n.fa-stack-2x {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  text-align: center;\n}\n.fa-stack-1x {\n  line-height: inherit;\n}\n.fa-stack-2x {\n  font-size: 2em;\n}\n.fa-inverse {\n  color: #ffffff;\n}\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\n   readers do not read off random characters that represent icons */\n.fa-glass:before {\n  content: "\\F000";\n}\n.fa-music:before {\n  content: "\\F001";\n}\n.fa-search:before {\n  content: "\\F002";\n}\n.fa-envelope-o:before {\n  content: "\\F003";\n}\n.fa-heart:before {\n  content: "\\F004";\n}\n.fa-star:before {\n  content: "\\F005";\n}\n.fa-star-o:before {\n  content: "\\F006";\n}\n.fa-user:before {\n  content: "\\F007";\n}\n.fa-film:before {\n  content: "\\F008";\n}\n.fa-th-large:before {\n  content: "\\F009";\n}\n.fa-th:before {\n  content: "\\F00A";\n}\n.fa-th-list:before {\n  content: "\\F00B";\n}\n.fa-check:before {\n  content: "\\F00C";\n}\n.fa-remove:before,\n.fa-close:before,\n.fa-times:before {\n  content: "\\F00D";\n}\n.fa-search-plus:before {\n  content: "\\F00E";\n}\n.fa-search-minus:before {\n  content: "\\F010";\n}\n.fa-power-off:before {\n  content: "\\F011";\n}\n.fa-signal:before {\n  content: "\\F012";\n}\n.fa-gear:before,\n.fa-cog:before {\n  content: "\\F013";\n}\n.fa-trash-o:before {\n  content: "\\F014";\n}\n.fa-home:before {\n  content: "\\F015";\n}\n.fa-file-o:before {\n  content: "\\F016";\n}\n.fa-clock-o:before {\n  content: "\\F017";\n}\n.fa-road:before {\n  content: "\\F018";\n}\n.fa-download:before {\n  content: "\\F019";\n}\n.fa-arrow-circle-o-down:before {\n  content: "\\F01A";\n}\n.fa-arrow-circle-o-up:before {\n  content: "\\F01B";\n}\n.fa-inbox:before {\n  content: "\\F01C";\n}\n.fa-play-circle-o:before {\n  content: "\\F01D";\n}\n.fa-rotate-right:before,\n.fa-repeat:before {\n  content: "\\F01E";\n}\n.fa-refresh:before {\n  content: "\\F021";\n}\n.fa-list-alt:before {\n  content: "\\F022";\n}\n.fa-lock:before {\n  content: "\\F023";\n}\n.fa-flag:before {\n  content: "\\F024";\n}\n.fa-headphones:before {\n  content: "\\F025";\n}\n.fa-volume-off:before {\n  content: "\\F026";\n}\n.fa-volume-down:before {\n  content: "\\F027";\n}\n.fa-volume-up:before {\n  content: "\\F028";\n}\n.fa-qrcode:before {\n  content: "\\F029";\n}\n.fa-barcode:before {\n  content: "\\F02A";\n}\n.fa-tag:before {\n  content: "\\F02B";\n}\n.fa-tags:before {\n  content: "\\F02C";\n}\n.fa-book:before {\n  content: "\\F02D";\n}\n.fa-bookmark:before {\n  content: "\\F02E";\n}\n.fa-print:before {\n  content: "\\F02F";\n}\n.fa-camera:before {\n  content: "\\F030";\n}\n.fa-font:before {\n  content: "\\F031";\n}\n.fa-bold:before {\n  content: "\\F032";\n}\n.fa-italic:before {\n  content: "\\F033";\n}\n.fa-text-height:before {\n  content: "\\F034";\n}\n.fa-text-width:before {\n  content: "\\F035";\n}\n.fa-align-left:before {\n  content: "\\F036";\n}\n.fa-align-center:before {\n  content: "\\F037";\n}\n.fa-align-right:before {\n  content: "\\F038";\n}\n.fa-align-justify:before {\n  content: "\\F039";\n}\n.fa-list:before {\n  content: "\\F03A";\n}\n.fa-dedent:before,\n.fa-outdent:before {\n  content: "\\F03B";\n}\n.fa-indent:before {\n  content: "\\F03C";\n}\n.fa-video-camera:before {\n  content: "\\F03D";\n}\n.fa-photo:before,\n.fa-image:before,\n.fa-picture-o:before {\n  content: "\\F03E";\n}\n.fa-pencil:before {\n  content: "\\F040";\n}\n.fa-map-marker:before {\n  content: "\\F041";\n}\n.fa-adjust:before {\n  content: "\\F042";\n}\n.fa-tint:before {\n  content: "\\F043";\n}\n.fa-edit:before,\n.fa-pencil-square-o:before {\n  content: "\\F044";\n}\n.fa-share-square-o:before {\n  content: "\\F045";\n}\n.fa-check-square-o:before {\n  content: "\\F046";\n}\n.fa-arrows:before {\n  content: "\\F047";\n}\n.fa-step-backward:before {\n  content: "\\F048";\n}\n.fa-fast-backward:before {\n  content: "\\F049";\n}\n.fa-backward:before {\n  content: "\\F04A";\n}\n.fa-play:before {\n  content: "\\F04B";\n}\n.fa-pause:before {\n  content: "\\F04C";\n}\n.fa-stop:before {\n  content: "\\F04D";\n}\n.fa-forward:before {\n  content: "\\F04E";\n}\n.fa-fast-forward:before {\n  content: "\\F050";\n}\n.fa-step-forward:before {\n  content: "\\F051";\n}\n.fa-eject:before {\n  content: "\\F052";\n}\n.fa-chevron-left:before {\n  content: "\\F053";\n}\n.fa-chevron-right:before {\n  content: "\\F054";\n}\n.fa-plus-circle:before {\n  content: "\\F055";\n}\n.fa-minus-circle:before {\n  content: "\\F056";\n}\n.fa-times-circle:before {\n  content: "\\F057";\n}\n.fa-check-circle:before {\n  content: "\\F058";\n}\n.fa-question-circle:before {\n  content: "\\F059";\n}\n.fa-info-circle:before {\n  content: "\\F05A";\n}\n.fa-crosshairs:before {\n  content: "\\F05B";\n}\n.fa-times-circle-o:before {\n  content: "\\F05C";\n}\n.fa-check-circle-o:before {\n  content: "\\F05D";\n}\n.fa-ban:before {\n  content: "\\F05E";\n}\n.fa-arrow-left:before {\n  content: "\\F060";\n}\n.fa-arrow-right:before {\n  content: "\\F061";\n}\n.fa-arrow-up:before {\n  content: "\\F062";\n}\n.fa-arrow-down:before {\n  content: "\\F063";\n}\n.fa-mail-forward:before,\n.fa-share:before {\n  content: "\\F064";\n}\n.fa-expand:before {\n  content: "\\F065";\n}\n.fa-compress:before {\n  content: "\\F066";\n}\n.fa-plus:before {\n  content: "\\F067";\n}\n.fa-minus:before {\n  content: "\\F068";\n}\n.fa-asterisk:before {\n  content: "\\F069";\n}\n.fa-exclamation-circle:before {\n  content: "\\F06A";\n}\n.fa-gift:before {\n  content: "\\F06B";\n}\n.fa-leaf:before {\n  content: "\\F06C";\n}\n.fa-fire:before {\n  content: "\\F06D";\n}\n.fa-eye:before {\n  content: "\\F06E";\n}\n.fa-eye-slash:before {\n  content: "\\F070";\n}\n.fa-warning:before,\n.fa-exclamation-triangle:before {\n  content: "\\F071";\n}\n.fa-plane:before {\n  content: "\\F072";\n}\n.fa-calendar:before {\n  content: "\\F073";\n}\n.fa-random:before {\n  content: "\\F074";\n}\n.fa-comment:before {\n  content: "\\F075";\n}\n.fa-magnet:before {\n  content: "\\F076";\n}\n.fa-chevron-up:before {\n  content: "\\F077";\n}\n.fa-chevron-down:before {\n  content: "\\F078";\n}\n.fa-retweet:before {\n  content: "\\F079";\n}\n.fa-shopping-cart:before {\n  content: "\\F07A";\n}\n.fa-folder:before {\n  content: "\\F07B";\n}\n.fa-folder-open:before {\n  content: "\\F07C";\n}\n.fa-arrows-v:before {\n  content: "\\F07D";\n}\n.fa-arrows-h:before {\n  content: "\\F07E";\n}\n.fa-bar-chart-o:before,\n.fa-bar-chart:before {\n  content: "\\F080";\n}\n.fa-twitter-square:before {\n  content: "\\F081";\n}\n.fa-facebook-square:before {\n  content: "\\F082";\n}\n.fa-camera-retro:before {\n  content: "\\F083";\n}\n.fa-key:before {\n  content: "\\F084";\n}\n.fa-gears:before,\n.fa-cogs:before {\n  content: "\\F085";\n}\n.fa-comments:before {\n  content: "\\F086";\n}\n.fa-thumbs-o-up:before {\n  content: "\\F087";\n}\n.fa-thumbs-o-down:before {\n  content: "\\F088";\n}\n.fa-star-half:before {\n  content: "\\F089";\n}\n.fa-heart-o:before {\n  content: "\\F08A";\n}\n.fa-sign-out:before {\n  content: "\\F08B";\n}\n.fa-linkedin-square:before {\n  content: "\\F08C";\n}\n.fa-thumb-tack:before {\n  content: "\\F08D";\n}\n.fa-external-link:before {\n  content: "\\F08E";\n}\n.fa-sign-in:before {\n  content: "\\F090";\n}\n.fa-trophy:before {\n  content: "\\F091";\n}\n.fa-github-square:before {\n  content: "\\F092";\n}\n.fa-upload:before {\n  content: "\\F093";\n}\n.fa-lemon-o:before {\n  content: "\\F094";\n}\n.fa-phone:before {\n  content: "\\F095";\n}\n.fa-square-o:before {\n  content: "\\F096";\n}\n.fa-bookmark-o:before {\n  content: "\\F097";\n}\n.fa-phone-square:before {\n  content: "\\F098";\n}\n.fa-twitter:before {\n  content: "\\F099";\n}\n.fa-facebook-f:before,\n.fa-facebook:before {\n  content: "\\F09A";\n}\n.fa-github:before {\n  content: "\\F09B";\n}\n.fa-unlock:before {\n  content: "\\F09C";\n}\n.fa-credit-card:before {\n  content: "\\F09D";\n}\n.fa-feed:before,\n.fa-rss:before {\n  content: "\\F09E";\n}\n.fa-hdd-o:before {\n  content: "\\F0A0";\n}\n.fa-bullhorn:before {\n  content: "\\F0A1";\n}\n.fa-bell:before {\n  content: "\\F0F3";\n}\n.fa-certificate:before {\n  content: "\\F0A3";\n}\n.fa-hand-o-right:before {\n  content: "\\F0A4";\n}\n.fa-hand-o-left:before {\n  content: "\\F0A5";\n}\n.fa-hand-o-up:before {\n  content: "\\F0A6";\n}\n.fa-hand-o-down:before {\n  content: "\\F0A7";\n}\n.fa-arrow-circle-left:before {\n  content: "\\F0A8";\n}\n.fa-arrow-circle-right:before {\n  content: "\\F0A9";\n}\n.fa-arrow-circle-up:before {\n  content: "\\F0AA";\n}\n.fa-arrow-circle-down:before {\n  content: "\\F0AB";\n}\n.fa-globe:before {\n  content: "\\F0AC";\n}\n.fa-wrench:before {\n  content: "\\F0AD";\n}\n.fa-tasks:before {\n  content: "\\F0AE";\n}\n.fa-filter:before {\n  content: "\\F0B0";\n}\n.fa-briefcase:before {\n  content: "\\F0B1";\n}\n.fa-arrows-alt:before {\n  content: "\\F0B2";\n}\n.fa-group:before,\n.fa-users:before {\n  content: "\\F0C0";\n}\n.fa-chain:before,\n.fa-link:before {\n  content: "\\F0C1";\n}\n.fa-cloud:before {\n  content: "\\F0C2";\n}\n.fa-flask:before {\n  content: "\\F0C3";\n}\n.fa-cut:before,\n.fa-scissors:before {\n  content: "\\F0C4";\n}\n.fa-copy:before,\n.fa-files-o:before {\n  content: "\\F0C5";\n}\n.fa-paperclip:before {\n  content: "\\F0C6";\n}\n.fa-save:before,\n.fa-floppy-o:before {\n  content: "\\F0C7";\n}\n.fa-square:before {\n  content: "\\F0C8";\n}\n.fa-navicon:before,\n.fa-reorder:before,\n.fa-bars:before {\n  content: "\\F0C9";\n}\n.fa-list-ul:before {\n  content: "\\F0CA";\n}\n.fa-list-ol:before {\n  content: "\\F0CB";\n}\n.fa-strikethrough:before {\n  content: "\\F0CC";\n}\n.fa-underline:before {\n  content: "\\F0CD";\n}\n.fa-table:before {\n  content: "\\F0CE";\n}\n.fa-magic:before {\n  content: "\\F0D0";\n}\n.fa-truck:before {\n  content: "\\F0D1";\n}\n.fa-pinterest:before {\n  content: "\\F0D2";\n}\n.fa-pinterest-square:before {\n  content: "\\F0D3";\n}\n.fa-google-plus-square:before {\n  content: "\\F0D4";\n}\n.fa-google-plus:before {\n  content: "\\F0D5";\n}\n.fa-money:before {\n  content: "\\F0D6";\n}\n.fa-caret-down:before {\n  content: "\\F0D7";\n}\n.fa-caret-up:before {\n  content: "\\F0D8";\n}\n.fa-caret-left:before {\n  content: "\\F0D9";\n}\n.fa-caret-right:before {\n  content: "\\F0DA";\n}\n.fa-columns:before {\n  content: "\\F0DB";\n}\n.fa-unsorted:before,\n.fa-sort:before {\n  content: "\\F0DC";\n}\n.fa-sort-down:before,\n.fa-sort-desc:before {\n  content: "\\F0DD";\n}\n.fa-sort-up:before,\n.fa-sort-asc:before {\n  content: "\\F0DE";\n}\n.fa-envelope:before {\n  content: "\\F0E0";\n}\n.fa-linkedin:before {\n  content: "\\F0E1";\n}\n.fa-rotate-left:before,\n.fa-undo:before {\n  content: "\\F0E2";\n}\n.fa-legal:before,\n.fa-gavel:before {\n  content: "\\F0E3";\n}\n.fa-dashboard:before,\n.fa-tachometer:before {\n  content: "\\F0E4";\n}\n.fa-comment-o:before {\n  content: "\\F0E5";\n}\n.fa-comments-o:before {\n  content: "\\F0E6";\n}\n.fa-flash:before,\n.fa-bolt:before {\n  content: "\\F0E7";\n}\n.fa-sitemap:before {\n  content: "\\F0E8";\n}\n.fa-umbrella:before {\n  content: "\\F0E9";\n}\n.fa-paste:before,\n.fa-clipboard:before {\n  content: "\\F0EA";\n}\n.fa-lightbulb-o:before {\n  content: "\\F0EB";\n}\n.fa-exchange:before {\n  content: "\\F0EC";\n}\n.fa-cloud-download:before {\n  content: "\\F0ED";\n}\n.fa-cloud-upload:before {\n  content: "\\F0EE";\n}\n.fa-user-md:before {\n  content: "\\F0F0";\n}\n.fa-stethoscope:before {\n  content: "\\F0F1";\n}\n.fa-suitcase:before {\n  content: "\\F0F2";\n}\n.fa-bell-o:before {\n  content: "\\F0A2";\n}\n.fa-coffee:before {\n  content: "\\F0F4";\n}\n.fa-cutlery:before {\n  content: "\\F0F5";\n}\n.fa-file-text-o:before {\n  content: "\\F0F6";\n}\n.fa-building-o:before {\n  content: "\\F0F7";\n}\n.fa-hospital-o:before {\n  content: "\\F0F8";\n}\n.fa-ambulance:before {\n  content: "\\F0F9";\n}\n.fa-medkit:before {\n  content: "\\F0FA";\n}\n.fa-fighter-jet:before {\n  content: "\\F0FB";\n}\n.fa-beer:before {\n  content: "\\F0FC";\n}\n.fa-h-square:before {\n  content: "\\F0FD";\n}\n.fa-plus-square:before {\n  content: "\\F0FE";\n}\n.fa-angle-double-left:before {\n  content: "\\F100";\n}\n.fa-angle-double-right:before {\n  content: "\\F101";\n}\n.fa-angle-double-up:before {\n  content: "\\F102";\n}\n.fa-angle-double-down:before {\n  content: "\\F103";\n}\n.fa-angle-left:before {\n  content: "\\F104";\n}\n.fa-angle-right:before {\n  content: "\\F105";\n}\n.fa-angle-up:before {\n  content: "\\F106";\n}\n.fa-angle-down:before {\n  content: "\\F107";\n}\n.fa-desktop:before {\n  content: "\\F108";\n}\n.fa-laptop:before {\n  content: "\\F109";\n}\n.fa-tablet:before {\n  content: "\\F10A";\n}\n.fa-mobile-phone:before,\n.fa-mobile:before {\n  content: "\\F10B";\n}\n.fa-circle-o:before {\n  content: "\\F10C";\n}\n.fa-quote-left:before {\n  content: "\\F10D";\n}\n.fa-quote-right:before {\n  content: "\\F10E";\n}\n.fa-spinner:before {\n  content: "\\F110";\n}\n.fa-circle:before {\n  content: "\\F111";\n}\n.fa-mail-reply:before,\n.fa-reply:before {\n  content: "\\F112";\n}\n.fa-github-alt:before {\n  content: "\\F113";\n}\n.fa-folder-o:before {\n  content: "\\F114";\n}\n.fa-folder-open-o:before {\n  content: "\\F115";\n}\n.fa-smile-o:before {\n  content: "\\F118";\n}\n.fa-frown-o:before {\n  content: "\\F119";\n}\n.fa-meh-o:before {\n  content: "\\F11A";\n}\n.fa-gamepad:before {\n  content: "\\F11B";\n}\n.fa-keyboard-o:before {\n  content: "\\F11C";\n}\n.fa-flag-o:before {\n  content: "\\F11D";\n}\n.fa-flag-checkered:before {\n  content: "\\F11E";\n}\n.fa-terminal:before {\n  content: "\\F120";\n}\n.fa-code:before {\n  content: "\\F121";\n}\n.fa-mail-reply-all:before,\n.fa-reply-all:before {\n  content: "\\F122";\n}\n.fa-star-half-empty:before,\n.fa-star-half-full:before,\n.fa-star-half-o:before {\n  content: "\\F123";\n}\n.fa-location-arrow:before {\n  content: "\\F124";\n}\n.fa-crop:before {\n  content: "\\F125";\n}\n.fa-code-fork:before {\n  content: "\\F126";\n}\n.fa-unlink:before,\n.fa-chain-broken:before {\n  content: "\\F127";\n}\n.fa-question:before {\n  content: "\\F128";\n}\n.fa-info:before {\n  content: "\\F129";\n}\n.fa-exclamation:before {\n  content: "\\F12A";\n}\n.fa-superscript:before {\n  content: "\\F12B";\n}\n.fa-subscript:before {\n  content: "\\F12C";\n}\n.fa-eraser:before {\n  content: "\\F12D";\n}\n.fa-puzzle-piece:before {\n  content: "\\F12E";\n}\n.fa-microphone:before {\n  content: "\\F130";\n}\n.fa-microphone-slash:before {\n  content: "\\F131";\n}\n.fa-shield:before {\n  content: "\\F132";\n}\n.fa-calendar-o:before {\n  content: "\\F133";\n}\n.fa-fire-extinguisher:before {\n  content: "\\F134";\n}\n.fa-rocket:before {\n  content: "\\F135";\n}\n.fa-maxcdn:before {\n  content: "\\F136";\n}\n.fa-chevron-circle-left:before {\n  content: "\\F137";\n}\n.fa-chevron-circle-right:before {\n  content: "\\F138";\n}\n.fa-chevron-circle-up:before {\n  content: "\\F139";\n}\n.fa-chevron-circle-down:before {\n  content: "\\F13A";\n}\n.fa-html5:before {\n  content: "\\F13B";\n}\n.fa-css3:before {\n  content: "\\F13C";\n}\n.fa-anchor:before {\n  content: "\\F13D";\n}\n.fa-unlock-alt:before {\n  content: "\\F13E";\n}\n.fa-bullseye:before {\n  content: "\\F140";\n}\n.fa-ellipsis-h:before {\n  content: "\\F141";\n}\n.fa-ellipsis-v:before {\n  content: "\\F142";\n}\n.fa-rss-square:before {\n  content: "\\F143";\n}\n.fa-play-circle:before {\n  content: "\\F144";\n}\n.fa-ticket:before {\n  content: "\\F145";\n}\n.fa-minus-square:before {\n  content: "\\F146";\n}\n.fa-minus-square-o:before {\n  content: "\\F147";\n}\n.fa-level-up:before {\n  content: "\\F148";\n}\n.fa-level-down:before {\n  content: "\\F149";\n}\n.fa-check-square:before {\n  content: "\\F14A";\n}\n.fa-pencil-square:before {\n  content: "\\F14B";\n}\n.fa-external-link-square:before {\n  content: "\\F14C";\n}\n.fa-share-square:before {\n  content: "\\F14D";\n}\n.fa-compass:before {\n  content: "\\F14E";\n}\n.fa-toggle-down:before,\n.fa-caret-square-o-down:before {\n  content: "\\F150";\n}\n.fa-toggle-up:before,\n.fa-caret-square-o-up:before {\n  content: "\\F151";\n}\n.fa-toggle-right:before,\n.fa-caret-square-o-right:before {\n  content: "\\F152";\n}\n.fa-euro:before,\n.fa-eur:before {\n  content: "\\F153";\n}\n.fa-gbp:before {\n  content: "\\F154";\n}\n.fa-dollar:before,\n.fa-usd:before {\n  content: "\\F155";\n}\n.fa-rupee:before,\n.fa-inr:before {\n  content: "\\F156";\n}\n.fa-cny:before,\n.fa-rmb:before,\n.fa-yen:before,\n.fa-jpy:before {\n  content: "\\F157";\n}\n.fa-ruble:before,\n.fa-rouble:before,\n.fa-rub:before {\n  content: "\\F158";\n}\n.fa-won:before,\n.fa-krw:before {\n  content: "\\F159";\n}\n.fa-bitcoin:before,\n.fa-btc:before {\n  content: "\\F15A";\n}\n.fa-file:before {\n  content: "\\F15B";\n}\n.fa-file-text:before {\n  content: "\\F15C";\n}\n.fa-sort-alpha-asc:before {\n  content: "\\F15D";\n}\n.fa-sort-alpha-desc:before {\n  content: "\\F15E";\n}\n.fa-sort-amount-asc:before {\n  content: "\\F160";\n}\n.fa-sort-amount-desc:before {\n  content: "\\F161";\n}\n.fa-sort-numeric-asc:before {\n  content: "\\F162";\n}\n.fa-sort-numeric-desc:before {\n  content: "\\F163";\n}\n.fa-thumbs-up:before {\n  content: "\\F164";\n}\n.fa-thumbs-down:before {\n  content: "\\F165";\n}\n.fa-youtube-square:before {\n  content: "\\F166";\n}\n.fa-youtube:before {\n  content: "\\F167";\n}\n.fa-xing:before {\n  content: "\\F168";\n}\n.fa-xing-square:before {\n  content: "\\F169";\n}\n.fa-youtube-play:before {\n  content: "\\F16A";\n}\n.fa-dropbox:before {\n  content: "\\F16B";\n}\n.fa-stack-overflow:before {\n  content: "\\F16C";\n}\n.fa-instagram:before {\n  content: "\\F16D";\n}\n.fa-flickr:before {\n  content: "\\F16E";\n}\n.fa-adn:before {\n  content: "\\F170";\n}\n.fa-bitbucket:before {\n  content: "\\F171";\n}\n.fa-bitbucket-square:before {\n  content: "\\F172";\n}\n.fa-tumblr:before {\n  content: "\\F173";\n}\n.fa-tumblr-square:before {\n  content: "\\F174";\n}\n.fa-long-arrow-down:before {\n  content: "\\F175";\n}\n.fa-long-arrow-up:before {\n  content: "\\F176";\n}\n.fa-long-arrow-left:before {\n  content: "\\F177";\n}\n.fa-long-arrow-right:before {\n  content: "\\F178";\n}\n.fa-apple:before {\n  content: "\\F179";\n}\n.fa-windows:before {\n  content: "\\F17A";\n}\n.fa-android:before {\n  content: "\\F17B";\n}\n.fa-linux:before {\n  content: "\\F17C";\n}\n.fa-dribbble:before {\n  content: "\\F17D";\n}\n.fa-skype:before {\n  content: "\\F17E";\n}\n.fa-foursquare:before {\n  content: "\\F180";\n}\n.fa-trello:before {\n  content: "\\F181";\n}\n.fa-female:before {\n  content: "\\F182";\n}\n.fa-male:before {\n  content: "\\F183";\n}\n.fa-gittip:before,\n.fa-gratipay:before {\n  content: "\\F184";\n}\n.fa-sun-o:before {\n  content: "\\F185";\n}\n.fa-moon-o:before {\n  content: "\\F186";\n}\n.fa-archive:before {\n  content: "\\F187";\n}\n.fa-bug:before {\n  content: "\\F188";\n}\n.fa-vk:before {\n  content: "\\F189";\n}\n.fa-weibo:before {\n  content: "\\F18A";\n}\n.fa-renren:before {\n  content: "\\F18B";\n}\n.fa-pagelines:before {\n  content: "\\F18C";\n}\n.fa-stack-exchange:before {\n  content: "\\F18D";\n}\n.fa-arrow-circle-o-right:before {\n  content: "\\F18E";\n}\n.fa-arrow-circle-o-left:before {\n  content: "\\F190";\n}\n.fa-toggle-left:before,\n.fa-caret-square-o-left:before {\n  content: "\\F191";\n}\n.fa-dot-circle-o:before {\n  content: "\\F192";\n}\n.fa-wheelchair:before {\n  content: "\\F193";\n}\n.fa-vimeo-square:before {\n  content: "\\F194";\n}\n.fa-turkish-lira:before,\n.fa-try:before {\n  content: "\\F195";\n}\n.fa-plus-square-o:before {\n  content: "\\F196";\n}\n.fa-space-shuttle:before {\n  content: "\\F197";\n}\n.fa-slack:before {\n  content: "\\F198";\n}\n.fa-envelope-square:before {\n  content: "\\F199";\n}\n.fa-wordpress:before {\n  content: "\\F19A";\n}\n.fa-openid:before {\n  content: "\\F19B";\n}\n.fa-institution:before,\n.fa-bank:before,\n.fa-university:before {\n  content: "\\F19C";\n}\n.fa-mortar-board:before,\n.fa-graduation-cap:before {\n  content: "\\F19D";\n}\n.fa-yahoo:before {\n  content: "\\F19E";\n}\n.fa-google:before {\n  content: "\\F1A0";\n}\n.fa-reddit:before {\n  content: "\\F1A1";\n}\n.fa-reddit-square:before {\n  content: "\\F1A2";\n}\n.fa-stumbleupon-circle:before {\n  content: "\\F1A3";\n}\n.fa-stumbleupon:before {\n  content: "\\F1A4";\n}\n.fa-delicious:before {\n  content: "\\F1A5";\n}\n.fa-digg:before {\n  content: "\\F1A6";\n}\n.fa-pied-piper-pp:before {\n  content: "\\F1A7";\n}\n.fa-pied-piper-alt:before {\n  content: "\\F1A8";\n}\n.fa-drupal:before {\n  content: "\\F1A9";\n}\n.fa-joomla:before {\n  content: "\\F1AA";\n}\n.fa-language:before {\n  content: "\\F1AB";\n}\n.fa-fax:before {\n  content: "\\F1AC";\n}\n.fa-building:before {\n  content: "\\F1AD";\n}\n.fa-child:before {\n  content: "\\F1AE";\n}\n.fa-paw:before {\n  content: "\\F1B0";\n}\n.fa-spoon:before {\n  content: "\\F1B1";\n}\n.fa-cube:before {\n  content: "\\F1B2";\n}\n.fa-cubes:before {\n  content: "\\F1B3";\n}\n.fa-behance:before {\n  content: "\\F1B4";\n}\n.fa-behance-square:before {\n  content: "\\F1B5";\n}\n.fa-steam:before {\n  content: "\\F1B6";\n}\n.fa-steam-square:before {\n  content: "\\F1B7";\n}\n.fa-recycle:before {\n  content: "\\F1B8";\n}\n.fa-automobile:before,\n.fa-car:before {\n  content: "\\F1B9";\n}\n.fa-cab:before,\n.fa-taxi:before {\n  content: "\\F1BA";\n}\n.fa-tree:before {\n  content: "\\F1BB";\n}\n.fa-spotify:before {\n  content: "\\F1BC";\n}\n.fa-deviantart:before {\n  content: "\\F1BD";\n}\n.fa-soundcloud:before {\n  content: "\\F1BE";\n}\n.fa-database:before {\n  content: "\\F1C0";\n}\n.fa-file-pdf-o:before {\n  content: "\\F1C1";\n}\n.fa-file-word-o:before {\n  content: "\\F1C2";\n}\n.fa-file-excel-o:before {\n  content: "\\F1C3";\n}\n.fa-file-powerpoint-o:before {\n  content: "\\F1C4";\n}\n.fa-file-photo-o:before,\n.fa-file-picture-o:before,\n.fa-file-image-o:before {\n  content: "\\F1C5";\n}\n.fa-file-zip-o:before,\n.fa-file-archive-o:before {\n  content: "\\F1C6";\n}\n.fa-file-sound-o:before,\n.fa-file-audio-o:before {\n  content: "\\F1C7";\n}\n.fa-file-movie-o:before,\n.fa-file-video-o:before {\n  content: "\\F1C8";\n}\n.fa-file-code-o:before {\n  content: "\\F1C9";\n}\n.fa-vine:before {\n  content: "\\F1CA";\n}\n.fa-codepen:before {\n  content: "\\F1CB";\n}\n.fa-jsfiddle:before {\n  content: "\\F1CC";\n}\n.fa-life-bouy:before,\n.fa-life-buoy:before,\n.fa-life-saver:before,\n.fa-support:before,\n.fa-life-ring:before {\n  content: "\\F1CD";\n}\n.fa-circle-o-notch:before {\n  content: "\\F1CE";\n}\n.fa-ra:before,\n.fa-resistance:before,\n.fa-rebel:before {\n  content: "\\F1D0";\n}\n.fa-ge:before,\n.fa-empire:before {\n  content: "\\F1D1";\n}\n.fa-git-square:before {\n  content: "\\F1D2";\n}\n.fa-git:before {\n  content: "\\F1D3";\n}\n.fa-y-combinator-square:before,\n.fa-yc-square:before,\n.fa-hacker-news:before {\n  content: "\\F1D4";\n}\n.fa-tencent-weibo:before {\n  content: "\\F1D5";\n}\n.fa-qq:before {\n  content: "\\F1D6";\n}\n.fa-wechat:before,\n.fa-weixin:before {\n  content: "\\F1D7";\n}\n.fa-send:before,\n.fa-paper-plane:before {\n  content: "\\F1D8";\n}\n.fa-send-o:before,\n.fa-paper-plane-o:before {\n  content: "\\F1D9";\n}\n.fa-history:before {\n  content: "\\F1DA";\n}\n.fa-circle-thin:before {\n  content: "\\F1DB";\n}\n.fa-header:before {\n  content: "\\F1DC";\n}\n.fa-paragraph:before {\n  content: "\\F1DD";\n}\n.fa-sliders:before {\n  content: "\\F1DE";\n}\n.fa-share-alt:before {\n  content: "\\F1E0";\n}\n.fa-share-alt-square:before {\n  content: "\\F1E1";\n}\n.fa-bomb:before {\n  content: "\\F1E2";\n}\n.fa-soccer-ball-o:before,\n.fa-futbol-o:before {\n  content: "\\F1E3";\n}\n.fa-tty:before {\n  content: "\\F1E4";\n}\n.fa-binoculars:before {\n  content: "\\F1E5";\n}\n.fa-plug:before {\n  content: "\\F1E6";\n}\n.fa-slideshare:before {\n  content: "\\F1E7";\n}\n.fa-twitch:before {\n  content: "\\F1E8";\n}\n.fa-yelp:before {\n  content: "\\F1E9";\n}\n.fa-newspaper-o:before {\n  content: "\\F1EA";\n}\n.fa-wifi:before {\n  content: "\\F1EB";\n}\n.fa-calculator:before {\n  content: "\\F1EC";\n}\n.fa-paypal:before {\n  content: "\\F1ED";\n}\n.fa-google-wallet:before {\n  content: "\\F1EE";\n}\n.fa-cc-visa:before {\n  content: "\\F1F0";\n}\n.fa-cc-mastercard:before {\n  content: "\\F1F1";\n}\n.fa-cc-discover:before {\n  content: "\\F1F2";\n}\n.fa-cc-amex:before {\n  content: "\\F1F3";\n}\n.fa-cc-paypal:before {\n  content: "\\F1F4";\n}\n.fa-cc-stripe:before {\n  content: "\\F1F5";\n}\n.fa-bell-slash:before {\n  content: "\\F1F6";\n}\n.fa-bell-slash-o:before {\n  content: "\\F1F7";\n}\n.fa-trash:before {\n  content: "\\F1F8";\n}\n.fa-copyright:before {\n  content: "\\F1F9";\n}\n.fa-at:before {\n  content: "\\F1FA";\n}\n.fa-eyedropper:before {\n  content: "\\F1FB";\n}\n.fa-paint-brush:before {\n  content: "\\F1FC";\n}\n.fa-birthday-cake:before {\n  content: "\\F1FD";\n}\n.fa-area-chart:before {\n  content: "\\F1FE";\n}\n.fa-pie-chart:before {\n  content: "\\F200";\n}\n.fa-line-chart:before {\n  content: "\\F201";\n}\n.fa-lastfm:before {\n  content: "\\F202";\n}\n.fa-lastfm-square:before {\n  content: "\\F203";\n}\n.fa-toggle-off:before {\n  content: "\\F204";\n}\n.fa-toggle-on:before {\n  content: "\\F205";\n}\n.fa-bicycle:before {\n  content: "\\F206";\n}\n.fa-bus:before {\n  content: "\\F207";\n}\n.fa-ioxhost:before {\n  content: "\\F208";\n}\n.fa-angellist:before {\n  content: "\\F209";\n}\n.fa-cc:before {\n  content: "\\F20A";\n}\n.fa-shekel:before,\n.fa-sheqel:before,\n.fa-ils:before {\n  content: "\\F20B";\n}\n.fa-meanpath:before {\n  content: "\\F20C";\n}\n.fa-buysellads:before {\n  content: "\\F20D";\n}\n.fa-connectdevelop:before {\n  content: "\\F20E";\n}\n.fa-dashcube:before {\n  content: "\\F210";\n}\n.fa-forumbee:before {\n  content: "\\F211";\n}\n.fa-leanpub:before {\n  content: "\\F212";\n}\n.fa-sellsy:before {\n  content: "\\F213";\n}\n.fa-shirtsinbulk:before {\n  content: "\\F214";\n}\n.fa-simplybuilt:before {\n  content: "\\F215";\n}\n.fa-skyatlas:before {\n  content: "\\F216";\n}\n.fa-cart-plus:before {\n  content: "\\F217";\n}\n.fa-cart-arrow-down:before {\n  content: "\\F218";\n}\n.fa-diamond:before {\n  content: "\\F219";\n}\n.fa-ship:before {\n  content: "\\F21A";\n}\n.fa-user-secret:before {\n  content: "\\F21B";\n}\n.fa-motorcycle:before {\n  content: "\\F21C";\n}\n.fa-street-view:before {\n  content: "\\F21D";\n}\n.fa-heartbeat:before {\n  content: "\\F21E";\n}\n.fa-venus:before {\n  content: "\\F221";\n}\n.fa-mars:before {\n  content: "\\F222";\n}\n.fa-mercury:before {\n  content: "\\F223";\n}\n.fa-intersex:before,\n.fa-transgender:before {\n  content: "\\F224";\n}\n.fa-transgender-alt:before {\n  content: "\\F225";\n}\n.fa-venus-double:before {\n  content: "\\F226";\n}\n.fa-mars-double:before {\n  content: "\\F227";\n}\n.fa-venus-mars:before {\n  content: "\\F228";\n}\n.fa-mars-stroke:before {\n  content: "\\F229";\n}\n.fa-mars-stroke-v:before {\n  content: "\\F22A";\n}\n.fa-mars-stroke-h:before {\n  content: "\\F22B";\n}\n.fa-neuter:before {\n  content: "\\F22C";\n}\n.fa-genderless:before {\n  content: "\\F22D";\n}\n.fa-facebook-official:before {\n  content: "\\F230";\n}\n.fa-pinterest-p:before {\n  content: "\\F231";\n}\n.fa-whatsapp:before {\n  content: "\\F232";\n}\n.fa-server:before {\n  content: "\\F233";\n}\n.fa-user-plus:before {\n  content: "\\F234";\n}\n.fa-user-times:before {\n  content: "\\F235";\n}\n.fa-hotel:before,\n.fa-bed:before {\n  content: "\\F236";\n}\n.fa-viacoin:before {\n  content: "\\F237";\n}\n.fa-train:before {\n  content: "\\F238";\n}\n.fa-subway:before {\n  content: "\\F239";\n}\n.fa-medium:before {\n  content: "\\F23A";\n}\n.fa-yc:before,\n.fa-y-combinator:before {\n  content: "\\F23B";\n}\n.fa-optin-monster:before {\n  content: "\\F23C";\n}\n.fa-opencart:before {\n  content: "\\F23D";\n}\n.fa-expeditedssl:before {\n  content: "\\F23E";\n}\n.fa-battery-4:before,\n.fa-battery:before,\n.fa-battery-full:before {\n  content: "\\F240";\n}\n.fa-battery-3:before,\n.fa-battery-three-quarters:before {\n  content: "\\F241";\n}\n.fa-battery-2:before,\n.fa-battery-half:before {\n  content: "\\F242";\n}\n.fa-battery-1:before,\n.fa-battery-quarter:before {\n  content: "\\F243";\n}\n.fa-battery-0:before,\n.fa-battery-empty:before {\n  content: "\\F244";\n}\n.fa-mouse-pointer:before {\n  content: "\\F245";\n}\n.fa-i-cursor:before {\n  content: "\\F246";\n}\n.fa-object-group:before {\n  content: "\\F247";\n}\n.fa-object-ungroup:before {\n  content: "\\F248";\n}\n.fa-sticky-note:before {\n  content: "\\F249";\n}\n.fa-sticky-note-o:before {\n  content: "\\F24A";\n}\n.fa-cc-jcb:before {\n  content: "\\F24B";\n}\n.fa-cc-diners-club:before {\n  content: "\\F24C";\n}\n.fa-clone:before {\n  content: "\\F24D";\n}\n.fa-balance-scale:before {\n  content: "\\F24E";\n}\n.fa-hourglass-o:before {\n  content: "\\F250";\n}\n.fa-hourglass-1:before,\n.fa-hourglass-start:before {\n  content: "\\F251";\n}\n.fa-hourglass-2:before,\n.fa-hourglass-half:before {\n  content: "\\F252";\n}\n.fa-hourglass-3:before,\n.fa-hourglass-end:before {\n  content: "\\F253";\n}\n.fa-hourglass:before {\n  content: "\\F254";\n}\n.fa-hand-grab-o:before,\n.fa-hand-rock-o:before {\n  content: "\\F255";\n}\n.fa-hand-stop-o:before,\n.fa-hand-paper-o:before {\n  content: "\\F256";\n}\n.fa-hand-scissors-o:before {\n  content: "\\F257";\n}\n.fa-hand-lizard-o:before {\n  content: "\\F258";\n}\n.fa-hand-spock-o:before {\n  content: "\\F259";\n}\n.fa-hand-pointer-o:before {\n  content: "\\F25A";\n}\n.fa-hand-peace-o:before {\n  content: "\\F25B";\n}\n.fa-trademark:before {\n  content: "\\F25C";\n}\n.fa-registered:before {\n  content: "\\F25D";\n}\n.fa-creative-commons:before {\n  content: "\\F25E";\n}\n.fa-gg:before {\n  content: "\\F260";\n}\n.fa-gg-circle:before {\n  content: "\\F261";\n}\n.fa-tripadvisor:before {\n  content: "\\F262";\n}\n.fa-odnoklassniki:before {\n  content: "\\F263";\n}\n.fa-odnoklassniki-square:before {\n  content: "\\F264";\n}\n.fa-get-pocket:before {\n  content: "\\F265";\n}\n.fa-wikipedia-w:before {\n  content: "\\F266";\n}\n.fa-safari:before {\n  content: "\\F267";\n}\n.fa-chrome:before {\n  content: "\\F268";\n}\n.fa-firefox:before {\n  content: "\\F269";\n}\n.fa-opera:before {\n  content: "\\F26A";\n}\n.fa-internet-explorer:before {\n  content: "\\F26B";\n}\n.fa-tv:before,\n.fa-television:before {\n  content: "\\F26C";\n}\n.fa-contao:before {\n  content: "\\F26D";\n}\n.fa-500px:before {\n  content: "\\F26E";\n}\n.fa-amazon:before {\n  content: "\\F270";\n}\n.fa-calendar-plus-o:before {\n  content: "\\F271";\n}\n.fa-calendar-minus-o:before {\n  content: "\\F272";\n}\n.fa-calendar-times-o:before {\n  content: "\\F273";\n}\n.fa-calendar-check-o:before {\n  content: "\\F274";\n}\n.fa-industry:before {\n  content: "\\F275";\n}\n.fa-map-pin:before {\n  content: "\\F276";\n}\n.fa-map-signs:before {\n  content: "\\F277";\n}\n.fa-map-o:before {\n  content: "\\F278";\n}\n.fa-map:before {\n  content: "\\F279";\n}\n.fa-commenting:before {\n  content: "\\F27A";\n}\n.fa-commenting-o:before {\n  content: "\\F27B";\n}\n.fa-houzz:before {\n  content: "\\F27C";\n}\n.fa-vimeo:before {\n  content: "\\F27D";\n}\n.fa-black-tie:before {\n  content: "\\F27E";\n}\n.fa-fonticons:before {\n  content: "\\F280";\n}\n.fa-reddit-alien:before {\n  content: "\\F281";\n}\n.fa-edge:before {\n  content: "\\F282";\n}\n.fa-credit-card-alt:before {\n  content: "\\F283";\n}\n.fa-codiepie:before {\n  content: "\\F284";\n}\n.fa-modx:before {\n  content: "\\F285";\n}\n.fa-fort-awesome:before {\n  content: "\\F286";\n}\n.fa-usb:before {\n  content: "\\F287";\n}\n.fa-product-hunt:before {\n  content: "\\F288";\n}\n.fa-mixcloud:before {\n  content: "\\F289";\n}\n.fa-scribd:before {\n  content: "\\F28A";\n}\n.fa-pause-circle:before {\n  content: "\\F28B";\n}\n.fa-pause-circle-o:before {\n  content: "\\F28C";\n}\n.fa-stop-circle:before {\n  content: "\\F28D";\n}\n.fa-stop-circle-o:before {\n  content: "\\F28E";\n}\n.fa-shopping-bag:before {\n  content: "\\F290";\n}\n.fa-shopping-basket:before {\n  content: "\\F291";\n}\n.fa-hashtag:before {\n  content: "\\F292";\n}\n.fa-bluetooth:before {\n  content: "\\F293";\n}\n.fa-bluetooth-b:before {\n  content: "\\F294";\n}\n.fa-percent:before {\n  content: "\\F295";\n}\n.fa-gitlab:before {\n  content: "\\F296";\n}\n.fa-wpbeginner:before {\n  content: "\\F297";\n}\n.fa-wpforms:before {\n  content: "\\F298";\n}\n.fa-envira:before {\n  content: "\\F299";\n}\n.fa-universal-access:before {\n  content: "\\F29A";\n}\n.fa-wheelchair-alt:before {\n  content: "\\F29B";\n}\n.fa-question-circle-o:before {\n  content: "\\F29C";\n}\n.fa-blind:before {\n  content: "\\F29D";\n}\n.fa-audio-description:before {\n  content: "\\F29E";\n}\n.fa-volume-control-phone:before {\n  content: "\\F2A0";\n}\n.fa-braille:before {\n  content: "\\F2A1";\n}\n.fa-assistive-listening-systems:before {\n  content: "\\F2A2";\n}\n.fa-asl-interpreting:before,\n.fa-american-sign-language-interpreting:before {\n  content: "\\F2A3";\n}\n.fa-deafness:before,\n.fa-hard-of-hearing:before,\n.fa-deaf:before {\n  content: "\\F2A4";\n}\n.fa-glide:before {\n  content: "\\F2A5";\n}\n.fa-glide-g:before {\n  content: "\\F2A6";\n}\n.fa-signing:before,\n.fa-sign-language:before {\n  content: "\\F2A7";\n}\n.fa-low-vision:before {\n  content: "\\F2A8";\n}\n.fa-viadeo:before {\n  content: "\\F2A9";\n}\n.fa-viadeo-square:before {\n  content: "\\F2AA";\n}\n.fa-snapchat:before {\n  content: "\\F2AB";\n}\n.fa-snapchat-ghost:before {\n  content: "\\F2AC";\n}\n.fa-snapchat-square:before {\n  content: "\\F2AD";\n}\n.fa-pied-piper:before {\n  content: "\\F2AE";\n}\n.fa-first-order:before {\n  content: "\\F2B0";\n}\n.fa-yoast:before {\n  content: "\\F2B1";\n}\n.fa-themeisle:before {\n  content: "\\F2B2";\n}\n.fa-google-plus-circle:before,\n.fa-google-plus-official:before {\n  content: "\\F2B3";\n}\n.fa-fa:before,\n.fa-font-awesome:before {\n  content: "\\F2B4";\n}\n.fa-handshake-o:before {\n  content: "\\F2B5";\n}\n.fa-envelope-open:before {\n  content: "\\F2B6";\n}\n.fa-envelope-open-o:before {\n  content: "\\F2B7";\n}\n.fa-linode:before {\n  content: "\\F2B8";\n}\n.fa-address-book:before {\n  content: "\\F2B9";\n}\n.fa-address-book-o:before {\n  content: "\\F2BA";\n}\n.fa-vcard:before,\n.fa-address-card:before {\n  content: "\\F2BB";\n}\n.fa-vcard-o:before,\n.fa-address-card-o:before {\n  content: "\\F2BC";\n}\n.fa-user-circle:before {\n  content: "\\F2BD";\n}\n.fa-user-circle-o:before {\n  content: "\\F2BE";\n}\n.fa-user-o:before {\n  content: "\\F2C0";\n}\n.fa-id-badge:before {\n  content: "\\F2C1";\n}\n.fa-drivers-license:before,\n.fa-id-card:before {\n  content: "\\F2C2";\n}\n.fa-drivers-license-o:before,\n.fa-id-card-o:before {\n  content: "\\F2C3";\n}\n.fa-quora:before {\n  content: "\\F2C4";\n}\n.fa-free-code-camp:before {\n  content: "\\F2C5";\n}\n.fa-telegram:before {\n  content: "\\F2C6";\n}\n.fa-thermometer-4:before,\n.fa-thermometer:before,\n.fa-thermometer-full:before {\n  content: "\\F2C7";\n}\n.fa-thermometer-3:before,\n.fa-thermometer-three-quarters:before {\n  content: "\\F2C8";\n}\n.fa-thermometer-2:before,\n.fa-thermometer-half:before {\n  content: "\\F2C9";\n}\n.fa-thermometer-1:before,\n.fa-thermometer-quarter:before {\n  content: "\\F2CA";\n}\n.fa-thermometer-0:before,\n.fa-thermometer-empty:before {\n  content: "\\F2CB";\n}\n.fa-shower:before {\n  content: "\\F2CC";\n}\n.fa-bathtub:before,\n.fa-s15:before,\n.fa-bath:before {\n  content: "\\F2CD";\n}\n.fa-podcast:before {\n  content: "\\F2CE";\n}\n.fa-window-maximize:before {\n  content: "\\F2D0";\n}\n.fa-window-minimize:before {\n  content: "\\F2D1";\n}\n.fa-window-restore:before {\n  content: "\\F2D2";\n}\n.fa-times-rectangle:before,\n.fa-window-close:before {\n  content: "\\F2D3";\n}\n.fa-times-rectangle-o:before,\n.fa-window-close-o:before {\n  content: "\\F2D4";\n}\n.fa-bandcamp:before {\n  content: "\\F2D5";\n}\n.fa-grav:before {\n  content: "\\F2D6";\n}\n.fa-etsy:before {\n  content: "\\F2D7";\n}\n.fa-imdb:before {\n  content: "\\F2D8";\n}\n.fa-ravelry:before {\n  content: "\\F2D9";\n}\n.fa-eercast:before {\n  content: "\\F2DA";\n}\n.fa-microchip:before {\n  content: "\\F2DB";\n}\n.fa-snowflake-o:before {\n  content: "\\F2DC";\n}\n.fa-superpowers:before {\n  content: "\\F2DD";\n}\n.fa-wpexplorer:before {\n  content: "\\F2DE";\n}\n.fa-meetup:before {\n  content: "\\F2E0";\n}\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n.sr-only-focusable:active,\n.sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto;\n}\n',""])},function(e,n){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},function(e,n,t){e.exports=t.p+"674f50d287a8c48dc19ba404d20fe713.eot"},function(e,n,t){e.exports=t.p+"674f50d287a8c48dc19ba404d20fe713.eot"},function(e,n,t){e.exports=t.p+"af7ae505a9eed503f8b8e6982036873e.woff2"},function(e,n,t){e.exports=t.p+"fee66e712a8a08eef5805a46892932ad.woff"},function(e,n,t){e.exports=t.p+"b06871f281fee6b241d60582ae9369b9.ttf"},function(e,n,t){e.exports=t.p+"912ec66d7572ff821749319396470bde.svg"}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,